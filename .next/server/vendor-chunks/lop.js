/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/lop";
exports.ids = ["vendor-chunks/lop"];
exports.modules = {

/***/ "(rsc)/./node_modules/lop/index.js":
/*!***********************************!*\
  !*** ./node_modules/lop/index.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("exports.Parser = __webpack_require__(/*! ./lib/parser */ \"(rsc)/./node_modules/lop/lib/parser.js\").Parser;\nexports.rules = __webpack_require__(/*! ./lib/rules */ \"(rsc)/./node_modules/lop/lib/rules.js\");\nexports.errors = __webpack_require__(/*! ./lib/errors */ \"(rsc)/./node_modules/lop/lib/errors.js\");\nexports.results = __webpack_require__(/*! ./lib/parsing-results */ \"(rsc)/./node_modules/lop/lib/parsing-results.js\");\nexports.StringSource = __webpack_require__(/*! ./lib/StringSource */ \"(rsc)/./node_modules/lop/lib/StringSource.js\");\nexports.Token = __webpack_require__(/*! ./lib/Token */ \"(rsc)/./node_modules/lop/lib/Token.js\");\nexports.bottomUp = __webpack_require__(/*! ./lib/bottom-up */ \"(rsc)/./node_modules/lop/lib/bottom-up.js\");\nexports.RegexTokeniser = __webpack_require__(/*! ./lib/regex-tokeniser */ \"(rsc)/./node_modules/lop/lib/regex-tokeniser.js\").RegexTokeniser;\nexports.rule = function(ruleBuilder) {\n    var rule;\n    return function(input) {\n        if (!rule) {\n            rule = ruleBuilder();\n        }\n        return rule(input);\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbG9wL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBQSx5R0FBK0M7QUFDL0NBLCtGQUFzQztBQUN0Q0Esa0dBQXdDO0FBQ3hDQSxxSEFBa0Q7QUFDbERBLG9IQUFvRDtBQUNwREEsK0ZBQXNDO0FBQ3RDQSwwR0FBNkM7QUFDN0NBLDJJQUF3RTtBQUV4RUEsWUFBWSxHQUFHLFNBQVNXLFdBQVc7SUFDL0IsSUFBSUQ7SUFDSixPQUFPLFNBQVNFLEtBQUs7UUFDakIsSUFBSSxDQUFDRixNQUFNO1lBQ1BBLE9BQU9DO1FBQ1g7UUFDQSxPQUFPRCxLQUFLRTtJQUNoQjtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdW1lYnVpbGRlci1haS8uL25vZGVfbW9kdWxlcy9sb3AvaW5kZXguanM/MDBhZiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzLlBhcnNlciA9IHJlcXVpcmUoXCIuL2xpYi9wYXJzZXJcIikuUGFyc2VyO1xuZXhwb3J0cy5ydWxlcyA9IHJlcXVpcmUoXCIuL2xpYi9ydWxlc1wiKTtcbmV4cG9ydHMuZXJyb3JzID0gcmVxdWlyZShcIi4vbGliL2Vycm9yc1wiKTtcbmV4cG9ydHMucmVzdWx0cyA9IHJlcXVpcmUoXCIuL2xpYi9wYXJzaW5nLXJlc3VsdHNcIik7XG5leHBvcnRzLlN0cmluZ1NvdXJjZSA9IHJlcXVpcmUoXCIuL2xpYi9TdHJpbmdTb3VyY2VcIik7XG5leHBvcnRzLlRva2VuID0gcmVxdWlyZShcIi4vbGliL1Rva2VuXCIpO1xuZXhwb3J0cy5ib3R0b21VcCA9IHJlcXVpcmUoXCIuL2xpYi9ib3R0b20tdXBcIik7XG5leHBvcnRzLlJlZ2V4VG9rZW5pc2VyID0gcmVxdWlyZShcIi4vbGliL3JlZ2V4LXRva2VuaXNlclwiKS5SZWdleFRva2VuaXNlcjtcblxuZXhwb3J0cy5ydWxlID0gZnVuY3Rpb24ocnVsZUJ1aWxkZXIpIHtcbiAgICB2YXIgcnVsZTtcbiAgICByZXR1cm4gZnVuY3Rpb24oaW5wdXQpIHtcbiAgICAgICAgaWYgKCFydWxlKSB7XG4gICAgICAgICAgICBydWxlID0gcnVsZUJ1aWxkZXIoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcnVsZShpbnB1dCk7XG4gICAgfTtcbn07XG4iXSwibmFtZXMiOlsiZXhwb3J0cyIsIlBhcnNlciIsInJlcXVpcmUiLCJydWxlcyIsImVycm9ycyIsInJlc3VsdHMiLCJTdHJpbmdTb3VyY2UiLCJUb2tlbiIsImJvdHRvbVVwIiwiUmVnZXhUb2tlbmlzZXIiLCJydWxlIiwicnVsZUJ1aWxkZXIiLCJpbnB1dCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/lop/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/lop/lib/StringSource.js":
/*!**********************************************!*\
  !*** ./node_modules/lop/lib/StringSource.js ***!
  \**********************************************/
/***/ ((module) => {

eval("var StringSource = module.exports = function(string, description) {\n    var self = {\n        asString: function() {\n            return string;\n        },\n        range: function(startIndex, endIndex) {\n            return new StringSourceRange(string, description, startIndex, endIndex);\n        }\n    };\n    return self;\n};\nvar StringSourceRange = function(string, description, startIndex, endIndex) {\n    this._string = string;\n    this._description = description;\n    this._startIndex = startIndex;\n    this._endIndex = endIndex;\n};\nStringSourceRange.prototype.to = function(otherRange) {\n    // TODO: Assert that tokens are the same across both iterators\n    return new StringSourceRange(this._string, this._description, this._startIndex, otherRange._endIndex);\n};\nStringSourceRange.prototype.describe = function() {\n    var position = this._position();\n    var description = this._description ? this._description + \"\\n\" : \"\";\n    return description + \"Line number: \" + position.lineNumber + \"\\nCharacter number: \" + position.characterNumber;\n};\nStringSourceRange.prototype.lineNumber = function() {\n    return this._position().lineNumber;\n};\nStringSourceRange.prototype.characterNumber = function() {\n    return this._position().characterNumber;\n};\nStringSourceRange.prototype._position = function() {\n    var self = this;\n    var index = 0;\n    var nextNewLine = function() {\n        return self._string.indexOf(\"\\n\", index);\n    };\n    var lineNumber = 1;\n    while(nextNewLine() !== -1 && nextNewLine() < this._startIndex){\n        index = nextNewLine() + 1;\n        lineNumber += 1;\n    }\n    var characterNumber = this._startIndex - index + 1;\n    return {\n        lineNumber: lineNumber,\n        characterNumber: characterNumber\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN1bWVidWlsZGVyLWFpLy4vbm9kZV9tb2R1bGVzL2xvcC9saWIvU3RyaW5nU291cmNlLmpzP2E4N2UiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIFN0cmluZ1NvdXJjZSA9IG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oc3RyaW5nLCBkZXNjcmlwdGlvbikge1xuICAgIHZhciBzZWxmID0ge1xuICAgICAgICBhc1N0cmluZzogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZXR1cm4gc3RyaW5nO1xuICAgICAgICB9LFxuICAgICAgICByYW5nZTogZnVuY3Rpb24oc3RhcnRJbmRleCwgZW5kSW5kZXgpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgU3RyaW5nU291cmNlUmFuZ2Uoc3RyaW5nLCBkZXNjcmlwdGlvbiwgc3RhcnRJbmRleCwgZW5kSW5kZXgpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4gc2VsZjtcbn07XG5cbnZhciBTdHJpbmdTb3VyY2VSYW5nZSA9IGZ1bmN0aW9uKHN0cmluZywgZGVzY3JpcHRpb24sIHN0YXJ0SW5kZXgsIGVuZEluZGV4KSB7XG4gICAgdGhpcy5fc3RyaW5nID0gc3RyaW5nO1xuICAgIHRoaXMuX2Rlc2NyaXB0aW9uID0gZGVzY3JpcHRpb247XG4gICAgdGhpcy5fc3RhcnRJbmRleCA9IHN0YXJ0SW5kZXg7XG4gICAgdGhpcy5fZW5kSW5kZXggPSBlbmRJbmRleDtcbn07XG5cblN0cmluZ1NvdXJjZVJhbmdlLnByb3RvdHlwZS50byA9IGZ1bmN0aW9uKG90aGVyUmFuZ2UpIHtcbiAgICAvLyBUT0RPOiBBc3NlcnQgdGhhdCB0b2tlbnMgYXJlIHRoZSBzYW1lIGFjcm9zcyBib3RoIGl0ZXJhdG9yc1xuICAgIHJldHVybiBuZXcgU3RyaW5nU291cmNlUmFuZ2UodGhpcy5fc3RyaW5nLCB0aGlzLl9kZXNjcmlwdGlvbiwgdGhpcy5fc3RhcnRJbmRleCwgb3RoZXJSYW5nZS5fZW5kSW5kZXgpO1xufTtcblxuU3RyaW5nU291cmNlUmFuZ2UucHJvdG90eXBlLmRlc2NyaWJlID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHBvc2l0aW9uID0gdGhpcy5fcG9zaXRpb24oKTtcbiAgICB2YXIgZGVzY3JpcHRpb24gPSB0aGlzLl9kZXNjcmlwdGlvbiA/IHRoaXMuX2Rlc2NyaXB0aW9uICsgXCJcXG5cIiA6IFwiXCI7XG4gICAgcmV0dXJuIGRlc2NyaXB0aW9uICsgXCJMaW5lIG51bWJlcjogXCIgKyBwb3NpdGlvbi5saW5lTnVtYmVyICsgXCJcXG5DaGFyYWN0ZXIgbnVtYmVyOiBcIiArIHBvc2l0aW9uLmNoYXJhY3Rlck51bWJlcjtcbn07XG5cblN0cmluZ1NvdXJjZVJhbmdlLnByb3RvdHlwZS5saW5lTnVtYmVyID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuX3Bvc2l0aW9uKCkubGluZU51bWJlcjtcbn07XG5cblN0cmluZ1NvdXJjZVJhbmdlLnByb3RvdHlwZS5jaGFyYWN0ZXJOdW1iZXIgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5fcG9zaXRpb24oKS5jaGFyYWN0ZXJOdW1iZXI7XG59O1xuXG5TdHJpbmdTb3VyY2VSYW5nZS5wcm90b3R5cGUuX3Bvc2l0aW9uID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgIHZhciBpbmRleCA9IDA7XG4gICAgdmFyIG5leHROZXdMaW5lID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBzZWxmLl9zdHJpbmcuaW5kZXhPZihcIlxcblwiLCBpbmRleCk7XG4gICAgfTtcblxuICAgIHZhciBsaW5lTnVtYmVyID0gMTtcbiAgICB3aGlsZSAobmV4dE5ld0xpbmUoKSAhPT0gLTEgJiYgbmV4dE5ld0xpbmUoKSA8IHRoaXMuX3N0YXJ0SW5kZXgpIHtcbiAgICAgICAgaW5kZXggPSBuZXh0TmV3TGluZSgpICsgMTtcbiAgICAgICAgbGluZU51bWJlciArPSAxO1xuICAgIH1cbiAgICB2YXIgY2hhcmFjdGVyTnVtYmVyID0gdGhpcy5fc3RhcnRJbmRleCAtIGluZGV4ICsgMTtcbiAgICByZXR1cm4ge2xpbmVOdW1iZXI6IGxpbmVOdW1iZXIsIGNoYXJhY3Rlck51bWJlcjogY2hhcmFjdGVyTnVtYmVyfTtcbn07XG4iXSwibmFtZXMiOlsiU3RyaW5nU291cmNlIiwibW9kdWxlIiwiZXhwb3J0cyIsInN0cmluZyIsImRlc2NyaXB0aW9uIiwic2VsZiIsImFzU3RyaW5nIiwicmFuZ2UiLCJzdGFydEluZGV4IiwiZW5kSW5kZXgiLCJTdHJpbmdTb3VyY2VSYW5nZSIsIl9zdHJpbmciLCJfZGVzY3JpcHRpb24iLCJfc3RhcnRJbmRleCIsIl9lbmRJbmRleCIsInByb3RvdHlwZSIsInRvIiwib3RoZXJSYW5nZSIsImRlc2NyaWJlIiwicG9zaXRpb24iLCJfcG9zaXRpb24iLCJsaW5lTnVtYmVyIiwiY2hhcmFjdGVyTnVtYmVyIiwiaW5kZXgiLCJuZXh0TmV3TGluZSIsImluZGV4T2YiXSwibWFwcGluZ3MiOiJBQUFBLElBQUlBLGVBQWVDLE9BQU9DLE9BQU8sR0FBRyxTQUFTQyxNQUFNLEVBQUVDLFdBQVc7SUFDNUQsSUFBSUMsT0FBTztRQUNQQyxVQUFVO1lBQ04sT0FBT0g7UUFDWDtRQUNBSSxPQUFPLFNBQVNDLFVBQVUsRUFBRUMsUUFBUTtZQUNoQyxPQUFPLElBQUlDLGtCQUFrQlAsUUFBUUMsYUFBYUksWUFBWUM7UUFDbEU7SUFDSjtJQUNBLE9BQU9KO0FBQ1g7QUFFQSxJQUFJSyxvQkFBb0IsU0FBU1AsTUFBTSxFQUFFQyxXQUFXLEVBQUVJLFVBQVUsRUFBRUMsUUFBUTtJQUN0RSxJQUFJLENBQUNFLE9BQU8sR0FBR1I7SUFDZixJQUFJLENBQUNTLFlBQVksR0FBR1I7SUFDcEIsSUFBSSxDQUFDUyxXQUFXLEdBQUdMO0lBQ25CLElBQUksQ0FBQ00sU0FBUyxHQUFHTDtBQUNyQjtBQUVBQyxrQkFBa0JLLFNBQVMsQ0FBQ0MsRUFBRSxHQUFHLFNBQVNDLFVBQVU7SUFDaEQsOERBQThEO0lBQzlELE9BQU8sSUFBSVAsa0JBQWtCLElBQUksQ0FBQ0MsT0FBTyxFQUFFLElBQUksQ0FBQ0MsWUFBWSxFQUFFLElBQUksQ0FBQ0MsV0FBVyxFQUFFSSxXQUFXSCxTQUFTO0FBQ3hHO0FBRUFKLGtCQUFrQkssU0FBUyxDQUFDRyxRQUFRLEdBQUc7SUFDbkMsSUFBSUMsV0FBVyxJQUFJLENBQUNDLFNBQVM7SUFDN0IsSUFBSWhCLGNBQWMsSUFBSSxDQUFDUSxZQUFZLEdBQUcsSUFBSSxDQUFDQSxZQUFZLEdBQUcsT0FBTztJQUNqRSxPQUFPUixjQUFjLGtCQUFrQmUsU0FBU0UsVUFBVSxHQUFHLHlCQUF5QkYsU0FBU0csZUFBZTtBQUNsSDtBQUVBWixrQkFBa0JLLFNBQVMsQ0FBQ00sVUFBVSxHQUFHO0lBQ3JDLE9BQU8sSUFBSSxDQUFDRCxTQUFTLEdBQUdDLFVBQVU7QUFDdEM7QUFFQVgsa0JBQWtCSyxTQUFTLENBQUNPLGVBQWUsR0FBRztJQUMxQyxPQUFPLElBQUksQ0FBQ0YsU0FBUyxHQUFHRSxlQUFlO0FBQzNDO0FBRUFaLGtCQUFrQkssU0FBUyxDQUFDSyxTQUFTLEdBQUc7SUFDcEMsSUFBSWYsT0FBTyxJQUFJO0lBQ2YsSUFBSWtCLFFBQVE7SUFDWixJQUFJQyxjQUFjO1FBQ2QsT0FBT25CLEtBQUtNLE9BQU8sQ0FBQ2MsT0FBTyxDQUFDLE1BQU1GO0lBQ3RDO0lBRUEsSUFBSUYsYUFBYTtJQUNqQixNQUFPRyxrQkFBa0IsQ0FBQyxLQUFLQSxnQkFBZ0IsSUFBSSxDQUFDWCxXQUFXLENBQUU7UUFDN0RVLFFBQVFDLGdCQUFnQjtRQUN4QkgsY0FBYztJQUNsQjtJQUNBLElBQUlDLGtCQUFrQixJQUFJLENBQUNULFdBQVcsR0FBR1UsUUFBUTtJQUNqRCxPQUFPO1FBQUNGLFlBQVlBO1FBQVlDLGlCQUFpQkE7SUFBZTtBQUNwRSIsImZpbGUiOiIocnNjKS8uL25vZGVfbW9kdWxlcy9sb3AvbGliL1N0cmluZ1NvdXJjZS5qcyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/lop/lib/StringSource.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/lop/lib/Token.js":
/*!***************************************!*\
  !*** ./node_modules/lop/lib/Token.js ***!
  \***************************************/
/***/ ((module) => {

eval("module.exports = function(name, value, source) {\n    this.name = name;\n    this.value = value;\n    if (source) {\n        this.source = source;\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN1bWVidWlsZGVyLWFpLy4vbm9kZV9tb2R1bGVzL2xvcC9saWIvVG9rZW4uanM/ZDcwYyJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG5hbWUsIHZhbHVlLCBzb3VyY2UpIHtcbiAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgIHRoaXMudmFsdWUgPSB2YWx1ZTtcbiAgICBpZiAoc291cmNlKSB7XG4gICAgICAgIHRoaXMuc291cmNlID0gc291cmNlO1xuICAgIH1cbn07XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIm5hbWUiLCJ2YWx1ZSIsInNvdXJjZSJdLCJtYXBwaW5ncyI6IkFBQUFBLE9BQU9DLE9BQU8sR0FBRyxTQUFTQyxJQUFJLEVBQUVDLEtBQUssRUFBRUMsTUFBTTtJQUN6QyxJQUFJLENBQUNGLElBQUksR0FBR0E7SUFDWixJQUFJLENBQUNDLEtBQUssR0FBR0E7SUFDYixJQUFJQyxRQUFRO1FBQ1IsSUFBSSxDQUFDQSxNQUFNLEdBQUdBO0lBQ2xCO0FBQ0oiLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbG9wL2xpYi9Ub2tlbi5qcyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/lop/lib/Token.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/lop/lib/TokenIterator.js":
/*!***********************************************!*\
  !*** ./node_modules/lop/lib/TokenIterator.js ***!
  \***********************************************/
/***/ ((module) => {

eval("var TokenIterator = module.exports = function(tokens, startIndex) {\n    this._tokens = tokens;\n    this._startIndex = startIndex || 0;\n};\nTokenIterator.prototype.head = function() {\n    return this._tokens[this._startIndex];\n};\nTokenIterator.prototype.tail = function(startIndex) {\n    return new TokenIterator(this._tokens, this._startIndex + 1);\n};\nTokenIterator.prototype.toArray = function() {\n    return this._tokens.slice(this._startIndex);\n};\nTokenIterator.prototype.end = function() {\n    return this._tokens[this._tokens.length - 1];\n};\n// TODO: doesn't need to be a method, can be a separate function,\n// which simplifies implementation of the TokenIterator interface\nTokenIterator.prototype.to = function(end) {\n    var start = this.head().source;\n    var endToken = end.head() || end.end();\n    return start.to(endToken.source);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN1bWVidWlsZGVyLWFpLy4vbm9kZV9tb2R1bGVzL2xvcC9saWIvVG9rZW5JdGVyYXRvci5qcz9hM2E2Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBUb2tlbkl0ZXJhdG9yID0gbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbih0b2tlbnMsIHN0YXJ0SW5kZXgpIHtcbiAgICB0aGlzLl90b2tlbnMgPSB0b2tlbnM7XG4gICAgdGhpcy5fc3RhcnRJbmRleCA9IHN0YXJ0SW5kZXggfHwgMDtcbn07XG5cblRva2VuSXRlcmF0b3IucHJvdG90eXBlLmhlYWQgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5fdG9rZW5zW3RoaXMuX3N0YXJ0SW5kZXhdO1xufTtcblxuVG9rZW5JdGVyYXRvci5wcm90b3R5cGUudGFpbCA9IGZ1bmN0aW9uKHN0YXJ0SW5kZXgpIHtcbiAgICByZXR1cm4gbmV3IFRva2VuSXRlcmF0b3IodGhpcy5fdG9rZW5zLCB0aGlzLl9zdGFydEluZGV4ICsgMSk7XG59O1xuXG5Ub2tlbkl0ZXJhdG9yLnByb3RvdHlwZS50b0FycmF5ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuX3Rva2Vucy5zbGljZSh0aGlzLl9zdGFydEluZGV4KTtcbn07XG5cblRva2VuSXRlcmF0b3IucHJvdG90eXBlLmVuZCA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLl90b2tlbnNbdGhpcy5fdG9rZW5zLmxlbmd0aCAtIDFdO1xufTtcblxuLy8gVE9ETzogZG9lc24ndCBuZWVkIHRvIGJlIGEgbWV0aG9kLCBjYW4gYmUgYSBzZXBhcmF0ZSBmdW5jdGlvbixcbi8vIHdoaWNoIHNpbXBsaWZpZXMgaW1wbGVtZW50YXRpb24gb2YgdGhlIFRva2VuSXRlcmF0b3IgaW50ZXJmYWNlXG5Ub2tlbkl0ZXJhdG9yLnByb3RvdHlwZS50byA9IGZ1bmN0aW9uKGVuZCkge1xuICAgIHZhciBzdGFydCA9IHRoaXMuaGVhZCgpLnNvdXJjZTtcbiAgICB2YXIgZW5kVG9rZW4gPSBlbmQuaGVhZCgpIHx8IGVuZC5lbmQoKTtcbiAgICByZXR1cm4gc3RhcnQudG8oZW5kVG9rZW4uc291cmNlKTtcbn07XG4iXSwibmFtZXMiOlsiVG9rZW5JdGVyYXRvciIsIm1vZHVsZSIsImV4cG9ydHMiLCJ0b2tlbnMiLCJzdGFydEluZGV4IiwiX3Rva2VucyIsIl9zdGFydEluZGV4IiwicHJvdG90eXBlIiwiaGVhZCIsInRhaWwiLCJ0b0FycmF5Iiwic2xpY2UiLCJlbmQiLCJsZW5ndGgiLCJ0byIsInN0YXJ0Iiwic291cmNlIiwiZW5kVG9rZW4iXSwibWFwcGluZ3MiOiJBQUFBLElBQUlBLGdCQUFnQkMsT0FBT0MsT0FBTyxHQUFHLFNBQVNDLE1BQU0sRUFBRUMsVUFBVTtJQUM1RCxJQUFJLENBQUNDLE9BQU8sR0FBR0Y7SUFDZixJQUFJLENBQUNHLFdBQVcsR0FBR0YsY0FBYztBQUNyQztBQUVBSixjQUFjTyxTQUFTLENBQUNDLElBQUksR0FBRztJQUMzQixPQUFPLElBQUksQ0FBQ0gsT0FBTyxDQUFDLElBQUksQ0FBQ0MsV0FBVyxDQUFDO0FBQ3pDO0FBRUFOLGNBQWNPLFNBQVMsQ0FBQ0UsSUFBSSxHQUFHLFNBQVNMLFVBQVU7SUFDOUMsT0FBTyxJQUFJSixjQUFjLElBQUksQ0FBQ0ssT0FBTyxFQUFFLElBQUksQ0FBQ0MsV0FBVyxHQUFHO0FBQzlEO0FBRUFOLGNBQWNPLFNBQVMsQ0FBQ0csT0FBTyxHQUFHO0lBQzlCLE9BQU8sSUFBSSxDQUFDTCxPQUFPLENBQUNNLEtBQUssQ0FBQyxJQUFJLENBQUNMLFdBQVc7QUFDOUM7QUFFQU4sY0FBY08sU0FBUyxDQUFDSyxHQUFHLEdBQUc7SUFDMUIsT0FBTyxJQUFJLENBQUNQLE9BQU8sQ0FBQyxJQUFJLENBQUNBLE9BQU8sQ0FBQ1EsTUFBTSxHQUFHLEVBQUU7QUFDaEQ7QUFFQSxpRUFBaUU7QUFDakUsaUVBQWlFO0FBQ2pFYixjQUFjTyxTQUFTLENBQUNPLEVBQUUsR0FBRyxTQUFTRixHQUFHO0lBQ3JDLElBQUlHLFFBQVEsSUFBSSxDQUFDUCxJQUFJLEdBQUdRLE1BQU07SUFDOUIsSUFBSUMsV0FBV0wsSUFBSUosSUFBSSxNQUFNSSxJQUFJQSxHQUFHO0lBQ3BDLE9BQU9HLE1BQU1ELEVBQUUsQ0FBQ0csU0FBU0QsTUFBTTtBQUNuQyIsImZpbGUiOiIocnNjKS8uL25vZGVfbW9kdWxlcy9sb3AvbGliL1Rva2VuSXRlcmF0b3IuanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/lop/lib/TokenIterator.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/lop/lib/bottom-up.js":
/*!*******************************************!*\
  !*** ./node_modules/lop/lib/bottom-up.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var rules = __webpack_require__(/*! ./rules */ \"(rsc)/./node_modules/lop/lib/rules.js\");\nvar results = __webpack_require__(/*! ./parsing-results */ \"(rsc)/./node_modules/lop/lib/parsing-results.js\");\nexports.parser = function(name, prefixRules, infixRuleBuilders) {\n    var self = {\n        rule: rule,\n        leftAssociative: leftAssociative,\n        rightAssociative: rightAssociative\n    };\n    var infixRules = new InfixRules(infixRuleBuilders.map(createInfixRule));\n    var prefixRule = rules.firstOf(name, prefixRules);\n    function createInfixRule(infixRuleBuilder) {\n        return {\n            name: infixRuleBuilder.name,\n            rule: lazyRule(infixRuleBuilder.ruleBuilder.bind(null, self))\n        };\n    }\n    function rule() {\n        return createRule(infixRules);\n    }\n    function leftAssociative(name) {\n        return createRule(infixRules.untilExclusive(name));\n    }\n    function rightAssociative(name) {\n        return createRule(infixRules.untilInclusive(name));\n    }\n    function createRule(infixRules) {\n        return apply.bind(null, infixRules);\n    }\n    function apply(infixRules, tokens) {\n        var leftResult = prefixRule(tokens);\n        if (leftResult.isSuccess()) {\n            return infixRules.apply(leftResult);\n        } else {\n            return leftResult;\n        }\n    }\n    return self;\n};\nfunction InfixRules(infixRules) {\n    function untilExclusive(name) {\n        return new InfixRules(infixRules.slice(0, ruleNames().indexOf(name)));\n    }\n    function untilInclusive(name) {\n        return new InfixRules(infixRules.slice(0, ruleNames().indexOf(name) + 1));\n    }\n    function ruleNames() {\n        return infixRules.map(function(rule) {\n            return rule.name;\n        });\n    }\n    function apply(leftResult) {\n        var currentResult;\n        var source;\n        while(true){\n            currentResult = applyToTokens(leftResult.remaining());\n            if (currentResult.isSuccess()) {\n                source = leftResult.source().to(currentResult.source());\n                leftResult = results.success(currentResult.value()(leftResult.value(), source), currentResult.remaining(), source);\n            } else if (currentResult.isFailure()) {\n                return leftResult;\n            } else {\n                return currentResult;\n            }\n        }\n    }\n    function applyToTokens(tokens) {\n        return rules.firstOf(\"infix\", infixRules.map(function(infix) {\n            return infix.rule;\n        }))(tokens);\n    }\n    return {\n        apply: apply,\n        untilExclusive: untilExclusive,\n        untilInclusive: untilInclusive\n    };\n}\nexports.infix = function(name, ruleBuilder) {\n    function map(func) {\n        return exports.infix(name, function(parser) {\n            var rule = ruleBuilder(parser);\n            return function(tokens) {\n                var result = rule(tokens);\n                return result.map(function(right) {\n                    return function(left, source) {\n                        return func(left, right, source);\n                    };\n                });\n            };\n        });\n    }\n    return {\n        name: name,\n        ruleBuilder: ruleBuilder,\n        map: map\n    };\n};\n// TODO: move into a sensible place and remove duplication\nvar lazyRule = function(ruleBuilder) {\n    var rule;\n    return function(input) {\n        if (!rule) {\n            rule = ruleBuilder();\n        }\n        return rule(input);\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/lop/lib/bottom-up.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/lop/lib/errors.js":
/*!****************************************!*\
  !*** ./node_modules/lop/lib/errors.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("exports.error = function(options) {\n    return new Error(options);\n};\nvar Error = function(options) {\n    this.expected = options.expected;\n    this.actual = options.actual;\n    this._location = options.location;\n};\nError.prototype.describe = function() {\n    var locationDescription = this._location ? this._location.describe() + \":\\n\" : \"\";\n    return locationDescription + \"Expected \" + this.expected + \"\\nbut got \" + this.actual;\n};\nError.prototype.lineNumber = function() {\n    return this._location.lineNumber();\n};\nError.prototype.characterNumber = function() {\n    return this._location.characterNumber();\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbG9wL2xpYi9lcnJvcnMuanMiLCJtYXBwaW5ncyI6IkFBQUFBLGFBQWEsR0FBRyxTQUFTRSxPQUFPO0lBQzVCLE9BQU8sSUFBSUMsTUFBTUQ7QUFDckI7QUFFQSxJQUFJQyxRQUFRLFNBQVNELE9BQU87SUFDeEIsSUFBSSxDQUFDRSxRQUFRLEdBQUdGLFFBQVFFLFFBQVE7SUFDaEMsSUFBSSxDQUFDQyxNQUFNLEdBQUdILFFBQVFHLE1BQU07SUFDNUIsSUFBSSxDQUFDQyxTQUFTLEdBQUdKLFFBQVFLLFFBQVE7QUFDckM7QUFFQUosTUFBTUssU0FBUyxDQUFDQyxRQUFRLEdBQUc7SUFDdkIsSUFBSUMsc0JBQXNCLElBQUksQ0FBQ0osU0FBUyxHQUFHLElBQUksQ0FBQ0EsU0FBUyxDQUFDRyxRQUFRLEtBQUssUUFBUTtJQUMvRSxPQUFPQyxzQkFBc0IsY0FBYyxJQUFJLENBQUNOLFFBQVEsR0FBRyxlQUFlLElBQUksQ0FBQ0MsTUFBTTtBQUN6RjtBQUVBRixNQUFNSyxTQUFTLENBQUNHLFVBQVUsR0FBRztJQUN6QixPQUFPLElBQUksQ0FBQ0wsU0FBUyxDQUFDSyxVQUFVO0FBQ3BDO0FBRUFSLE1BQU1LLFNBQVMsQ0FBQ0ksZUFBZSxHQUFHO0lBQzlCLE9BQU8sSUFBSSxDQUFDTixTQUFTLENBQUNNLGVBQWU7QUFDekMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN1bWVidWlsZGVyLWFpLy4vbm9kZV9tb2R1bGVzL2xvcC9saWIvZXJyb3JzLmpzP2M5NTgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cy5lcnJvciA9IGZ1bmN0aW9uKG9wdGlvbnMpIHtcbiAgICByZXR1cm4gbmV3IEVycm9yKG9wdGlvbnMpO1xufTtcblxudmFyIEVycm9yID0gZnVuY3Rpb24ob3B0aW9ucykge1xuICAgIHRoaXMuZXhwZWN0ZWQgPSBvcHRpb25zLmV4cGVjdGVkO1xuICAgIHRoaXMuYWN0dWFsID0gb3B0aW9ucy5hY3R1YWw7XG4gICAgdGhpcy5fbG9jYXRpb24gPSBvcHRpb25zLmxvY2F0aW9uO1xufTtcblxuRXJyb3IucHJvdG90eXBlLmRlc2NyaWJlID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGxvY2F0aW9uRGVzY3JpcHRpb24gPSB0aGlzLl9sb2NhdGlvbiA/IHRoaXMuX2xvY2F0aW9uLmRlc2NyaWJlKCkgKyBcIjpcXG5cIiA6IFwiXCI7XG4gICAgcmV0dXJuIGxvY2F0aW9uRGVzY3JpcHRpb24gKyBcIkV4cGVjdGVkIFwiICsgdGhpcy5leHBlY3RlZCArIFwiXFxuYnV0IGdvdCBcIiArIHRoaXMuYWN0dWFsO1xufTtcblxuRXJyb3IucHJvdG90eXBlLmxpbmVOdW1iZXIgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5fbG9jYXRpb24ubGluZU51bWJlcigpO1xufTtcblxuRXJyb3IucHJvdG90eXBlLmNoYXJhY3Rlck51bWJlciA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLl9sb2NhdGlvbi5jaGFyYWN0ZXJOdW1iZXIoKTtcbn07XG4iXSwibmFtZXMiOlsiZXhwb3J0cyIsImVycm9yIiwib3B0aW9ucyIsIkVycm9yIiwiZXhwZWN0ZWQiLCJhY3R1YWwiLCJfbG9jYXRpb24iLCJsb2NhdGlvbiIsInByb3RvdHlwZSIsImRlc2NyaWJlIiwibG9jYXRpb25EZXNjcmlwdGlvbiIsImxpbmVOdW1iZXIiLCJjaGFyYWN0ZXJOdW1iZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/lop/lib/errors.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/lop/lib/lazy-iterators.js":
/*!************************************************!*\
  !*** ./node_modules/lop/lib/lazy-iterators.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("var fromArray = exports.fromArray = function(array) {\n    var index = 0;\n    var hasNext = function() {\n        return index < array.length;\n    };\n    return new LazyIterator({\n        hasNext: hasNext,\n        next: function() {\n            if (!hasNext()) {\n                throw new Error(\"No more elements\");\n            } else {\n                return array[index++];\n            }\n        }\n    });\n};\nvar LazyIterator = function(iterator) {\n    this._iterator = iterator;\n};\nLazyIterator.prototype.map = function(func) {\n    var iterator = this._iterator;\n    return new LazyIterator({\n        hasNext: function() {\n            return iterator.hasNext();\n        },\n        next: function() {\n            return func(iterator.next());\n        }\n    });\n};\nLazyIterator.prototype.filter = function(condition) {\n    var iterator = this._iterator;\n    var moved = false;\n    var hasNext = false;\n    var next;\n    var moveIfNecessary = function() {\n        if (moved) {\n            return;\n        }\n        moved = true;\n        hasNext = false;\n        while(iterator.hasNext() && !hasNext){\n            next = iterator.next();\n            hasNext = condition(next);\n        }\n    };\n    return new LazyIterator({\n        hasNext: function() {\n            moveIfNecessary();\n            return hasNext;\n        },\n        next: function() {\n            moveIfNecessary();\n            var toReturn = next;\n            moved = false;\n            return toReturn;\n        }\n    });\n};\nLazyIterator.prototype.first = function() {\n    var iterator = this._iterator;\n    if (this._iterator.hasNext()) {\n        return iterator.next();\n    } else {\n        return null;\n    }\n};\nLazyIterator.prototype.toArray = function() {\n    var result = [];\n    while(this._iterator.hasNext()){\n        result.push(this._iterator.next());\n    }\n    return result;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbG9wL2xpYi9sYXp5LWl0ZXJhdG9ycy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxZQUFZQyxpQkFBaUIsR0FBRyxTQUFTQyxLQUFLO0lBQzlDLElBQUlDLFFBQVE7SUFDWixJQUFJQyxVQUFVO1FBQ1YsT0FBT0QsUUFBUUQsTUFBTUcsTUFBTTtJQUMvQjtJQUNBLE9BQU8sSUFBSUMsYUFBYTtRQUNwQkYsU0FBU0E7UUFDVEcsTUFBTTtZQUNGLElBQUksQ0FBQ0gsV0FBVztnQkFDWixNQUFNLElBQUlJLE1BQU07WUFDcEIsT0FBTztnQkFDSCxPQUFPTixLQUFLLENBQUNDLFFBQVE7WUFDekI7UUFDSjtJQUNKO0FBQ0o7QUFFQSxJQUFJRyxlQUFlLFNBQVNHLFFBQVE7SUFDaEMsSUFBSSxDQUFDQyxTQUFTLEdBQUdEO0FBQ3JCO0FBRUFILGFBQWFLLFNBQVMsQ0FBQ0MsR0FBRyxHQUFHLFNBQVNDLElBQUk7SUFDdEMsSUFBSUosV0FBVyxJQUFJLENBQUNDLFNBQVM7SUFDN0IsT0FBTyxJQUFJSixhQUFhO1FBQ3BCRixTQUFTO1lBQ0wsT0FBT0ssU0FBU0wsT0FBTztRQUMzQjtRQUNBRyxNQUFNO1lBQ0YsT0FBT00sS0FBS0osU0FBU0YsSUFBSTtRQUM3QjtJQUNKO0FBQ0o7QUFFQUQsYUFBYUssU0FBUyxDQUFDRyxNQUFNLEdBQUcsU0FBU0MsU0FBUztJQUM5QyxJQUFJTixXQUFXLElBQUksQ0FBQ0MsU0FBUztJQUU3QixJQUFJTSxRQUFRO0lBQ1osSUFBSVosVUFBVTtJQUNkLElBQUlHO0lBQ0osSUFBSVUsa0JBQWtCO1FBQ2xCLElBQUlELE9BQU87WUFDUDtRQUNKO1FBQ0FBLFFBQVE7UUFDUlosVUFBVTtRQUNWLE1BQU9LLFNBQVNMLE9BQU8sTUFBTSxDQUFDQSxRQUFTO1lBQ25DRyxPQUFPRSxTQUFTRixJQUFJO1lBQ3BCSCxVQUFVVyxVQUFVUjtRQUN4QjtJQUNKO0lBRUEsT0FBTyxJQUFJRCxhQUFhO1FBQ3BCRixTQUFTO1lBQ0xhO1lBQ0EsT0FBT2I7UUFDWDtRQUNBRyxNQUFNO1lBQ0ZVO1lBQ0EsSUFBSUMsV0FBV1g7WUFDZlMsUUFBUTtZQUNSLE9BQU9FO1FBQ1g7SUFDSjtBQUNKO0FBRUFaLGFBQWFLLFNBQVMsQ0FBQ1EsS0FBSyxHQUFHO0lBQzNCLElBQUlWLFdBQVcsSUFBSSxDQUFDQyxTQUFTO0lBQzdCLElBQUksSUFBSSxDQUFDQSxTQUFTLENBQUNOLE9BQU8sSUFBSTtRQUMxQixPQUFPSyxTQUFTRixJQUFJO0lBQ3hCLE9BQU87UUFDSCxPQUFPO0lBQ1g7QUFDSjtBQUVBRCxhQUFhSyxTQUFTLENBQUNTLE9BQU8sR0FBRztJQUM3QixJQUFJQyxTQUFTLEVBQUU7SUFDZixNQUFPLElBQUksQ0FBQ1gsU0FBUyxDQUFDTixPQUFPLEdBQUk7UUFDN0JpQixPQUFPQyxJQUFJLENBQUMsSUFBSSxDQUFDWixTQUFTLENBQUNILElBQUk7SUFDbkM7SUFDQSxPQUFPYztBQUNYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdW1lYnVpbGRlci1haS8uL25vZGVfbW9kdWxlcy9sb3AvbGliL2xhenktaXRlcmF0b3JzLmpzPzc0MDYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGZyb21BcnJheSA9IGV4cG9ydHMuZnJvbUFycmF5ID0gZnVuY3Rpb24oYXJyYXkpIHtcbiAgICB2YXIgaW5kZXggPSAwO1xuICAgIHZhciBoYXNOZXh0ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBpbmRleCA8IGFycmF5Lmxlbmd0aDtcbiAgICB9O1xuICAgIHJldHVybiBuZXcgTGF6eUl0ZXJhdG9yKHtcbiAgICAgICAgaGFzTmV4dDogaGFzTmV4dCxcbiAgICAgICAgbmV4dDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBpZiAoIWhhc05leHQoKSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vIG1vcmUgZWxlbWVudHNcIik7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybiBhcnJheVtpbmRleCsrXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0pO1xufTtcblxudmFyIExhenlJdGVyYXRvciA9IGZ1bmN0aW9uKGl0ZXJhdG9yKSB7XG4gICAgdGhpcy5faXRlcmF0b3IgPSBpdGVyYXRvcjtcbn07XG5cbkxhenlJdGVyYXRvci5wcm90b3R5cGUubWFwID0gZnVuY3Rpb24oZnVuYykge1xuICAgIHZhciBpdGVyYXRvciA9IHRoaXMuX2l0ZXJhdG9yO1xuICAgIHJldHVybiBuZXcgTGF6eUl0ZXJhdG9yKHtcbiAgICAgICAgaGFzTmV4dDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZXR1cm4gaXRlcmF0b3IuaGFzTmV4dCgpO1xuICAgICAgICB9LFxuICAgICAgICBuZXh0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiBmdW5jKGl0ZXJhdG9yLm5leHQoKSk7XG4gICAgICAgIH1cbiAgICB9KTtcbn07XG5cbkxhenlJdGVyYXRvci5wcm90b3R5cGUuZmlsdGVyID0gZnVuY3Rpb24oY29uZGl0aW9uKSB7XG4gICAgdmFyIGl0ZXJhdG9yID0gdGhpcy5faXRlcmF0b3I7XG4gICAgXG4gICAgdmFyIG1vdmVkID0gZmFsc2U7XG4gICAgdmFyIGhhc05leHQgPSBmYWxzZTtcbiAgICB2YXIgbmV4dDtcbiAgICB2YXIgbW92ZUlmTmVjZXNzYXJ5ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmIChtb3ZlZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIG1vdmVkID0gdHJ1ZTtcbiAgICAgICAgaGFzTmV4dCA9IGZhbHNlO1xuICAgICAgICB3aGlsZSAoaXRlcmF0b3IuaGFzTmV4dCgpICYmICFoYXNOZXh0KSB7XG4gICAgICAgICAgICBuZXh0ID0gaXRlcmF0b3IubmV4dCgpO1xuICAgICAgICAgICAgaGFzTmV4dCA9IGNvbmRpdGlvbihuZXh0KTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgXG4gICAgcmV0dXJuIG5ldyBMYXp5SXRlcmF0b3Ioe1xuICAgICAgICBoYXNOZXh0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIG1vdmVJZk5lY2Vzc2FyeSgpO1xuICAgICAgICAgICAgcmV0dXJuIGhhc05leHQ7XG4gICAgICAgIH0sXG4gICAgICAgIG5leHQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgbW92ZUlmTmVjZXNzYXJ5KCk7XG4gICAgICAgICAgICB2YXIgdG9SZXR1cm4gPSBuZXh0O1xuICAgICAgICAgICAgbW92ZWQgPSBmYWxzZTtcbiAgICAgICAgICAgIHJldHVybiB0b1JldHVybjtcbiAgICAgICAgfVxuICAgIH0pO1xufTtcblxuTGF6eUl0ZXJhdG9yLnByb3RvdHlwZS5maXJzdCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBpdGVyYXRvciA9IHRoaXMuX2l0ZXJhdG9yO1xuICAgIGlmICh0aGlzLl9pdGVyYXRvci5oYXNOZXh0KCkpIHtcbiAgICAgICAgcmV0dXJuIGl0ZXJhdG9yLm5leHQoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG59O1xuXG5MYXp5SXRlcmF0b3IucHJvdG90eXBlLnRvQXJyYXkgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgcmVzdWx0ID0gW107XG4gICAgd2hpbGUgKHRoaXMuX2l0ZXJhdG9yLmhhc05leHQoKSkge1xuICAgICAgICByZXN1bHQucHVzaCh0aGlzLl9pdGVyYXRvci5uZXh0KCkpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbiJdLCJuYW1lcyI6WyJmcm9tQXJyYXkiLCJleHBvcnRzIiwiYXJyYXkiLCJpbmRleCIsImhhc05leHQiLCJsZW5ndGgiLCJMYXp5SXRlcmF0b3IiLCJuZXh0IiwiRXJyb3IiLCJpdGVyYXRvciIsIl9pdGVyYXRvciIsInByb3RvdHlwZSIsIm1hcCIsImZ1bmMiLCJmaWx0ZXIiLCJjb25kaXRpb24iLCJtb3ZlZCIsIm1vdmVJZk5lY2Vzc2FyeSIsInRvUmV0dXJuIiwiZmlyc3QiLCJ0b0FycmF5IiwicmVzdWx0IiwicHVzaCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/lop/lib/lazy-iterators.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/lop/lib/parser.js":
/*!****************************************!*\
  !*** ./node_modules/lop/lib/parser.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var TokenIterator = __webpack_require__(/*! ./TokenIterator */ \"(rsc)/./node_modules/lop/lib/TokenIterator.js\");\nexports.Parser = function(options) {\n    var parseTokens = function(parser, tokens) {\n        return parser(new TokenIterator(tokens));\n    };\n    return {\n        parseTokens: parseTokens\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbG9wL2xpYi9wYXJzZXIuanMiLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsZ0JBQWdCQyxtQkFBT0EsQ0FBQyxzRUFBaUI7QUFFN0NDLGNBQWMsR0FBRyxTQUFTRSxPQUFPO0lBQzdCLElBQUlDLGNBQWMsU0FBU0MsTUFBTSxFQUFFQyxNQUFNO1FBQ3JDLE9BQU9ELE9BQU8sSUFBSU4sY0FBY087SUFDcEM7SUFFQSxPQUFPO1FBQ0hGLGFBQWFBO0lBQ2pCO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN1bWVidWlsZGVyLWFpLy4vbm9kZV9tb2R1bGVzL2xvcC9saWIvcGFyc2VyLmpzPzU4YTAiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIFRva2VuSXRlcmF0b3IgPSByZXF1aXJlKFwiLi9Ub2tlbkl0ZXJhdG9yXCIpO1xuXG5leHBvcnRzLlBhcnNlciA9IGZ1bmN0aW9uKG9wdGlvbnMpIHtcbiAgICB2YXIgcGFyc2VUb2tlbnMgPSBmdW5jdGlvbihwYXJzZXIsIHRva2Vucykge1xuICAgICAgICByZXR1cm4gcGFyc2VyKG5ldyBUb2tlbkl0ZXJhdG9yKHRva2VucykpO1xuICAgIH07XG4gICAgXG4gICAgcmV0dXJuIHtcbiAgICAgICAgcGFyc2VUb2tlbnM6IHBhcnNlVG9rZW5zXG4gICAgfTtcbn07XG4iXSwibmFtZXMiOlsiVG9rZW5JdGVyYXRvciIsInJlcXVpcmUiLCJleHBvcnRzIiwiUGFyc2VyIiwib3B0aW9ucyIsInBhcnNlVG9rZW5zIiwicGFyc2VyIiwidG9rZW5zIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/lop/lib/parser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/lop/lib/parsing-results.js":
/*!*************************************************!*\
  !*** ./node_modules/lop/lib/parsing-results.js ***!
  \*************************************************/
/***/ ((module) => {

eval("module.exports = {\n    failure: function(errors, remaining) {\n        if (errors.length < 1) {\n            throw new Error(\"Failure must have errors\");\n        }\n        return new Result({\n            status: \"failure\",\n            remaining: remaining,\n            errors: errors\n        });\n    },\n    error: function(errors, remaining) {\n        if (errors.length < 1) {\n            throw new Error(\"Failure must have errors\");\n        }\n        return new Result({\n            status: \"error\",\n            remaining: remaining,\n            errors: errors\n        });\n    },\n    success: function(value, remaining, source) {\n        return new Result({\n            status: \"success\",\n            value: value,\n            source: source,\n            remaining: remaining,\n            errors: []\n        });\n    },\n    cut: function(remaining) {\n        return new Result({\n            status: \"cut\",\n            remaining: remaining,\n            errors: []\n        });\n    }\n};\nvar Result = function(options) {\n    this._value = options.value;\n    this._status = options.status;\n    this._hasValue = options.value !== undefined;\n    this._remaining = options.remaining;\n    this._source = options.source;\n    this._errors = options.errors;\n};\nResult.prototype.map = function(func) {\n    if (this._hasValue) {\n        return new Result({\n            value: func(this._value, this._source),\n            status: this._status,\n            remaining: this._remaining,\n            source: this._source,\n            errors: this._errors\n        });\n    } else {\n        return this;\n    }\n};\nResult.prototype.changeRemaining = function(remaining) {\n    return new Result({\n        value: this._value,\n        status: this._status,\n        remaining: remaining,\n        source: this._source,\n        errors: this._errors\n    });\n};\nResult.prototype.isSuccess = function() {\n    return this._status === \"success\" || this._status === \"cut\";\n};\nResult.prototype.isFailure = function() {\n    return this._status === \"failure\";\n};\nResult.prototype.isError = function() {\n    return this._status === \"error\";\n};\nResult.prototype.isCut = function() {\n    return this._status === \"cut\";\n};\nResult.prototype.value = function() {\n    return this._value;\n};\nResult.prototype.remaining = function() {\n    return this._remaining;\n};\nResult.prototype.source = function() {\n    return this._source;\n};\nResult.prototype.errors = function() {\n    return this._errors;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN1bWVidWlsZGVyLWFpLy4vbm9kZV9tb2R1bGVzL2xvcC9saWIvcGFyc2luZy1yZXN1bHRzLmpzPzk2MGUiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgZmFpbHVyZTogZnVuY3Rpb24oZXJyb3JzLCByZW1haW5pbmcpIHtcbiAgICAgICAgaWYgKGVycm9ycy5sZW5ndGggPCAxKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJGYWlsdXJlIG11c3QgaGF2ZSBlcnJvcnNcIik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBSZXN1bHQoe1xuICAgICAgICAgICAgc3RhdHVzOiBcImZhaWx1cmVcIixcbiAgICAgICAgICAgIHJlbWFpbmluZzogcmVtYWluaW5nLFxuICAgICAgICAgICAgZXJyb3JzOiBlcnJvcnNcbiAgICAgICAgfSk7XG4gICAgfSxcbiAgICBlcnJvcjogZnVuY3Rpb24oZXJyb3JzLCByZW1haW5pbmcpIHtcbiAgICAgICAgaWYgKGVycm9ycy5sZW5ndGggPCAxKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJGYWlsdXJlIG11c3QgaGF2ZSBlcnJvcnNcIik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBSZXN1bHQoe1xuICAgICAgICAgICAgc3RhdHVzOiBcImVycm9yXCIsXG4gICAgICAgICAgICByZW1haW5pbmc6IHJlbWFpbmluZyxcbiAgICAgICAgICAgIGVycm9yczogZXJyb3JzXG4gICAgICAgIH0pO1xuICAgIH0sXG4gICAgc3VjY2VzczogZnVuY3Rpb24odmFsdWUsIHJlbWFpbmluZywgc291cmNlKSB7XG4gICAgICAgIHJldHVybiBuZXcgUmVzdWx0KHtcbiAgICAgICAgICAgIHN0YXR1czogXCJzdWNjZXNzXCIsXG4gICAgICAgICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICAgICAgICBzb3VyY2U6IHNvdXJjZSxcbiAgICAgICAgICAgIHJlbWFpbmluZzogcmVtYWluaW5nLFxuICAgICAgICAgICAgZXJyb3JzOiBbXVxuICAgICAgICB9KTtcbiAgICB9LFxuICAgIGN1dDogZnVuY3Rpb24ocmVtYWluaW5nKSB7XG4gICAgICAgIHJldHVybiBuZXcgUmVzdWx0KHtcbiAgICAgICAgICAgIHN0YXR1czogXCJjdXRcIixcbiAgICAgICAgICAgIHJlbWFpbmluZzogcmVtYWluaW5nLFxuICAgICAgICAgICAgZXJyb3JzOiBbXVxuICAgICAgICB9KTtcbiAgICB9XG59O1xuXG52YXIgUmVzdWx0ID0gZnVuY3Rpb24ob3B0aW9ucykge1xuICAgIHRoaXMuX3ZhbHVlID0gb3B0aW9ucy52YWx1ZTtcbiAgICB0aGlzLl9zdGF0dXMgPSBvcHRpb25zLnN0YXR1cztcbiAgICB0aGlzLl9oYXNWYWx1ZSA9IG9wdGlvbnMudmFsdWUgIT09IHVuZGVmaW5lZDtcbiAgICB0aGlzLl9yZW1haW5pbmcgPSBvcHRpb25zLnJlbWFpbmluZztcbiAgICB0aGlzLl9zb3VyY2UgPSBvcHRpb25zLnNvdXJjZTtcbiAgICB0aGlzLl9lcnJvcnMgPSBvcHRpb25zLmVycm9ycztcbn07XG5cblJlc3VsdC5wcm90b3R5cGUubWFwID0gZnVuY3Rpb24oZnVuYykge1xuICAgIGlmICh0aGlzLl9oYXNWYWx1ZSkge1xuICAgICAgICByZXR1cm4gbmV3IFJlc3VsdCh7XG4gICAgICAgICAgICB2YWx1ZTogZnVuYyh0aGlzLl92YWx1ZSwgdGhpcy5fc291cmNlKSxcbiAgICAgICAgICAgIHN0YXR1czogdGhpcy5fc3RhdHVzLFxuICAgICAgICAgICAgcmVtYWluaW5nOiB0aGlzLl9yZW1haW5pbmcsXG4gICAgICAgICAgICBzb3VyY2U6IHRoaXMuX3NvdXJjZSxcbiAgICAgICAgICAgIGVycm9yczogdGhpcy5fZXJyb3JzXG4gICAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbn07XG5cblJlc3VsdC5wcm90b3R5cGUuY2hhbmdlUmVtYWluaW5nID0gZnVuY3Rpb24ocmVtYWluaW5nKSB7XG4gICAgcmV0dXJuIG5ldyBSZXN1bHQoe1xuICAgICAgICB2YWx1ZTogdGhpcy5fdmFsdWUsXG4gICAgICAgIHN0YXR1czogdGhpcy5fc3RhdHVzLFxuICAgICAgICByZW1haW5pbmc6IHJlbWFpbmluZyxcbiAgICAgICAgc291cmNlOiB0aGlzLl9zb3VyY2UsXG4gICAgICAgIGVycm9yczogdGhpcy5fZXJyb3JzXG4gICAgfSk7XG59O1xuXG5SZXN1bHQucHJvdG90eXBlLmlzU3VjY2VzcyA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLl9zdGF0dXMgPT09IFwic3VjY2Vzc1wiIHx8IHRoaXMuX3N0YXR1cyA9PT0gXCJjdXRcIjtcbn07XG5cblJlc3VsdC5wcm90b3R5cGUuaXNGYWlsdXJlID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuX3N0YXR1cyA9PT0gXCJmYWlsdXJlXCI7XG59O1xuXG5SZXN1bHQucHJvdG90eXBlLmlzRXJyb3IgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5fc3RhdHVzID09PSBcImVycm9yXCI7XG59O1xuXG5SZXN1bHQucHJvdG90eXBlLmlzQ3V0ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuX3N0YXR1cyA9PT0gXCJjdXRcIjtcbn07XG5cblJlc3VsdC5wcm90b3R5cGUudmFsdWUgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5fdmFsdWU7XG59O1xuXG5SZXN1bHQucHJvdG90eXBlLnJlbWFpbmluZyA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLl9yZW1haW5pbmc7XG59O1xuXG5SZXN1bHQucHJvdG90eXBlLnNvdXJjZSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLl9zb3VyY2U7XG59O1xuXG5SZXN1bHQucHJvdG90eXBlLmVycm9ycyA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLl9lcnJvcnM7XG59O1xuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJmYWlsdXJlIiwiZXJyb3JzIiwicmVtYWluaW5nIiwibGVuZ3RoIiwiRXJyb3IiLCJSZXN1bHQiLCJzdGF0dXMiLCJlcnJvciIsInN1Y2Nlc3MiLCJ2YWx1ZSIsInNvdXJjZSIsImN1dCIsIm9wdGlvbnMiLCJfdmFsdWUiLCJfc3RhdHVzIiwiX2hhc1ZhbHVlIiwidW5kZWZpbmVkIiwiX3JlbWFpbmluZyIsIl9zb3VyY2UiLCJfZXJyb3JzIiwicHJvdG90eXBlIiwibWFwIiwiZnVuYyIsImNoYW5nZVJlbWFpbmluZyIsImlzU3VjY2VzcyIsImlzRmFpbHVyZSIsImlzRXJyb3IiLCJpc0N1dCJdLCJtYXBwaW5ncyI6IkFBQUFBLE9BQU9DLE9BQU8sR0FBRztJQUNiQyxTQUFTLFNBQVNDLE1BQU0sRUFBRUMsU0FBUztRQUMvQixJQUFJRCxPQUFPRSxNQUFNLEdBQUcsR0FBRztZQUNuQixNQUFNLElBQUlDLE1BQU07UUFDcEI7UUFDQSxPQUFPLElBQUlDLE9BQU87WUFDZEMsUUFBUTtZQUNSSixXQUFXQTtZQUNYRCxRQUFRQTtRQUNaO0lBQ0o7SUFDQU0sT0FBTyxTQUFTTixNQUFNLEVBQUVDLFNBQVM7UUFDN0IsSUFBSUQsT0FBT0UsTUFBTSxHQUFHLEdBQUc7WUFDbkIsTUFBTSxJQUFJQyxNQUFNO1FBQ3BCO1FBQ0EsT0FBTyxJQUFJQyxPQUFPO1lBQ2RDLFFBQVE7WUFDUkosV0FBV0E7WUFDWEQsUUFBUUE7UUFDWjtJQUNKO0lBQ0FPLFNBQVMsU0FBU0MsS0FBSyxFQUFFUCxTQUFTLEVBQUVRLE1BQU07UUFDdEMsT0FBTyxJQUFJTCxPQUFPO1lBQ2RDLFFBQVE7WUFDUkcsT0FBT0E7WUFDUEMsUUFBUUE7WUFDUlIsV0FBV0E7WUFDWEQsUUFBUSxFQUFFO1FBQ2Q7SUFDSjtJQUNBVSxLQUFLLFNBQVNULFNBQVM7UUFDbkIsT0FBTyxJQUFJRyxPQUFPO1lBQ2RDLFFBQVE7WUFDUkosV0FBV0E7WUFDWEQsUUFBUSxFQUFFO1FBQ2Q7SUFDSjtBQUNKO0FBRUEsSUFBSUksU0FBUyxTQUFTTyxPQUFPO0lBQ3pCLElBQUksQ0FBQ0MsTUFBTSxHQUFHRCxRQUFRSCxLQUFLO0lBQzNCLElBQUksQ0FBQ0ssT0FBTyxHQUFHRixRQUFRTixNQUFNO0lBQzdCLElBQUksQ0FBQ1MsU0FBUyxHQUFHSCxRQUFRSCxLQUFLLEtBQUtPO0lBQ25DLElBQUksQ0FBQ0MsVUFBVSxHQUFHTCxRQUFRVixTQUFTO0lBQ25DLElBQUksQ0FBQ2dCLE9BQU8sR0FBR04sUUFBUUYsTUFBTTtJQUM3QixJQUFJLENBQUNTLE9BQU8sR0FBR1AsUUFBUVgsTUFBTTtBQUNqQztBQUVBSSxPQUFPZSxTQUFTLENBQUNDLEdBQUcsR0FBRyxTQUFTQyxJQUFJO0lBQ2hDLElBQUksSUFBSSxDQUFDUCxTQUFTLEVBQUU7UUFDaEIsT0FBTyxJQUFJVixPQUFPO1lBQ2RJLE9BQU9hLEtBQUssSUFBSSxDQUFDVCxNQUFNLEVBQUUsSUFBSSxDQUFDSyxPQUFPO1lBQ3JDWixRQUFRLElBQUksQ0FBQ1EsT0FBTztZQUNwQlosV0FBVyxJQUFJLENBQUNlLFVBQVU7WUFDMUJQLFFBQVEsSUFBSSxDQUFDUSxPQUFPO1lBQ3BCakIsUUFBUSxJQUFJLENBQUNrQixPQUFPO1FBQ3hCO0lBQ0osT0FBTztRQUNILE9BQU8sSUFBSTtJQUNmO0FBQ0o7QUFFQWQsT0FBT2UsU0FBUyxDQUFDRyxlQUFlLEdBQUcsU0FBU3JCLFNBQVM7SUFDakQsT0FBTyxJQUFJRyxPQUFPO1FBQ2RJLE9BQU8sSUFBSSxDQUFDSSxNQUFNO1FBQ2xCUCxRQUFRLElBQUksQ0FBQ1EsT0FBTztRQUNwQlosV0FBV0E7UUFDWFEsUUFBUSxJQUFJLENBQUNRLE9BQU87UUFDcEJqQixRQUFRLElBQUksQ0FBQ2tCLE9BQU87SUFDeEI7QUFDSjtBQUVBZCxPQUFPZSxTQUFTLENBQUNJLFNBQVMsR0FBRztJQUN6QixPQUFPLElBQUksQ0FBQ1YsT0FBTyxLQUFLLGFBQWEsSUFBSSxDQUFDQSxPQUFPLEtBQUs7QUFDMUQ7QUFFQVQsT0FBT2UsU0FBUyxDQUFDSyxTQUFTLEdBQUc7SUFDekIsT0FBTyxJQUFJLENBQUNYLE9BQU8sS0FBSztBQUM1QjtBQUVBVCxPQUFPZSxTQUFTLENBQUNNLE9BQU8sR0FBRztJQUN2QixPQUFPLElBQUksQ0FBQ1osT0FBTyxLQUFLO0FBQzVCO0FBRUFULE9BQU9lLFNBQVMsQ0FBQ08sS0FBSyxHQUFHO0lBQ3JCLE9BQU8sSUFBSSxDQUFDYixPQUFPLEtBQUs7QUFDNUI7QUFFQVQsT0FBT2UsU0FBUyxDQUFDWCxLQUFLLEdBQUc7SUFDckIsT0FBTyxJQUFJLENBQUNJLE1BQU07QUFDdEI7QUFFQVIsT0FBT2UsU0FBUyxDQUFDbEIsU0FBUyxHQUFHO0lBQ3pCLE9BQU8sSUFBSSxDQUFDZSxVQUFVO0FBQzFCO0FBRUFaLE9BQU9lLFNBQVMsQ0FBQ1YsTUFBTSxHQUFHO0lBQ3RCLE9BQU8sSUFBSSxDQUFDUSxPQUFPO0FBQ3ZCO0FBRUFiLE9BQU9lLFNBQVMsQ0FBQ25CLE1BQU0sR0FBRztJQUN0QixPQUFPLElBQUksQ0FBQ2tCLE9BQU87QUFDdkIiLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbG9wL2xpYi9wYXJzaW5nLXJlc3VsdHMuanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/lop/lib/parsing-results.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/lop/lib/regex-tokeniser.js":
/*!*************************************************!*\
  !*** ./node_modules/lop/lib/regex-tokeniser.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var Token = __webpack_require__(/*! ./Token */ \"(rsc)/./node_modules/lop/lib/Token.js\");\nvar StringSource = __webpack_require__(/*! ./StringSource */ \"(rsc)/./node_modules/lop/lib/StringSource.js\");\nexports.RegexTokeniser = RegexTokeniser;\nfunction RegexTokeniser(rules) {\n    rules = rules.map(function(rule) {\n        return {\n            name: rule.name,\n            regex: new RegExp(rule.regex.source, \"g\")\n        };\n    });\n    function tokenise(input, description) {\n        var source = new StringSource(input, description);\n        var index = 0;\n        var tokens = [];\n        while(index < input.length){\n            var result = readNextToken(input, index, source);\n            index = result.endIndex;\n            tokens.push(result.token);\n        }\n        tokens.push(endToken(input, source));\n        return tokens;\n    }\n    function readNextToken(string, startIndex, source) {\n        for(var i = 0; i < rules.length; i++){\n            var regex = rules[i].regex;\n            regex.lastIndex = startIndex;\n            var result = regex.exec(string);\n            if (result) {\n                var endIndex = startIndex + result[0].length;\n                if (result.index === startIndex && endIndex > startIndex) {\n                    var value = result[1];\n                    var token = new Token(rules[i].name, value, source.range(startIndex, endIndex));\n                    return {\n                        token: token,\n                        endIndex: endIndex\n                    };\n                }\n            }\n        }\n        var endIndex = startIndex + 1;\n        var token = new Token(\"unrecognisedCharacter\", string.substring(startIndex, endIndex), source.range(startIndex, endIndex));\n        return {\n            token: token,\n            endIndex: endIndex\n        };\n    }\n    function endToken(input, source) {\n        return new Token(\"end\", null, source.range(input.length, input.length));\n    }\n    return {\n        tokenise: tokenise\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbG9wL2xpYi9yZWdleC10b2tlbmlzZXIuanMiLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsUUFBUUMsbUJBQU9BLENBQUMsc0RBQVM7QUFDN0IsSUFBSUMsZUFBZUQsbUJBQU9BLENBQUMsb0VBQWdCO0FBRTNDRSxzQkFBc0IsR0FBR0M7QUFFekIsU0FBU0EsZUFBZUMsS0FBSztJQUN6QkEsUUFBUUEsTUFBTUMsR0FBRyxDQUFDLFNBQVNDLElBQUk7UUFDM0IsT0FBTztZQUNIQyxNQUFNRCxLQUFLQyxJQUFJO1lBQ2ZDLE9BQU8sSUFBSUMsT0FBT0gsS0FBS0UsS0FBSyxDQUFDRSxNQUFNLEVBQUU7UUFDekM7SUFDSjtJQUVBLFNBQVNDLFNBQVNDLEtBQUssRUFBRUMsV0FBVztRQUNoQyxJQUFJSCxTQUFTLElBQUlULGFBQWFXLE9BQU9DO1FBQ3JDLElBQUlDLFFBQVE7UUFDWixJQUFJQyxTQUFTLEVBQUU7UUFFZixNQUFPRCxRQUFRRixNQUFNSSxNQUFNLENBQUU7WUFDekIsSUFBSUMsU0FBU0MsY0FBY04sT0FBT0UsT0FBT0o7WUFDekNJLFFBQVFHLE9BQU9FLFFBQVE7WUFDdkJKLE9BQU9LLElBQUksQ0FBQ0gsT0FBT0ksS0FBSztRQUM1QjtRQUVBTixPQUFPSyxJQUFJLENBQUNFLFNBQVNWLE9BQU9GO1FBQzVCLE9BQU9LO0lBQ1g7SUFFQSxTQUFTRyxjQUFjSyxNQUFNLEVBQUVDLFVBQVUsRUFBRWQsTUFBTTtRQUM3QyxJQUFLLElBQUllLElBQUksR0FBR0EsSUFBSXJCLE1BQU1ZLE1BQU0sRUFBRVMsSUFBSztZQUNuQyxJQUFJakIsUUFBUUosS0FBSyxDQUFDcUIsRUFBRSxDQUFDakIsS0FBSztZQUMxQkEsTUFBTWtCLFNBQVMsR0FBR0Y7WUFDbEIsSUFBSVAsU0FBU1QsTUFBTW1CLElBQUksQ0FBQ0o7WUFFeEIsSUFBSU4sUUFBUTtnQkFDUixJQUFJRSxXQUFXSyxhQUFhUCxNQUFNLENBQUMsRUFBRSxDQUFDRCxNQUFNO2dCQUM1QyxJQUFJQyxPQUFPSCxLQUFLLEtBQUtVLGNBQWNMLFdBQVdLLFlBQVk7b0JBQ3RELElBQUlJLFFBQVFYLE1BQU0sQ0FBQyxFQUFFO29CQUNyQixJQUFJSSxRQUFRLElBQUl0QixNQUNaSyxLQUFLLENBQUNxQixFQUFFLENBQUNsQixJQUFJLEVBQ2JxQixPQUNBbEIsT0FBT21CLEtBQUssQ0FBQ0wsWUFBWUw7b0JBRTdCLE9BQU87d0JBQUNFLE9BQU9BO3dCQUFPRixVQUFVQTtvQkFBUTtnQkFDNUM7WUFDSjtRQUNKO1FBQ0EsSUFBSUEsV0FBV0ssYUFBYTtRQUM1QixJQUFJSCxRQUFRLElBQUl0QixNQUNaLHlCQUNBd0IsT0FBT08sU0FBUyxDQUFDTixZQUFZTCxXQUM3QlQsT0FBT21CLEtBQUssQ0FBQ0wsWUFBWUw7UUFFN0IsT0FBTztZQUFDRSxPQUFPQTtZQUFPRixVQUFVQTtRQUFRO0lBQzVDO0lBRUEsU0FBU0csU0FBU1YsS0FBSyxFQUFFRixNQUFNO1FBQzNCLE9BQU8sSUFBSVgsTUFDUCxPQUNBLE1BQ0FXLE9BQU9tQixLQUFLLENBQUNqQixNQUFNSSxNQUFNLEVBQUVKLE1BQU1JLE1BQU07SUFFL0M7SUFFQSxPQUFPO1FBQ0hMLFVBQVVBO0lBQ2Q7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL3Jlc3VtZWJ1aWxkZXItYWkvLi9ub2RlX21vZHVsZXMvbG9wL2xpYi9yZWdleC10b2tlbmlzZXIuanM/NjRiYyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgVG9rZW4gPSByZXF1aXJlKFwiLi9Ub2tlblwiKTtcbnZhciBTdHJpbmdTb3VyY2UgPSByZXF1aXJlKFwiLi9TdHJpbmdTb3VyY2VcIik7XG5cbmV4cG9ydHMuUmVnZXhUb2tlbmlzZXIgPSBSZWdleFRva2VuaXNlcjtcblxuZnVuY3Rpb24gUmVnZXhUb2tlbmlzZXIocnVsZXMpIHtcbiAgICBydWxlcyA9IHJ1bGVzLm1hcChmdW5jdGlvbihydWxlKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBuYW1lOiBydWxlLm5hbWUsXG4gICAgICAgICAgICByZWdleDogbmV3IFJlZ0V4cChydWxlLnJlZ2V4LnNvdXJjZSwgXCJnXCIpXG4gICAgICAgIH07XG4gICAgfSk7XG4gICAgXG4gICAgZnVuY3Rpb24gdG9rZW5pc2UoaW5wdXQsIGRlc2NyaXB0aW9uKSB7XG4gICAgICAgIHZhciBzb3VyY2UgPSBuZXcgU3RyaW5nU291cmNlKGlucHV0LCBkZXNjcmlwdGlvbik7XG4gICAgICAgIHZhciBpbmRleCA9IDA7XG4gICAgICAgIHZhciB0b2tlbnMgPSBbXTtcbiAgICBcbiAgICAgICAgd2hpbGUgKGluZGV4IDwgaW5wdXQubGVuZ3RoKSB7XG4gICAgICAgICAgICB2YXIgcmVzdWx0ID0gcmVhZE5leHRUb2tlbihpbnB1dCwgaW5kZXgsIHNvdXJjZSk7XG4gICAgICAgICAgICBpbmRleCA9IHJlc3VsdC5lbmRJbmRleDtcbiAgICAgICAgICAgIHRva2Vucy5wdXNoKHJlc3VsdC50b2tlbik7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIHRva2Vucy5wdXNoKGVuZFRva2VuKGlucHV0LCBzb3VyY2UpKTtcbiAgICAgICAgcmV0dXJuIHRva2VucztcbiAgICB9XG5cbiAgICBmdW5jdGlvbiByZWFkTmV4dFRva2VuKHN0cmluZywgc3RhcnRJbmRleCwgc291cmNlKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcnVsZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciByZWdleCA9IHJ1bGVzW2ldLnJlZ2V4O1xuICAgICAgICAgICAgcmVnZXgubGFzdEluZGV4ID0gc3RhcnRJbmRleDtcbiAgICAgICAgICAgIHZhciByZXN1bHQgPSByZWdleC5leGVjKHN0cmluZyk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGlmIChyZXN1bHQpIHtcbiAgICAgICAgICAgICAgICB2YXIgZW5kSW5kZXggPSBzdGFydEluZGV4ICsgcmVzdWx0WzBdLmxlbmd0aDtcbiAgICAgICAgICAgICAgICBpZiAocmVzdWx0LmluZGV4ID09PSBzdGFydEluZGV4ICYmIGVuZEluZGV4ID4gc3RhcnRJbmRleCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgdmFsdWUgPSByZXN1bHRbMV07XG4gICAgICAgICAgICAgICAgICAgIHZhciB0b2tlbiA9IG5ldyBUb2tlbihcbiAgICAgICAgICAgICAgICAgICAgICAgIHJ1bGVzW2ldLm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHNvdXJjZS5yYW5nZShzdGFydEluZGV4LCBlbmRJbmRleClcbiAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHt0b2tlbjogdG9rZW4sIGVuZEluZGV4OiBlbmRJbmRleH07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHZhciBlbmRJbmRleCA9IHN0YXJ0SW5kZXggKyAxO1xuICAgICAgICB2YXIgdG9rZW4gPSBuZXcgVG9rZW4oXG4gICAgICAgICAgICBcInVucmVjb2duaXNlZENoYXJhY3RlclwiLFxuICAgICAgICAgICAgc3RyaW5nLnN1YnN0cmluZyhzdGFydEluZGV4LCBlbmRJbmRleCksXG4gICAgICAgICAgICBzb3VyY2UucmFuZ2Uoc3RhcnRJbmRleCwgZW5kSW5kZXgpXG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiB7dG9rZW46IHRva2VuLCBlbmRJbmRleDogZW5kSW5kZXh9O1xuICAgIH1cbiAgICBcbiAgICBmdW5jdGlvbiBlbmRUb2tlbihpbnB1dCwgc291cmNlKSB7XG4gICAgICAgIHJldHVybiBuZXcgVG9rZW4oXG4gICAgICAgICAgICBcImVuZFwiLFxuICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgIHNvdXJjZS5yYW5nZShpbnB1dC5sZW5ndGgsIGlucHV0Lmxlbmd0aClcbiAgICAgICAgKTtcbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIHtcbiAgICAgICAgdG9rZW5pc2U6IHRva2VuaXNlXG4gICAgfVxufVxuXG5cbiJdLCJuYW1lcyI6WyJUb2tlbiIsInJlcXVpcmUiLCJTdHJpbmdTb3VyY2UiLCJleHBvcnRzIiwiUmVnZXhUb2tlbmlzZXIiLCJydWxlcyIsIm1hcCIsInJ1bGUiLCJuYW1lIiwicmVnZXgiLCJSZWdFeHAiLCJzb3VyY2UiLCJ0b2tlbmlzZSIsImlucHV0IiwiZGVzY3JpcHRpb24iLCJpbmRleCIsInRva2VucyIsImxlbmd0aCIsInJlc3VsdCIsInJlYWROZXh0VG9rZW4iLCJlbmRJbmRleCIsInB1c2giLCJ0b2tlbiIsImVuZFRva2VuIiwic3RyaW5nIiwic3RhcnRJbmRleCIsImkiLCJsYXN0SW5kZXgiLCJleGVjIiwidmFsdWUiLCJyYW5nZSIsInN1YnN0cmluZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/lop/lib/regex-tokeniser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/lop/lib/rules.js":
/*!***************************************!*\
  !*** ./node_modules/lop/lib/rules.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var _ = __webpack_require__(/*! underscore */ \"(rsc)/./node_modules/underscore/modules/index-all.js\");\nvar options = __webpack_require__(/*! option */ \"(rsc)/./node_modules/option/index.js\");\nvar results = __webpack_require__(/*! ./parsing-results */ \"(rsc)/./node_modules/lop/lib/parsing-results.js\");\nvar errors = __webpack_require__(/*! ./errors */ \"(rsc)/./node_modules/lop/lib/errors.js\");\nvar lazyIterators = __webpack_require__(/*! ./lazy-iterators */ \"(rsc)/./node_modules/lop/lib/lazy-iterators.js\");\nexports.token = function(tokenType, value) {\n    var matchValue = value !== undefined;\n    return function(input) {\n        var token = input.head();\n        if (token && token.name === tokenType && (!matchValue || token.value === value)) {\n            return results.success(token.value, input.tail(), token.source);\n        } else {\n            var expected = describeToken({\n                name: tokenType,\n                value: value\n            });\n            return describeTokenMismatch(input, expected);\n        }\n    };\n};\nexports.tokenOfType = function(tokenType) {\n    return exports.token(tokenType);\n};\nexports.firstOf = function(name, parsers) {\n    if (!_.isArray(parsers)) {\n        parsers = Array.prototype.slice.call(arguments, 1);\n    }\n    return function(input) {\n        return lazyIterators.fromArray(parsers).map(function(parser) {\n            return parser(input);\n        }).filter(function(result) {\n            return result.isSuccess() || result.isError();\n        }).first() || describeTokenMismatch(input, name);\n    };\n};\nexports.then = function(parser, func) {\n    return function(input) {\n        var result = parser(input);\n        if (!result.map) {\n            console.log(result);\n        }\n        return result.map(func);\n    };\n};\nexports.sequence = function() {\n    var parsers = Array.prototype.slice.call(arguments, 0);\n    var rule = function(input) {\n        var result = _.foldl(parsers, function(memo, parser) {\n            var result = memo.result;\n            var hasCut = memo.hasCut;\n            if (!result.isSuccess()) {\n                return {\n                    result: result,\n                    hasCut: hasCut\n                };\n            }\n            var subResult = parser(result.remaining());\n            if (subResult.isCut()) {\n                return {\n                    result: result,\n                    hasCut: true\n                };\n            } else if (subResult.isSuccess()) {\n                var values;\n                if (parser.isCaptured) {\n                    values = result.value().withValue(parser, subResult.value());\n                } else {\n                    values = result.value();\n                }\n                var remaining = subResult.remaining();\n                var source = input.to(remaining);\n                return {\n                    result: results.success(values, remaining, source),\n                    hasCut: hasCut\n                };\n            } else if (hasCut) {\n                return {\n                    result: results.error(subResult.errors(), subResult.remaining()),\n                    hasCut: hasCut\n                };\n            } else {\n                return {\n                    result: subResult,\n                    hasCut: hasCut\n                };\n            }\n        }, {\n            result: results.success(new SequenceValues(), input),\n            hasCut: false\n        }).result;\n        var source = input.to(result.remaining());\n        return result.map(function(values) {\n            return values.withValue(exports.sequence.source, source);\n        });\n    };\n    rule.head = function() {\n        var firstCapture = _.find(parsers, isCapturedRule);\n        return exports.then(rule, exports.sequence.extract(firstCapture));\n    };\n    rule.map = function(func) {\n        return exports.then(rule, function(result) {\n            return func.apply(this, result.toArray());\n        });\n    };\n    function isCapturedRule(subRule) {\n        return subRule.isCaptured;\n    }\n    return rule;\n};\nvar SequenceValues = function(values, valuesArray) {\n    this._values = values || {};\n    this._valuesArray = valuesArray || [];\n};\nSequenceValues.prototype.withValue = function(rule, value) {\n    if (rule.captureName && rule.captureName in this._values) {\n        throw new Error('Cannot add second value for capture \"' + rule.captureName + '\"');\n    } else {\n        var newValues = _.clone(this._values);\n        newValues[rule.captureName] = value;\n        var newValuesArray = this._valuesArray.concat([\n            value\n        ]);\n        return new SequenceValues(newValues, newValuesArray);\n    }\n};\nSequenceValues.prototype.get = function(rule) {\n    if (rule.captureName in this._values) {\n        return this._values[rule.captureName];\n    } else {\n        throw new Error('No value for capture \"' + rule.captureName + '\"');\n    }\n};\nSequenceValues.prototype.toArray = function() {\n    return this._valuesArray;\n};\nexports.sequence.capture = function(rule, name) {\n    var captureRule = function() {\n        return rule.apply(this, arguments);\n    };\n    captureRule.captureName = name;\n    captureRule.isCaptured = true;\n    return captureRule;\n};\nexports.sequence.extract = function(rule) {\n    return function(result) {\n        return result.get(rule);\n    };\n};\nexports.sequence.applyValues = function(func) {\n    // TODO: check captureName doesn't conflict with source or other captures\n    var rules = Array.prototype.slice.call(arguments, 1);\n    return function(result) {\n        var values = rules.map(function(rule) {\n            return result.get(rule);\n        });\n        return func.apply(this, values);\n    };\n};\nexports.sequence.source = {\n    captureName: \"☃source☃\"\n};\nexports.sequence.cut = function() {\n    return function(input) {\n        return results.cut(input);\n    };\n};\nexports.optional = function(rule) {\n    return function(input) {\n        var result = rule(input);\n        if (result.isSuccess()) {\n            return result.map(options.some);\n        } else if (result.isFailure()) {\n            return results.success(options.none, input);\n        } else {\n            return result;\n        }\n    };\n};\nexports.zeroOrMoreWithSeparator = function(rule, separator) {\n    return repeatedWithSeparator(rule, separator, false);\n};\nexports.oneOrMoreWithSeparator = function(rule, separator) {\n    return repeatedWithSeparator(rule, separator, true);\n};\nvar zeroOrMore = exports.zeroOrMore = function(rule) {\n    return function(input) {\n        var values = [];\n        var result;\n        while((result = rule(input)) && result.isSuccess()){\n            input = result.remaining();\n            values.push(result.value());\n        }\n        if (result.isError()) {\n            return result;\n        } else {\n            return results.success(values, input);\n        }\n    };\n};\nexports.oneOrMore = function(rule) {\n    return exports.oneOrMoreWithSeparator(rule, noOpRule);\n};\nfunction noOpRule(input) {\n    return results.success(null, input);\n}\nvar repeatedWithSeparator = function(rule, separator, isOneOrMore) {\n    return function(input) {\n        var result = rule(input);\n        if (result.isSuccess()) {\n            var mainRule = exports.sequence.capture(rule, \"main\");\n            var remainingRule = zeroOrMore(exports.then(exports.sequence(separator, mainRule), exports.sequence.extract(mainRule)));\n            var remainingResult = remainingRule(result.remaining());\n            return results.success([\n                result.value()\n            ].concat(remainingResult.value()), remainingResult.remaining());\n        } else if (isOneOrMore || result.isError()) {\n            return result;\n        } else {\n            return results.success([], input);\n        }\n    };\n};\nexports.leftAssociative = function(leftRule, rightRule, func) {\n    var rights;\n    if (func) {\n        rights = [\n            {\n                func: func,\n                rule: rightRule\n            }\n        ];\n    } else {\n        rights = rightRule;\n    }\n    rights = rights.map(function(right) {\n        return exports.then(right.rule, function(rightValue) {\n            return function(leftValue, source) {\n                return right.func(leftValue, rightValue, source);\n            };\n        });\n    });\n    var repeatedRule = exports.firstOf.apply(null, [\n        \"rules\"\n    ].concat(rights));\n    return function(input) {\n        var start = input;\n        var leftResult = leftRule(input);\n        if (!leftResult.isSuccess()) {\n            return leftResult;\n        }\n        var repeatedResult = repeatedRule(leftResult.remaining());\n        while(repeatedResult.isSuccess()){\n            var remaining = repeatedResult.remaining();\n            var source = start.to(repeatedResult.remaining());\n            var right = repeatedResult.value();\n            leftResult = results.success(right(leftResult.value(), source), remaining, source);\n            repeatedResult = repeatedRule(leftResult.remaining());\n        }\n        if (repeatedResult.isError()) {\n            return repeatedResult;\n        }\n        return leftResult;\n    };\n};\nexports.leftAssociative.firstOf = function() {\n    return Array.prototype.slice.call(arguments, 0);\n};\nexports.nonConsuming = function(rule) {\n    return function(input) {\n        return rule(input).changeRemaining(input);\n    };\n};\nvar describeToken = function(token) {\n    if (token.value) {\n        return token.name + ' \"' + token.value + '\"';\n    } else {\n        return token.name;\n    }\n};\nfunction describeTokenMismatch(input, expected) {\n    var error;\n    var token = input.head();\n    if (token) {\n        error = errors.error({\n            expected: expected,\n            actual: describeToken(token),\n            location: token.source\n        });\n    } else {\n        error = errors.error({\n            expected: expected,\n            actual: \"end of tokens\"\n        });\n    }\n    return results.failure([\n        error\n    ], input);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/lop/lib/rules.js\n");

/***/ })

};
;