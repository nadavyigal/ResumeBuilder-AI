/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/mammoth";
exports.ids = ["vendor-chunks/mammoth"];
exports.modules = {

/***/ "(rsc)/./node_modules/mammoth/lib/document-to-html.js":
/*!******************************************************!*\
  !*** ./node_modules/mammoth/lib/document-to-html.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var _ = __webpack_require__(/*! underscore */ \"(rsc)/./node_modules/underscore/modules/index-all.js\");\nvar promises = __webpack_require__(/*! ./promises */ \"(rsc)/./node_modules/mammoth/lib/promises.js\");\nvar documents = __webpack_require__(/*! ./documents */ \"(rsc)/./node_modules/mammoth/lib/documents.js\");\nvar htmlPaths = __webpack_require__(/*! ./styles/html-paths */ \"(rsc)/./node_modules/mammoth/lib/styles/html-paths.js\");\nvar results = __webpack_require__(/*! ./results */ \"(rsc)/./node_modules/mammoth/lib/results.js\");\nvar images = __webpack_require__(/*! ./images */ \"(rsc)/./node_modules/mammoth/lib/images.js\");\nvar Html = __webpack_require__(/*! ./html */ \"(rsc)/./node_modules/mammoth/lib/html/index.js\");\nvar writers = __webpack_require__(/*! ./writers */ \"(rsc)/./node_modules/mammoth/lib/writers/index.js\");\nexports.DocumentConverter = DocumentConverter;\nfunction DocumentConverter(options) {\n    return {\n        convertToHtml: function(element) {\n            var comments = _.indexBy(element.type === documents.types.document ? element.comments : [], \"commentId\");\n            var conversion = new DocumentConversion(options, comments);\n            return conversion.convertToHtml(element);\n        }\n    };\n}\nfunction DocumentConversion(options, comments) {\n    var noteNumber = 1;\n    var noteReferences = [];\n    var referencedComments = [];\n    options = _.extend({\n        ignoreEmptyParagraphs: true\n    }, options);\n    var idPrefix = options.idPrefix === undefined ? \"\" : options.idPrefix;\n    var ignoreEmptyParagraphs = options.ignoreEmptyParagraphs;\n    var defaultParagraphStyle = htmlPaths.topLevelElement(\"p\");\n    var styleMap = options.styleMap || [];\n    function convertToHtml(document) {\n        var messages = [];\n        var html = elementToHtml(document, messages, {});\n        var deferredNodes = [];\n        walkHtml(html, function(node) {\n            if (node.type === \"deferred\") {\n                deferredNodes.push(node);\n            }\n        });\n        var deferredValues = {};\n        return promises.mapSeries(deferredNodes, function(deferred) {\n            return deferred.value().then(function(value) {\n                deferredValues[deferred.id] = value;\n            });\n        }).then(function() {\n            function replaceDeferred(nodes) {\n                return flatMap(nodes, function(node) {\n                    if (node.type === \"deferred\") {\n                        return deferredValues[node.id];\n                    } else if (node.children) {\n                        return [\n                            _.extend({}, node, {\n                                children: replaceDeferred(node.children)\n                            })\n                        ];\n                    } else {\n                        return [\n                            node\n                        ];\n                    }\n                });\n            }\n            var writer = writers.writer({\n                prettyPrint: options.prettyPrint,\n                outputFormat: options.outputFormat\n            });\n            Html.write(writer, Html.simplify(replaceDeferred(html)));\n            return new results.Result(writer.asString(), messages);\n        });\n    }\n    function convertElements(elements, messages, options) {\n        return flatMap(elements, function(element) {\n            return elementToHtml(element, messages, options);\n        });\n    }\n    function elementToHtml(element, messages, options) {\n        if (!options) {\n            throw new Error(\"options not set\");\n        }\n        var handler = elementConverters[element.type];\n        if (handler) {\n            return handler(element, messages, options);\n        } else {\n            return [];\n        }\n    }\n    function convertParagraph(element, messages, options) {\n        return htmlPathForParagraph(element, messages).wrap(function() {\n            var content = convertElements(element.children, messages, options);\n            if (ignoreEmptyParagraphs) {\n                return content;\n            } else {\n                return [\n                    Html.forceWrite\n                ].concat(content);\n            }\n        });\n    }\n    function htmlPathForParagraph(element, messages) {\n        var style = findStyle(element);\n        if (style) {\n            return style.to;\n        } else {\n            if (element.styleId) {\n                messages.push(unrecognisedStyleWarning(\"paragraph\", element));\n            }\n            return defaultParagraphStyle;\n        }\n    }\n    function convertRun(run, messages, options) {\n        var nodes = function() {\n            return convertElements(run.children, messages, options);\n        };\n        var paths = [];\n        if (run.highlight !== null) {\n            var path = findHtmlPath({\n                type: \"highlight\",\n                color: run.highlight\n            });\n            if (path) {\n                paths.push(path);\n            }\n        }\n        if (run.isSmallCaps) {\n            paths.push(findHtmlPathForRunProperty(\"smallCaps\"));\n        }\n        if (run.isAllCaps) {\n            paths.push(findHtmlPathForRunProperty(\"allCaps\"));\n        }\n        if (run.isStrikethrough) {\n            paths.push(findHtmlPathForRunProperty(\"strikethrough\", \"s\"));\n        }\n        if (run.isUnderline) {\n            paths.push(findHtmlPathForRunProperty(\"underline\"));\n        }\n        if (run.verticalAlignment === documents.verticalAlignment.subscript) {\n            paths.push(htmlPaths.element(\"sub\", {}, {\n                fresh: false\n            }));\n        }\n        if (run.verticalAlignment === documents.verticalAlignment.superscript) {\n            paths.push(htmlPaths.element(\"sup\", {}, {\n                fresh: false\n            }));\n        }\n        if (run.isItalic) {\n            paths.push(findHtmlPathForRunProperty(\"italic\", \"em\"));\n        }\n        if (run.isBold) {\n            paths.push(findHtmlPathForRunProperty(\"bold\", \"strong\"));\n        }\n        var stylePath = htmlPaths.empty;\n        var style = findStyle(run);\n        if (style) {\n            stylePath = style.to;\n        } else if (run.styleId) {\n            messages.push(unrecognisedStyleWarning(\"run\", run));\n        }\n        paths.push(stylePath);\n        paths.forEach(function(path) {\n            nodes = path.wrap.bind(path, nodes);\n        });\n        return nodes();\n    }\n    function findHtmlPathForRunProperty(elementType, defaultTagName) {\n        var path = findHtmlPath({\n            type: elementType\n        });\n        if (path) {\n            return path;\n        } else if (defaultTagName) {\n            return htmlPaths.element(defaultTagName, {}, {\n                fresh: false\n            });\n        } else {\n            return htmlPaths.empty;\n        }\n    }\n    function findHtmlPath(element, defaultPath) {\n        var style = findStyle(element);\n        return style ? style.to : defaultPath;\n    }\n    function findStyle(element) {\n        for(var i = 0; i < styleMap.length; i++){\n            if (styleMap[i].from.matches(element)) {\n                return styleMap[i];\n            }\n        }\n    }\n    function recoveringConvertImage(convertImage) {\n        return function(image, messages) {\n            return promises.attempt(function() {\n                return convertImage(image, messages);\n            }).caught(function(error) {\n                messages.push(results.error(error));\n                return [];\n            });\n        };\n    }\n    function noteHtmlId(note) {\n        return referentHtmlId(note.noteType, note.noteId);\n    }\n    function noteRefHtmlId(note) {\n        return referenceHtmlId(note.noteType, note.noteId);\n    }\n    function referentHtmlId(referenceType, referenceId) {\n        return htmlId(referenceType + \"-\" + referenceId);\n    }\n    function referenceHtmlId(referenceType, referenceId) {\n        return htmlId(referenceType + \"-ref-\" + referenceId);\n    }\n    function htmlId(suffix) {\n        return idPrefix + suffix;\n    }\n    var defaultTablePath = htmlPaths.elements([\n        htmlPaths.element(\"table\", {}, {\n            fresh: true\n        })\n    ]);\n    function convertTable(element, messages, options) {\n        return findHtmlPath(element, defaultTablePath).wrap(function() {\n            return convertTableChildren(element, messages, options);\n        });\n    }\n    function convertTableChildren(element, messages, options) {\n        var bodyIndex = _.findIndex(element.children, function(child) {\n            return !child.type === documents.types.tableRow || !child.isHeader;\n        });\n        if (bodyIndex === -1) {\n            bodyIndex = element.children.length;\n        }\n        var children;\n        if (bodyIndex === 0) {\n            children = convertElements(element.children, messages, _.extend({}, options, {\n                isTableHeader: false\n            }));\n        } else {\n            var headRows = convertElements(element.children.slice(0, bodyIndex), messages, _.extend({}, options, {\n                isTableHeader: true\n            }));\n            var bodyRows = convertElements(element.children.slice(bodyIndex), messages, _.extend({}, options, {\n                isTableHeader: false\n            }));\n            children = [\n                Html.freshElement(\"thead\", {}, headRows),\n                Html.freshElement(\"tbody\", {}, bodyRows)\n            ];\n        }\n        return [\n            Html.forceWrite\n        ].concat(children);\n    }\n    function convertTableRow(element, messages, options) {\n        var children = convertElements(element.children, messages, options);\n        return [\n            Html.freshElement(\"tr\", {}, [\n                Html.forceWrite\n            ].concat(children))\n        ];\n    }\n    function convertTableCell(element, messages, options) {\n        var tagName = options.isTableHeader ? \"th\" : \"td\";\n        var children = convertElements(element.children, messages, options);\n        var attributes = {};\n        if (element.colSpan !== 1) {\n            attributes.colspan = element.colSpan.toString();\n        }\n        if (element.rowSpan !== 1) {\n            attributes.rowspan = element.rowSpan.toString();\n        }\n        return [\n            Html.freshElement(tagName, attributes, [\n                Html.forceWrite\n            ].concat(children))\n        ];\n    }\n    function convertCommentReference(reference, messages, options) {\n        return findHtmlPath(reference, htmlPaths.ignore).wrap(function() {\n            var comment = comments[reference.commentId];\n            var count = referencedComments.length + 1;\n            var label = \"[\" + commentAuthorLabel(comment) + count + \"]\";\n            referencedComments.push({\n                label: label,\n                comment: comment\n            });\n            // TODO: remove duplication with note references\n            return [\n                Html.freshElement(\"a\", {\n                    href: \"#\" + referentHtmlId(\"comment\", reference.commentId),\n                    id: referenceHtmlId(\"comment\", reference.commentId)\n                }, [\n                    Html.text(label)\n                ])\n            ];\n        });\n    }\n    function convertComment(referencedComment, messages, options) {\n        // TODO: remove duplication with note references\n        var label = referencedComment.label;\n        var comment = referencedComment.comment;\n        var body = convertElements(comment.body, messages, options).concat([\n            Html.nonFreshElement(\"p\", {}, [\n                Html.text(\" \"),\n                Html.freshElement(\"a\", {\n                    \"href\": \"#\" + referenceHtmlId(\"comment\", comment.commentId)\n                }, [\n                    Html.text(\"↑\")\n                ])\n            ])\n        ]);\n        return [\n            Html.freshElement(\"dt\", {\n                \"id\": referentHtmlId(\"comment\", comment.commentId)\n            }, [\n                Html.text(\"Comment \" + label)\n            ]),\n            Html.freshElement(\"dd\", {}, body)\n        ];\n    }\n    function convertBreak(element, messages, options) {\n        return htmlPathForBreak(element).wrap(function() {\n            return [];\n        });\n    }\n    function htmlPathForBreak(element) {\n        var style = findStyle(element);\n        if (style) {\n            return style.to;\n        } else if (element.breakType === \"line\") {\n            return htmlPaths.topLevelElement(\"br\");\n        } else {\n            return htmlPaths.empty;\n        }\n    }\n    var elementConverters = {\n        \"document\": function(document, messages, options) {\n            var children = convertElements(document.children, messages, options);\n            var notes = noteReferences.map(function(noteReference) {\n                return document.notes.resolve(noteReference);\n            });\n            var notesNodes = convertElements(notes, messages, options);\n            return children.concat([\n                Html.freshElement(\"ol\", {}, notesNodes),\n                Html.freshElement(\"dl\", {}, flatMap(referencedComments, function(referencedComment) {\n                    return convertComment(referencedComment, messages, options);\n                }))\n            ]);\n        },\n        \"paragraph\": convertParagraph,\n        \"run\": convertRun,\n        \"text\": function(element, messages, options) {\n            return [\n                Html.text(element.value)\n            ];\n        },\n        \"tab\": function(element, messages, options) {\n            return [\n                Html.text(\"\t\")\n            ];\n        },\n        \"hyperlink\": function(element, messages, options) {\n            var href = element.anchor ? \"#\" + htmlId(element.anchor) : element.href;\n            var attributes = {\n                href: href\n            };\n            if (element.targetFrame != null) {\n                attributes.target = element.targetFrame;\n            }\n            var children = convertElements(element.children, messages, options);\n            return [\n                Html.nonFreshElement(\"a\", attributes, children)\n            ];\n        },\n        \"checkbox\": function(element) {\n            var attributes = {\n                type: \"checkbox\"\n            };\n            if (element.checked) {\n                attributes[\"checked\"] = \"checked\";\n            }\n            return [\n                Html.freshElement(\"input\", attributes)\n            ];\n        },\n        \"bookmarkStart\": function(element, messages, options) {\n            var anchor = Html.freshElement(\"a\", {\n                id: htmlId(element.name)\n            }, [\n                Html.forceWrite\n            ]);\n            return [\n                anchor\n            ];\n        },\n        \"noteReference\": function(element, messages, options) {\n            noteReferences.push(element);\n            var anchor = Html.freshElement(\"a\", {\n                href: \"#\" + noteHtmlId(element),\n                id: noteRefHtmlId(element)\n            }, [\n                Html.text(\"[\" + noteNumber++ + \"]\")\n            ]);\n            return [\n                Html.freshElement(\"sup\", {}, [\n                    anchor\n                ])\n            ];\n        },\n        \"note\": function(element, messages, options) {\n            var children = convertElements(element.body, messages, options);\n            var backLink = Html.elementWithTag(htmlPaths.element(\"p\", {}, {\n                fresh: false\n            }), [\n                Html.text(\" \"),\n                Html.freshElement(\"a\", {\n                    href: \"#\" + noteRefHtmlId(element)\n                }, [\n                    Html.text(\"↑\")\n                ])\n            ]);\n            var body = children.concat([\n                backLink\n            ]);\n            return Html.freshElement(\"li\", {\n                id: noteHtmlId(element)\n            }, body);\n        },\n        \"commentReference\": convertCommentReference,\n        \"comment\": convertComment,\n        \"image\": deferredConversion(recoveringConvertImage(options.convertImage || images.dataUri)),\n        \"table\": convertTable,\n        \"tableRow\": convertTableRow,\n        \"tableCell\": convertTableCell,\n        \"break\": convertBreak\n    };\n    return {\n        convertToHtml: convertToHtml\n    };\n}\nvar deferredId = 1;\nfunction deferredConversion(func) {\n    return function(element, messages, options) {\n        return [\n            {\n                type: \"deferred\",\n                id: deferredId++,\n                value: function() {\n                    return func(element, messages, options);\n                }\n            }\n        ];\n    };\n}\nfunction unrecognisedStyleWarning(type, element) {\n    return results.warning(\"Unrecognised \" + type + \" style: '\" + element.styleName + \"'\" + \" (Style ID: \" + element.styleId + \")\");\n}\nfunction flatMap(values, func) {\n    return _.flatten(values.map(func), true);\n}\nfunction walkHtml(nodes, callback) {\n    nodes.forEach(function(node) {\n        callback(node);\n        if (node.children) {\n            walkHtml(node.children, callback);\n        }\n    });\n}\nvar commentAuthorLabel = exports.commentAuthorLabel = function commentAuthorLabel(comment) {\n    return comment.authorInitials || \"\";\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvZG9jdW1lbnQtdG8taHRtbC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxJQUFJQyxtQkFBT0EsQ0FBQyx3RUFBWTtBQUU1QixJQUFJQyxXQUFXRCxtQkFBT0EsQ0FBQyxnRUFBWTtBQUNuQyxJQUFJRSxZQUFZRixtQkFBT0EsQ0FBQyxrRUFBYTtBQUNyQyxJQUFJRyxZQUFZSCxtQkFBT0EsQ0FBQyxrRkFBcUI7QUFDN0MsSUFBSUksVUFBVUosbUJBQU9BLENBQUMsOERBQVc7QUFDakMsSUFBSUssU0FBU0wsbUJBQU9BLENBQUMsNERBQVU7QUFDL0IsSUFBSU0sT0FBT04sbUJBQU9BLENBQUMsOERBQVE7QUFDM0IsSUFBSU8sVUFBVVAsbUJBQU9BLENBQUMsb0VBQVc7QUFFakNRLHlCQUF5QixHQUFHQztBQUc1QixTQUFTQSxrQkFBa0JDLE9BQU87SUFDOUIsT0FBTztRQUNIQyxlQUFlLFNBQVNDLE9BQU87WUFDM0IsSUFBSUMsV0FBV2QsRUFBRWUsT0FBTyxDQUNwQkYsUUFBUUcsSUFBSSxLQUFLYixVQUFVYyxLQUFLLENBQUNDLFFBQVEsR0FBR0wsUUFBUUMsUUFBUSxHQUFHLEVBQUUsRUFDakU7WUFFSixJQUFJSyxhQUFhLElBQUlDLG1CQUFtQlQsU0FBU0c7WUFDakQsT0FBT0ssV0FBV1AsYUFBYSxDQUFDQztRQUNwQztJQUNKO0FBQ0o7QUFFQSxTQUFTTyxtQkFBbUJULE9BQU8sRUFBRUcsUUFBUTtJQUN6QyxJQUFJTyxhQUFhO0lBRWpCLElBQUlDLGlCQUFpQixFQUFFO0lBRXZCLElBQUlDLHFCQUFxQixFQUFFO0lBRTNCWixVQUFVWCxFQUFFd0IsTUFBTSxDQUFDO1FBQUNDLHVCQUF1QjtJQUFJLEdBQUdkO0lBQ2xELElBQUllLFdBQVdmLFFBQVFlLFFBQVEsS0FBS0MsWUFBWSxLQUFLaEIsUUFBUWUsUUFBUTtJQUNyRSxJQUFJRCx3QkFBd0JkLFFBQVFjLHFCQUFxQjtJQUV6RCxJQUFJRyx3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QUFRdUssT0FBTyxDQUNsQixrQkFBa0I1SixPQUFPLGNBQWNILFFBQVFnSyxTQUFTLEdBQUcsTUFDM0QsaUJBQWlCaEssUUFBUXdELE9BQU8sR0FBRztBQUUzQztBQUVBLFNBQVN2QixRQUFRZ0ksTUFBTSxFQUFFSCxJQUFJO0lBQ3pCLE9BQU8zSyxFQUFFK0ssT0FBTyxDQUFDRCxPQUFPakIsR0FBRyxDQUFDYyxPQUFPO0FBQ3ZDO0FBRUEsU0FBU3hJLFNBQVNVLEtBQUssRUFBRW1JLFFBQVE7SUFDN0JuSSxNQUFNOEMsT0FBTyxDQUFDLFNBQVN2RCxJQUFJO1FBQ3ZCNEksU0FBUzVJO1FBQ1QsSUFBSUEsS0FBS1csUUFBUSxFQUFFO1lBQ2ZaLFNBQVNDLEtBQUtXLFFBQVEsRUFBRWlJO1FBQzVCO0lBQ0o7QUFDSjtBQUVBLElBQUk5QixxQkFBcUJ6SSwwQkFBMEIsR0FBRyxTQUFTeUksbUJBQW1CSixPQUFPO0lBQ3JGLE9BQU9BLFFBQVFtQyxjQUFjLElBQUk7QUFDckMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN1bWVidWlsZGVyLWFpLy4vbm9kZV9tb2R1bGVzL21hbW1vdGgvbGliL2RvY3VtZW50LXRvLWh0bWwuanM/ZTQyOCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgXyA9IHJlcXVpcmUoXCJ1bmRlcnNjb3JlXCIpO1xuXG52YXIgcHJvbWlzZXMgPSByZXF1aXJlKFwiLi9wcm9taXNlc1wiKTtcbnZhciBkb2N1bWVudHMgPSByZXF1aXJlKFwiLi9kb2N1bWVudHNcIik7XG52YXIgaHRtbFBhdGhzID0gcmVxdWlyZShcIi4vc3R5bGVzL2h0bWwtcGF0aHNcIik7XG52YXIgcmVzdWx0cyA9IHJlcXVpcmUoXCIuL3Jlc3VsdHNcIik7XG52YXIgaW1hZ2VzID0gcmVxdWlyZShcIi4vaW1hZ2VzXCIpO1xudmFyIEh0bWwgPSByZXF1aXJlKFwiLi9odG1sXCIpO1xudmFyIHdyaXRlcnMgPSByZXF1aXJlKFwiLi93cml0ZXJzXCIpO1xuXG5leHBvcnRzLkRvY3VtZW50Q29udmVydGVyID0gRG9jdW1lbnRDb252ZXJ0ZXI7XG5cblxuZnVuY3Rpb24gRG9jdW1lbnRDb252ZXJ0ZXIob3B0aW9ucykge1xuICAgIHJldHVybiB7XG4gICAgICAgIGNvbnZlcnRUb0h0bWw6IGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAgICAgICAgICAgIHZhciBjb21tZW50cyA9IF8uaW5kZXhCeShcbiAgICAgICAgICAgICAgICBlbGVtZW50LnR5cGUgPT09IGRvY3VtZW50cy50eXBlcy5kb2N1bWVudCA/IGVsZW1lbnQuY29tbWVudHMgOiBbXSxcbiAgICAgICAgICAgICAgICBcImNvbW1lbnRJZFwiXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgdmFyIGNvbnZlcnNpb24gPSBuZXcgRG9jdW1lbnRDb252ZXJzaW9uKG9wdGlvbnMsIGNvbW1lbnRzKTtcbiAgICAgICAgICAgIHJldHVybiBjb252ZXJzaW9uLmNvbnZlcnRUb0h0bWwoZWxlbWVudCk7XG4gICAgICAgIH1cbiAgICB9O1xufVxuXG5mdW5jdGlvbiBEb2N1bWVudENvbnZlcnNpb24ob3B0aW9ucywgY29tbWVudHMpIHtcbiAgICB2YXIgbm90ZU51bWJlciA9IDE7XG5cbiAgICB2YXIgbm90ZVJlZmVyZW5jZXMgPSBbXTtcblxuICAgIHZhciByZWZlcmVuY2VkQ29tbWVudHMgPSBbXTtcblxuICAgIG9wdGlvbnMgPSBfLmV4dGVuZCh7aWdub3JlRW1wdHlQYXJhZ3JhcGhzOiB0cnVlfSwgb3B0aW9ucyk7XG4gICAgdmFyIGlkUHJlZml4ID0gb3B0aW9ucy5pZFByZWZpeCA9PT0gdW5kZWZpbmVkID8gXCJcIiA6IG9wdGlvbnMuaWRQcmVmaXg7XG4gICAgdmFyIGlnbm9yZUVtcHR5UGFyYWdyYXBocyA9IG9wdGlvbnMuaWdub3JlRW1wdHlQYXJhZ3JhcGhzO1xuXG4gICAgdmFyIGRlZmF1bHRQYXJhZ3JhcGhTdHlsZSA9IGh0bWxQYXRocy50b3BMZXZlbEVsZW1lbnQoXCJwXCIpO1xuXG4gICAgdmFyIHN0eWxlTWFwID0gb3B0aW9ucy5zdHlsZU1hcCB8fCBbXTtcblxuICAgIGZ1bmN0aW9uIGNvbnZlcnRUb0h0bWwoZG9jdW1lbnQpIHtcbiAgICAgICAgdmFyIG1lc3NhZ2VzID0gW107XG5cbiAgICAgICAgdmFyIGh0bWwgPSBlbGVtZW50VG9IdG1sKGRvY3VtZW50LCBtZXNzYWdlcywge30pO1xuXG4gICAgICAgIHZhciBkZWZlcnJlZE5vZGVzID0gW107XG4gICAgICAgIHdhbGtIdG1sKGh0bWwsIGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgICAgICAgIGlmIChub2RlLnR5cGUgPT09IFwiZGVmZXJyZWRcIikge1xuICAgICAgICAgICAgICAgIGRlZmVycmVkTm9kZXMucHVzaChub2RlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHZhciBkZWZlcnJlZFZhbHVlcyA9IHt9O1xuICAgICAgICByZXR1cm4gcHJvbWlzZXMubWFwU2VyaWVzKGRlZmVycmVkTm9kZXMsIGZ1bmN0aW9uKGRlZmVycmVkKSB7XG4gICAgICAgICAgICByZXR1cm4gZGVmZXJyZWQudmFsdWUoKS50aGVuKGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgZGVmZXJyZWRWYWx1ZXNbZGVmZXJyZWQuaWRdID0gdmFsdWU7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSkudGhlbihmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGZ1bmN0aW9uIHJlcGxhY2VEZWZlcnJlZChub2Rlcykge1xuICAgICAgICAgICAgICAgIHJldHVybiBmbGF0TWFwKG5vZGVzLCBmdW5jdGlvbihub2RlKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChub2RlLnR5cGUgPT09IFwiZGVmZXJyZWRcIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRlZmVycmVkVmFsdWVzW25vZGUuaWRdO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKG5vZGUuY2hpbGRyZW4pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXy5leHRlbmQoe30sIG5vZGUsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IHJlcGxhY2VEZWZlcnJlZChub2RlLmNoaWxkcmVuKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICBdO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtub2RlXTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIHdyaXRlciA9IHdyaXRlcnMud3JpdGVyKHtcbiAgICAgICAgICAgICAgICBwcmV0dHlQcmludDogb3B0aW9ucy5wcmV0dHlQcmludCxcbiAgICAgICAgICAgICAgICBvdXRwdXRGb3JtYXQ6IG9wdGlvbnMub3V0cHV0Rm9ybWF0XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIEh0bWwud3JpdGUod3JpdGVyLCBIdG1sLnNpbXBsaWZ5KHJlcGxhY2VEZWZlcnJlZChodG1sKSkpO1xuICAgICAgICAgICAgcmV0dXJuIG5ldyByZXN1bHRzLlJlc3VsdCh3cml0ZXIuYXNTdHJpbmcoKSwgbWVzc2FnZXMpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjb252ZXJ0RWxlbWVudHMoZWxlbWVudHMsIG1lc3NhZ2VzLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBmbGF0TWFwKGVsZW1lbnRzLCBmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgICAgICAgICByZXR1cm4gZWxlbWVudFRvSHRtbChlbGVtZW50LCBtZXNzYWdlcywgb3B0aW9ucyk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGVsZW1lbnRUb0h0bWwoZWxlbWVudCwgbWVzc2FnZXMsIG9wdGlvbnMpIHtcbiAgICAgICAgaWYgKCFvcHRpb25zKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJvcHRpb25zIG5vdCBzZXRcIik7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGhhbmRsZXIgPSBlbGVtZW50Q29udmVydGVyc1tlbGVtZW50LnR5cGVdO1xuICAgICAgICBpZiAoaGFuZGxlcikge1xuICAgICAgICAgICAgcmV0dXJuIGhhbmRsZXIoZWxlbWVudCwgbWVzc2FnZXMsIG9wdGlvbnMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIFtdO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY29udmVydFBhcmFncmFwaChlbGVtZW50LCBtZXNzYWdlcywgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gaHRtbFBhdGhGb3JQYXJhZ3JhcGgoZWxlbWVudCwgbWVzc2FnZXMpLndyYXAoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IGNvbnZlcnRFbGVtZW50cyhlbGVtZW50LmNoaWxkcmVuLCBtZXNzYWdlcywgb3B0aW9ucyk7XG4gICAgICAgICAgICBpZiAoaWdub3JlRW1wdHlQYXJhZ3JhcGhzKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybiBbSHRtbC5mb3JjZVdyaXRlXS5jb25jYXQoY29udGVudCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGh0bWxQYXRoRm9yUGFyYWdyYXBoKGVsZW1lbnQsIG1lc3NhZ2VzKSB7XG4gICAgICAgIHZhciBzdHlsZSA9IGZpbmRTdHlsZShlbGVtZW50KTtcblxuICAgICAgICBpZiAoc3R5bGUpIHtcbiAgICAgICAgICAgIHJldHVybiBzdHlsZS50bztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmIChlbGVtZW50LnN0eWxlSWQpIHtcbiAgICAgICAgICAgICAgICBtZXNzYWdlcy5wdXNoKHVucmVjb2duaXNlZFN0eWxlV2FybmluZyhcInBhcmFncmFwaFwiLCBlbGVtZW50KSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZGVmYXVsdFBhcmFncmFwaFN0eWxlO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY29udmVydFJ1bihydW4sIG1lc3NhZ2VzLCBvcHRpb25zKSB7XG4gICAgICAgIHZhciBub2RlcyA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuIGNvbnZlcnRFbGVtZW50cyhydW4uY2hpbGRyZW4sIG1lc3NhZ2VzLCBvcHRpb25zKTtcbiAgICAgICAgfTtcbiAgICAgICAgdmFyIHBhdGhzID0gW107XG4gICAgICAgIGlmIChydW4uaGlnaGxpZ2h0ICE9PSBudWxsKSB7XG4gICAgICAgICAgICB2YXIgcGF0aCA9IGZpbmRIdG1sUGF0aCh7dHlwZTogXCJoaWdobGlnaHRcIiwgY29sb3I6IHJ1bi5oaWdobGlnaHR9KTtcbiAgICAgICAgICAgIGlmIChwYXRoKSB7XG4gICAgICAgICAgICAgICAgcGF0aHMucHVzaChwYXRoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAocnVuLmlzU21hbGxDYXBzKSB7XG4gICAgICAgICAgICBwYXRocy5wdXNoKGZpbmRIdG1sUGF0aEZvclJ1blByb3BlcnR5KFwic21hbGxDYXBzXCIpKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocnVuLmlzQWxsQ2Fwcykge1xuICAgICAgICAgICAgcGF0aHMucHVzaChmaW5kSHRtbFBhdGhGb3JSdW5Qcm9wZXJ0eShcImFsbENhcHNcIikpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChydW4uaXNTdHJpa2V0aHJvdWdoKSB7XG4gICAgICAgICAgICBwYXRocy5wdXNoKGZpbmRIdG1sUGF0aEZvclJ1blByb3BlcnR5KFwic3RyaWtldGhyb3VnaFwiLCBcInNcIikpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChydW4uaXNVbmRlcmxpbmUpIHtcbiAgICAgICAgICAgIHBhdGhzLnB1c2goZmluZEh0bWxQYXRoRm9yUnVuUHJvcGVydHkoXCJ1bmRlcmxpbmVcIikpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChydW4udmVydGljYWxBbGlnbm1lbnQgPT09IGRvY3VtZW50cy52ZXJ0aWNhbEFsaWdubWVudC5zdWJzY3JpcHQpIHtcbiAgICAgICAgICAgIHBhdGhzLnB1c2goaHRtbFBhdGhzLmVsZW1lbnQoXCJzdWJcIiwge30sIHtmcmVzaDogZmFsc2V9KSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJ1bi52ZXJ0aWNhbEFsaWdubWVudCA9PT0gZG9jdW1lbnRzLnZlcnRpY2FsQWxpZ25tZW50LnN1cGVyc2NyaXB0KSB7XG4gICAgICAgICAgICBwYXRocy5wdXNoKGh0bWxQYXRocy5lbGVtZW50KFwic3VwXCIsIHt9LCB7ZnJlc2g6IGZhbHNlfSkpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChydW4uaXNJdGFsaWMpIHtcbiAgICAgICAgICAgIHBhdGhzLnB1c2goZmluZEh0bWxQYXRoRm9yUnVuUHJvcGVydHkoXCJpdGFsaWNcIiwgXCJlbVwiKSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJ1bi5pc0JvbGQpIHtcbiAgICAgICAgICAgIHBhdGhzLnB1c2goZmluZEh0bWxQYXRoRm9yUnVuUHJvcGVydHkoXCJib2xkXCIsIFwic3Ryb25nXCIpKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgc3R5bGVQYXRoID0gaHRtbFBhdGhzLmVtcHR5O1xuICAgICAgICB2YXIgc3R5bGUgPSBmaW5kU3R5bGUocnVuKTtcbiAgICAgICAgaWYgKHN0eWxlKSB7XG4gICAgICAgICAgICBzdHlsZVBhdGggPSBzdHlsZS50bztcbiAgICAgICAgfSBlbHNlIGlmIChydW4uc3R5bGVJZCkge1xuICAgICAgICAgICAgbWVzc2FnZXMucHVzaCh1bnJlY29nbmlzZWRTdHlsZVdhcm5pbmcoXCJydW5cIiwgcnVuKSk7XG4gICAgICAgIH1cbiAgICAgICAgcGF0aHMucHVzaChzdHlsZVBhdGgpO1xuXG4gICAgICAgIHBhdGhzLmZvckVhY2goZnVuY3Rpb24ocGF0aCkge1xuICAgICAgICAgICAgbm9kZXMgPSBwYXRoLndyYXAuYmluZChwYXRoLCBub2Rlcyk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiBub2RlcygpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGZpbmRIdG1sUGF0aEZvclJ1blByb3BlcnR5KGVsZW1lbnRUeXBlLCBkZWZhdWx0VGFnTmFtZSkge1xuICAgICAgICB2YXIgcGF0aCA9IGZpbmRIdG1sUGF0aCh7dHlwZTogZWxlbWVudFR5cGV9KTtcbiAgICAgICAgaWYgKHBhdGgpIHtcbiAgICAgICAgICAgIHJldHVybiBwYXRoO1xuICAgICAgICB9IGVsc2UgaWYgKGRlZmF1bHRUYWdOYW1lKSB7XG4gICAgICAgICAgICByZXR1cm4gaHRtbFBhdGhzLmVsZW1lbnQoZGVmYXVsdFRhZ05hbWUsIHt9LCB7ZnJlc2g6IGZhbHNlfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gaHRtbFBhdGhzLmVtcHR5O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZmluZEh0bWxQYXRoKGVsZW1lbnQsIGRlZmF1bHRQYXRoKSB7XG4gICAgICAgIHZhciBzdHlsZSA9IGZpbmRTdHlsZShlbGVtZW50KTtcbiAgICAgICAgcmV0dXJuIHN0eWxlID8gc3R5bGUudG8gOiBkZWZhdWx0UGF0aDtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBmaW5kU3R5bGUoZWxlbWVudCkge1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlTWFwLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAoc3R5bGVNYXBbaV0uZnJvbS5tYXRjaGVzKGVsZW1lbnQpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHN0eWxlTWFwW2ldO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcmVjb3ZlcmluZ0NvbnZlcnRJbWFnZShjb252ZXJ0SW1hZ2UpIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKGltYWdlLCBtZXNzYWdlcykge1xuICAgICAgICAgICAgcmV0dXJuIHByb21pc2VzLmF0dGVtcHQoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNvbnZlcnRJbWFnZShpbWFnZSwgbWVzc2FnZXMpO1xuICAgICAgICAgICAgfSkuY2F1Z2h0KGZ1bmN0aW9uKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgbWVzc2FnZXMucHVzaChyZXN1bHRzLmVycm9yKGVycm9yKSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFtdO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gbm90ZUh0bWxJZChub3RlKSB7XG4gICAgICAgIHJldHVybiByZWZlcmVudEh0bWxJZChub3RlLm5vdGVUeXBlLCBub3RlLm5vdGVJZCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gbm90ZVJlZkh0bWxJZChub3RlKSB7XG4gICAgICAgIHJldHVybiByZWZlcmVuY2VIdG1sSWQobm90ZS5ub3RlVHlwZSwgbm90ZS5ub3RlSWQpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHJlZmVyZW50SHRtbElkKHJlZmVyZW5jZVR5cGUsIHJlZmVyZW5jZUlkKSB7XG4gICAgICAgIHJldHVybiBodG1sSWQocmVmZXJlbmNlVHlwZSArIFwiLVwiICsgcmVmZXJlbmNlSWQpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHJlZmVyZW5jZUh0bWxJZChyZWZlcmVuY2VUeXBlLCByZWZlcmVuY2VJZCkge1xuICAgICAgICByZXR1cm4gaHRtbElkKHJlZmVyZW5jZVR5cGUgKyBcIi1yZWYtXCIgKyByZWZlcmVuY2VJZCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaHRtbElkKHN1ZmZpeCkge1xuICAgICAgICByZXR1cm4gaWRQcmVmaXggKyBzdWZmaXg7XG4gICAgfVxuXG4gICAgdmFyIGRlZmF1bHRUYWJsZVBhdGggPSBodG1sUGF0aHMuZWxlbWVudHMoW1xuICAgICAgICBodG1sUGF0aHMuZWxlbWVudChcInRhYmxlXCIsIHt9LCB7ZnJlc2g6IHRydWV9KVxuICAgIF0pO1xuXG4gICAgZnVuY3Rpb24gY29udmVydFRhYmxlKGVsZW1lbnQsIG1lc3NhZ2VzLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBmaW5kSHRtbFBhdGgoZWxlbWVudCwgZGVmYXVsdFRhYmxlUGF0aCkud3JhcChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiBjb252ZXJ0VGFibGVDaGlsZHJlbihlbGVtZW50LCBtZXNzYWdlcywgb3B0aW9ucyk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNvbnZlcnRUYWJsZUNoaWxkcmVuKGVsZW1lbnQsIG1lc3NhZ2VzLCBvcHRpb25zKSB7XG4gICAgICAgIHZhciBib2R5SW5kZXggPSBfLmZpbmRJbmRleChlbGVtZW50LmNoaWxkcmVuLCBmdW5jdGlvbihjaGlsZCkge1xuICAgICAgICAgICAgcmV0dXJuICFjaGlsZC50eXBlID09PSBkb2N1bWVudHMudHlwZXMudGFibGVSb3cgfHwgIWNoaWxkLmlzSGVhZGVyO1xuICAgICAgICB9KTtcbiAgICAgICAgaWYgKGJvZHlJbmRleCA9PT0gLTEpIHtcbiAgICAgICAgICAgIGJvZHlJbmRleCA9IGVsZW1lbnQuY2hpbGRyZW4ubGVuZ3RoO1xuICAgICAgICB9XG4gICAgICAgIHZhciBjaGlsZHJlbjtcbiAgICAgICAgaWYgKGJvZHlJbmRleCA9PT0gMCkge1xuICAgICAgICAgICAgY2hpbGRyZW4gPSBjb252ZXJ0RWxlbWVudHMoXG4gICAgICAgICAgICAgICAgZWxlbWVudC5jaGlsZHJlbixcbiAgICAgICAgICAgICAgICBtZXNzYWdlcyxcbiAgICAgICAgICAgICAgICBfLmV4dGVuZCh7fSwgb3B0aW9ucywge2lzVGFibGVIZWFkZXI6IGZhbHNlfSlcbiAgICAgICAgICAgICk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB2YXIgaGVhZFJvd3MgPSBjb252ZXJ0RWxlbWVudHMoXG4gICAgICAgICAgICAgICAgZWxlbWVudC5jaGlsZHJlbi5zbGljZSgwLCBib2R5SW5kZXgpLFxuICAgICAgICAgICAgICAgIG1lc3NhZ2VzLFxuICAgICAgICAgICAgICAgIF8uZXh0ZW5kKHt9LCBvcHRpb25zLCB7aXNUYWJsZUhlYWRlcjogdHJ1ZX0pXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgdmFyIGJvZHlSb3dzID0gY29udmVydEVsZW1lbnRzKFxuICAgICAgICAgICAgICAgIGVsZW1lbnQuY2hpbGRyZW4uc2xpY2UoYm9keUluZGV4KSxcbiAgICAgICAgICAgICAgICBtZXNzYWdlcyxcbiAgICAgICAgICAgICAgICBfLmV4dGVuZCh7fSwgb3B0aW9ucywge2lzVGFibGVIZWFkZXI6IGZhbHNlfSlcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICBjaGlsZHJlbiA9IFtcbiAgICAgICAgICAgICAgICBIdG1sLmZyZXNoRWxlbWVudChcInRoZWFkXCIsIHt9LCBoZWFkUm93cyksXG4gICAgICAgICAgICAgICAgSHRtbC5mcmVzaEVsZW1lbnQoXCJ0Ym9keVwiLCB7fSwgYm9keVJvd3MpXG4gICAgICAgICAgICBdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBbSHRtbC5mb3JjZVdyaXRlXS5jb25jYXQoY2hpbGRyZW4pO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNvbnZlcnRUYWJsZVJvdyhlbGVtZW50LCBtZXNzYWdlcywgb3B0aW9ucykge1xuICAgICAgICB2YXIgY2hpbGRyZW4gPSBjb252ZXJ0RWxlbWVudHMoZWxlbWVudC5jaGlsZHJlbiwgbWVzc2FnZXMsIG9wdGlvbnMpO1xuICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgSHRtbC5mcmVzaEVsZW1lbnQoXCJ0clwiLCB7fSwgW0h0bWwuZm9yY2VXcml0ZV0uY29uY2F0KGNoaWxkcmVuKSlcbiAgICAgICAgXTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjb252ZXJ0VGFibGVDZWxsKGVsZW1lbnQsIG1lc3NhZ2VzLCBvcHRpb25zKSB7XG4gICAgICAgIHZhciB0YWdOYW1lID0gb3B0aW9ucy5pc1RhYmxlSGVhZGVyID8gXCJ0aFwiIDogXCJ0ZFwiO1xuICAgICAgICB2YXIgY2hpbGRyZW4gPSBjb252ZXJ0RWxlbWVudHMoZWxlbWVudC5jaGlsZHJlbiwgbWVzc2FnZXMsIG9wdGlvbnMpO1xuICAgICAgICB2YXIgYXR0cmlidXRlcyA9IHt9O1xuICAgICAgICBpZiAoZWxlbWVudC5jb2xTcGFuICE9PSAxKSB7XG4gICAgICAgICAgICBhdHRyaWJ1dGVzLmNvbHNwYW4gPSBlbGVtZW50LmNvbFNwYW4udG9TdHJpbmcoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZWxlbWVudC5yb3dTcGFuICE9PSAxKSB7XG4gICAgICAgICAgICBhdHRyaWJ1dGVzLnJvd3NwYW4gPSBlbGVtZW50LnJvd1NwYW4udG9TdHJpbmcoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBIdG1sLmZyZXNoRWxlbWVudCh0YWdOYW1lLCBhdHRyaWJ1dGVzLCBbSHRtbC5mb3JjZVdyaXRlXS5jb25jYXQoY2hpbGRyZW4pKVxuICAgICAgICBdO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNvbnZlcnRDb21tZW50UmVmZXJlbmNlKHJlZmVyZW5jZSwgbWVzc2FnZXMsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIGZpbmRIdG1sUGF0aChyZWZlcmVuY2UsIGh0bWxQYXRocy5pZ25vcmUpLndyYXAoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB2YXIgY29tbWVudCA9IGNvbW1lbnRzW3JlZmVyZW5jZS5jb21tZW50SWRdO1xuICAgICAgICAgICAgdmFyIGNvdW50ID0gcmVmZXJlbmNlZENvbW1lbnRzLmxlbmd0aCArIDE7XG4gICAgICAgICAgICB2YXIgbGFiZWwgPSBcIltcIiArIGNvbW1lbnRBdXRob3JMYWJlbChjb21tZW50KSArIGNvdW50ICsgXCJdXCI7XG4gICAgICAgICAgICByZWZlcmVuY2VkQ29tbWVudHMucHVzaCh7bGFiZWw6IGxhYmVsLCBjb21tZW50OiBjb21tZW50fSk7XG4gICAgICAgICAgICAvLyBUT0RPOiByZW1vdmUgZHVwbGljYXRpb24gd2l0aCBub3RlIHJlZmVyZW5jZXNcbiAgICAgICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICAgICAgSHRtbC5mcmVzaEVsZW1lbnQoXCJhXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgaHJlZjogXCIjXCIgKyByZWZlcmVudEh0bWxJZChcImNvbW1lbnRcIiwgcmVmZXJlbmNlLmNvbW1lbnRJZCksXG4gICAgICAgICAgICAgICAgICAgIGlkOiByZWZlcmVuY2VIdG1sSWQoXCJjb21tZW50XCIsIHJlZmVyZW5jZS5jb21tZW50SWQpXG4gICAgICAgICAgICAgICAgfSwgW0h0bWwudGV4dChsYWJlbCldKVxuICAgICAgICAgICAgXTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY29udmVydENvbW1lbnQocmVmZXJlbmNlZENvbW1lbnQsIG1lc3NhZ2VzLCBvcHRpb25zKSB7XG4gICAgICAgIC8vIFRPRE86IHJlbW92ZSBkdXBsaWNhdGlvbiB3aXRoIG5vdGUgcmVmZXJlbmNlc1xuXG4gICAgICAgIHZhciBsYWJlbCA9IHJlZmVyZW5jZWRDb21tZW50LmxhYmVsO1xuICAgICAgICB2YXIgY29tbWVudCA9IHJlZmVyZW5jZWRDb21tZW50LmNvbW1lbnQ7XG4gICAgICAgIHZhciBib2R5ID0gY29udmVydEVsZW1lbnRzKGNvbW1lbnQuYm9keSwgbWVzc2FnZXMsIG9wdGlvbnMpLmNvbmNhdChbXG4gICAgICAgICAgICBIdG1sLm5vbkZyZXNoRWxlbWVudChcInBcIiwge30sIFtcbiAgICAgICAgICAgICAgICBIdG1sLnRleHQoXCIgXCIpLFxuICAgICAgICAgICAgICAgIEh0bWwuZnJlc2hFbGVtZW50KFwiYVwiLCB7XCJocmVmXCI6IFwiI1wiICsgcmVmZXJlbmNlSHRtbElkKFwiY29tbWVudFwiLCBjb21tZW50LmNvbW1lbnRJZCl9LCBbXG4gICAgICAgICAgICAgICAgICAgIEh0bWwudGV4dChcIuKGkVwiKVxuICAgICAgICAgICAgICAgIF0pXG4gICAgICAgICAgICBdKVxuICAgICAgICBdKTtcblxuICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgSHRtbC5mcmVzaEVsZW1lbnQoXG4gICAgICAgICAgICAgICAgXCJkdFwiLFxuICAgICAgICAgICAgICAgIHtcImlkXCI6IHJlZmVyZW50SHRtbElkKFwiY29tbWVudFwiLCBjb21tZW50LmNvbW1lbnRJZCl9LFxuICAgICAgICAgICAgICAgIFtIdG1sLnRleHQoXCJDb21tZW50IFwiICsgbGFiZWwpXVxuICAgICAgICAgICAgKSxcbiAgICAgICAgICAgIEh0bWwuZnJlc2hFbGVtZW50KFwiZGRcIiwge30sIGJvZHkpXG4gICAgICAgIF07XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY29udmVydEJyZWFrKGVsZW1lbnQsIG1lc3NhZ2VzLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBodG1sUGF0aEZvckJyZWFrKGVsZW1lbnQpLndyYXAoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZXR1cm4gW107XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGh0bWxQYXRoRm9yQnJlYWsoZWxlbWVudCkge1xuICAgICAgICB2YXIgc3R5bGUgPSBmaW5kU3R5bGUoZWxlbWVudCk7XG4gICAgICAgIGlmIChzdHlsZSkge1xuICAgICAgICAgICAgcmV0dXJuIHN0eWxlLnRvO1xuICAgICAgICB9IGVsc2UgaWYgKGVsZW1lbnQuYnJlYWtUeXBlID09PSBcImxpbmVcIikge1xuICAgICAgICAgICAgcmV0dXJuIGh0bWxQYXRocy50b3BMZXZlbEVsZW1lbnQoXCJiclwiKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBodG1sUGF0aHMuZW1wdHk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIgZWxlbWVudENvbnZlcnRlcnMgPSB7XG4gICAgICAgIFwiZG9jdW1lbnRcIjogZnVuY3Rpb24oZG9jdW1lbnQsIG1lc3NhZ2VzLCBvcHRpb25zKSB7XG4gICAgICAgICAgICB2YXIgY2hpbGRyZW4gPSBjb252ZXJ0RWxlbWVudHMoZG9jdW1lbnQuY2hpbGRyZW4sIG1lc3NhZ2VzLCBvcHRpb25zKTtcbiAgICAgICAgICAgIHZhciBub3RlcyA9IG5vdGVSZWZlcmVuY2VzLm1hcChmdW5jdGlvbihub3RlUmVmZXJlbmNlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRvY3VtZW50Lm5vdGVzLnJlc29sdmUobm90ZVJlZmVyZW5jZSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHZhciBub3Rlc05vZGVzID0gY29udmVydEVsZW1lbnRzKG5vdGVzLCBtZXNzYWdlcywgb3B0aW9ucyk7XG4gICAgICAgICAgICByZXR1cm4gY2hpbGRyZW4uY29uY2F0KFtcbiAgICAgICAgICAgICAgICBIdG1sLmZyZXNoRWxlbWVudChcIm9sXCIsIHt9LCBub3Rlc05vZGVzKSxcbiAgICAgICAgICAgICAgICBIdG1sLmZyZXNoRWxlbWVudChcImRsXCIsIHt9LCBmbGF0TWFwKHJlZmVyZW5jZWRDb21tZW50cywgZnVuY3Rpb24ocmVmZXJlbmNlZENvbW1lbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNvbnZlcnRDb21tZW50KHJlZmVyZW5jZWRDb21tZW50LCBtZXNzYWdlcywgb3B0aW9ucyk7XG4gICAgICAgICAgICAgICAgfSkpXG4gICAgICAgICAgICBdKTtcbiAgICAgICAgfSxcbiAgICAgICAgXCJwYXJhZ3JhcGhcIjogY29udmVydFBhcmFncmFwaCxcbiAgICAgICAgXCJydW5cIjogY29udmVydFJ1bixcbiAgICAgICAgXCJ0ZXh0XCI6IGZ1bmN0aW9uKGVsZW1lbnQsIG1lc3NhZ2VzLCBvcHRpb25zKSB7XG4gICAgICAgICAgICByZXR1cm4gW0h0bWwudGV4dChlbGVtZW50LnZhbHVlKV07XG4gICAgICAgIH0sXG4gICAgICAgIFwidGFiXCI6IGZ1bmN0aW9uKGVsZW1lbnQsIG1lc3NhZ2VzLCBvcHRpb25zKSB7XG4gICAgICAgICAgICByZXR1cm4gW0h0bWwudGV4dChcIlxcdFwiKV07XG4gICAgICAgIH0sXG4gICAgICAgIFwiaHlwZXJsaW5rXCI6IGZ1bmN0aW9uKGVsZW1lbnQsIG1lc3NhZ2VzLCBvcHRpb25zKSB7XG4gICAgICAgICAgICB2YXIgaHJlZiA9IGVsZW1lbnQuYW5jaG9yID8gXCIjXCIgKyBodG1sSWQoZWxlbWVudC5hbmNob3IpIDogZWxlbWVudC5ocmVmO1xuICAgICAgICAgICAgdmFyIGF0dHJpYnV0ZXMgPSB7aHJlZjogaHJlZn07XG4gICAgICAgICAgICBpZiAoZWxlbWVudC50YXJnZXRGcmFtZSAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgYXR0cmlidXRlcy50YXJnZXQgPSBlbGVtZW50LnRhcmdldEZyYW1lO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB2YXIgY2hpbGRyZW4gPSBjb252ZXJ0RWxlbWVudHMoZWxlbWVudC5jaGlsZHJlbiwgbWVzc2FnZXMsIG9wdGlvbnMpO1xuICAgICAgICAgICAgcmV0dXJuIFtIdG1sLm5vbkZyZXNoRWxlbWVudChcImFcIiwgYXR0cmlidXRlcywgY2hpbGRyZW4pXTtcbiAgICAgICAgfSxcbiAgICAgICAgXCJjaGVja2JveFwiOiBmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgICAgICAgICB2YXIgYXR0cmlidXRlcyA9IHt0eXBlOiBcImNoZWNrYm94XCJ9O1xuICAgICAgICAgICAgaWYgKGVsZW1lbnQuY2hlY2tlZCkge1xuICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXNbXCJjaGVja2VkXCJdID0gXCJjaGVja2VkXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gW0h0bWwuZnJlc2hFbGVtZW50KFwiaW5wdXRcIiwgYXR0cmlidXRlcyldO1xuICAgICAgICB9LFxuICAgICAgICBcImJvb2ttYXJrU3RhcnRcIjogZnVuY3Rpb24oZWxlbWVudCwgbWVzc2FnZXMsIG9wdGlvbnMpIHtcbiAgICAgICAgICAgIHZhciBhbmNob3IgPSBIdG1sLmZyZXNoRWxlbWVudChcImFcIiwge1xuICAgICAgICAgICAgICAgIGlkOiBodG1sSWQoZWxlbWVudC5uYW1lKVxuICAgICAgICAgICAgfSwgW0h0bWwuZm9yY2VXcml0ZV0pO1xuICAgICAgICAgICAgcmV0dXJuIFthbmNob3JdO1xuICAgICAgICB9LFxuICAgICAgICBcIm5vdGVSZWZlcmVuY2VcIjogZnVuY3Rpb24oZWxlbWVudCwgbWVzc2FnZXMsIG9wdGlvbnMpIHtcbiAgICAgICAgICAgIG5vdGVSZWZlcmVuY2VzLnB1c2goZWxlbWVudCk7XG4gICAgICAgICAgICB2YXIgYW5jaG9yID0gSHRtbC5mcmVzaEVsZW1lbnQoXCJhXCIsIHtcbiAgICAgICAgICAgICAgICBocmVmOiBcIiNcIiArIG5vdGVIdG1sSWQoZWxlbWVudCksXG4gICAgICAgICAgICAgICAgaWQ6IG5vdGVSZWZIdG1sSWQoZWxlbWVudClcbiAgICAgICAgICAgIH0sIFtIdG1sLnRleHQoXCJbXCIgKyAobm90ZU51bWJlcisrKSArIFwiXVwiKV0pO1xuXG4gICAgICAgICAgICByZXR1cm4gW0h0bWwuZnJlc2hFbGVtZW50KFwic3VwXCIsIHt9LCBbYW5jaG9yXSldO1xuICAgICAgICB9LFxuICAgICAgICBcIm5vdGVcIjogZnVuY3Rpb24oZWxlbWVudCwgbWVzc2FnZXMsIG9wdGlvbnMpIHtcbiAgICAgICAgICAgIHZhciBjaGlsZHJlbiA9IGNvbnZlcnRFbGVtZW50cyhlbGVtZW50LmJvZHksIG1lc3NhZ2VzLCBvcHRpb25zKTtcbiAgICAgICAgICAgIHZhciBiYWNrTGluayA9IEh0bWwuZWxlbWVudFdpdGhUYWcoaHRtbFBhdGhzLmVsZW1lbnQoXCJwXCIsIHt9LCB7ZnJlc2g6IGZhbHNlfSksIFtcbiAgICAgICAgICAgICAgICBIdG1sLnRleHQoXCIgXCIpLFxuICAgICAgICAgICAgICAgIEh0bWwuZnJlc2hFbGVtZW50KFwiYVwiLCB7aHJlZjogXCIjXCIgKyBub3RlUmVmSHRtbElkKGVsZW1lbnQpfSwgW0h0bWwudGV4dChcIuKGkVwiKV0pXG4gICAgICAgICAgICBdKTtcbiAgICAgICAgICAgIHZhciBib2R5ID0gY2hpbGRyZW4uY29uY2F0KFtiYWNrTGlua10pO1xuXG4gICAgICAgICAgICByZXR1cm4gSHRtbC5mcmVzaEVsZW1lbnQoXCJsaVwiLCB7aWQ6IG5vdGVIdG1sSWQoZWxlbWVudCl9LCBib2R5KTtcbiAgICAgICAgfSxcbiAgICAgICAgXCJjb21tZW50UmVmZXJlbmNlXCI6IGNvbnZlcnRDb21tZW50UmVmZXJlbmNlLFxuICAgICAgICBcImNvbW1lbnRcIjogY29udmVydENvbW1lbnQsXG4gICAgICAgIFwiaW1hZ2VcIjogZGVmZXJyZWRDb252ZXJzaW9uKHJlY292ZXJpbmdDb252ZXJ0SW1hZ2Uob3B0aW9ucy5jb252ZXJ0SW1hZ2UgfHwgaW1hZ2VzLmRhdGFVcmkpKSxcbiAgICAgICAgXCJ0YWJsZVwiOiBjb252ZXJ0VGFibGUsXG4gICAgICAgIFwidGFibGVSb3dcIjogY29udmVydFRhYmxlUm93LFxuICAgICAgICBcInRhYmxlQ2VsbFwiOiBjb252ZXJ0VGFibGVDZWxsLFxuICAgICAgICBcImJyZWFrXCI6IGNvbnZlcnRCcmVha1xuICAgIH07XG4gICAgcmV0dXJuIHtcbiAgICAgICAgY29udmVydFRvSHRtbDogY29udmVydFRvSHRtbFxuICAgIH07XG59XG5cbnZhciBkZWZlcnJlZElkID0gMTtcblxuZnVuY3Rpb24gZGVmZXJyZWRDb252ZXJzaW9uKGZ1bmMpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24oZWxlbWVudCwgbWVzc2FnZXMsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0eXBlOiBcImRlZmVycmVkXCIsXG4gICAgICAgICAgICAgICAgaWQ6IGRlZmVycmVkSWQrKyxcbiAgICAgICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmdW5jKGVsZW1lbnQsIG1lc3NhZ2VzLCBvcHRpb25zKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIF07XG4gICAgfTtcbn1cblxuZnVuY3Rpb24gdW5yZWNvZ25pc2VkU3R5bGVXYXJuaW5nKHR5cGUsIGVsZW1lbnQpIHtcbiAgICByZXR1cm4gcmVzdWx0cy53YXJuaW5nKFxuICAgICAgICBcIlVucmVjb2duaXNlZCBcIiArIHR5cGUgKyBcIiBzdHlsZTogJ1wiICsgZWxlbWVudC5zdHlsZU5hbWUgKyBcIidcIiArXG4gICAgICAgIFwiIChTdHlsZSBJRDogXCIgKyBlbGVtZW50LnN0eWxlSWQgKyBcIilcIlxuICAgICk7XG59XG5cbmZ1bmN0aW9uIGZsYXRNYXAodmFsdWVzLCBmdW5jKSB7XG4gICAgcmV0dXJuIF8uZmxhdHRlbih2YWx1ZXMubWFwKGZ1bmMpLCB0cnVlKTtcbn1cblxuZnVuY3Rpb24gd2Fsa0h0bWwobm9kZXMsIGNhbGxiYWNrKSB7XG4gICAgbm9kZXMuZm9yRWFjaChmdW5jdGlvbihub2RlKSB7XG4gICAgICAgIGNhbGxiYWNrKG5vZGUpO1xuICAgICAgICBpZiAobm9kZS5jaGlsZHJlbikge1xuICAgICAgICAgICAgd2Fsa0h0bWwobm9kZS5jaGlsZHJlbiwgY2FsbGJhY2spO1xuICAgICAgICB9XG4gICAgfSk7XG59XG5cbnZhciBjb21tZW50QXV0aG9yTGFiZWwgPSBleHBvcnRzLmNvbW1lbnRBdXRob3JMYWJlbCA9IGZ1bmN0aW9uIGNvbW1lbnRBdXRob3JMYWJlbChjb21tZW50KSB7XG4gICAgcmV0dXJuIGNvbW1lbnQuYXV0aG9ySW5pdGlhbHMgfHwgXCJcIjtcbn07XG4iXSwibmFtZXMiOlsiXyIsInJlcXVpcmUiLCJwcm9taXNlcyIsImRvY3VtZW50cyIsImh0bWxQYXRocyIsInJlc3VsdHMiLCJpbWFnZXMiLCJIdG1sIiwid3JpdGVycyIsImV4cG9ydHMiLCJEb2N1bWVudENvbnZlcnRlciIsIm9wdGlvbnMiLCJjb252ZXJ0VG9IdG1sIiwiZWxlbWVudCIsImNvbW1lbnRzIiwiaW5kZXhCeSIsInR5cGUiLCJ0eXBlcyIsImRvY3VtZW50IiwiY29udmVyc2lvbiIsIkRvY3VtZW50Q29udmVyc2lvbiIsIm5vdGVOdW1iZXIiLCJub3RlUmVmZXJlbmNlcyIsInJlZmVyZW5jZWRDb21tZW50cyIsImV4dGVuZCIsImlnbm9yZUVtcHR5UGFyYWdyYXBocyIsImlkUHJlZml4IiwidW5kZWZpbmVkIiwiZGVmYXVsdFBhcmFncmFwaFN0eWxlIiwidG9wTGV2ZWxFbGVtZW50Iiwic3R5bGVNYXAiLCJtZXNzYWdlcyIsImh0bWwiLCJlbGVtZW50VG9IdG1sIiwiZGVmZXJyZWROb2RlcyIsIndhbGtIdG1sIiwibm9kZSIsInB1c2giLCJkZWZlcnJlZFZhbHVlcyIsIm1hcFNlcmllcyIsImRlZmVycmVkIiwidmFsdWUiLCJ0aGVuIiwiaWQiLCJyZXBsYWNlRGVmZXJyZWQiLCJub2RlcyIsImZsYXRNYXAiLCJjaGlsZHJlbiIsIndyaXRlciIsInByZXR0eVByaW50Iiwib3V0cHV0Rm9ybWF0Iiwid3JpdGUiLCJzaW1wbGlmeSIsIlJlc3VsdCIsImFzU3RyaW5nIiwiY29udmVydEVsZW1lbnRzIiwiZWxlbWVudHMiLCJFcnJvciIsImhhbmRsZXIiLCJlbGVtZW50Q29udmVydGVycyIsImNvbnZlcnRQYXJhZ3JhcGgiLCJodG1sUGF0aEZvclBhcmFncmFwaCIsIndyYXAiLCJjb250ZW50IiwiZm9yY2VXcml0ZSIsImNvbmNhdCIsInN0eWxlIiwiZmluZFN0eWxlIiwidG8iLCJzdHlsZUlkIiwidW5yZWNvZ25pc2VkU3R5bGVXYXJuaW5nIiwiY29udmVydFJ1biIsInJ1biIsInBhdGhzIiwiaGlnaGxpZ2h0IiwicGF0aCIsImZpbmRIdG1sUGF0aCIsImNvbG9yIiwiaXNTbWFsbENhcHMiLCJmaW5kSHRtbFBhdGhGb3JSdW5Qcm9wZXJ0eSIsImlzQWxsQ2FwcyIsImlzU3RyaWtldGhyb3VnaCIsImlzVW5kZXJsaW5lIiwidmVydGljYWxBbGlnbm1lbnQiLCJzdWJzY3JpcHQiLCJmcmVzaCIsInN1cGVyc2NyaXB0IiwiaXNJdGFsaWMiLCJpc0JvbGQiLCJzdHlsZVBhdGgiLCJlbXB0eSIsImZvckVhY2giLCJiaW5kIiwiZWxlbWVudFR5cGUiLCJkZWZhdWx0VGFnTmFtZSIsImRlZmF1bHRQYXRoIiwiaSIsImxlbmd0aCIsImZyb20iLCJtYXRjaGVzIiwicmVjb3ZlcmluZ0NvbnZlcnRJbWFnZSIsImNvbnZlcnRJbWFnZSIsImltYWdlIiwiYXR0ZW1wdCIsImNhdWdodCIsImVycm9yIiwibm90ZUh0bWxJZCIsIm5vdGUiLCJyZWZlcmVudEh0bWxJZCIsIm5vdGVUeXBlIiwibm90ZUlkIiwibm90ZVJlZkh0bWxJZCIsInJlZmVyZW5jZUh0bWxJZCIsInJlZmVyZW5jZVR5cGUiLCJyZWZlcmVuY2VJZCIsImh0bWxJZCIsInN1ZmZpeCIsImRlZmF1bHRUYWJsZVBhdGgiLCJjb252ZXJ0VGFibGUiLCJjb252ZXJ0VGFibGVDaGlsZHJlbiIsImJvZHlJbmRleCIsImZpbmRJbmRleCIsImNoaWxkIiwidGFibGVSb3ciLCJpc0hlYWRlciIsImlzVGFibGVIZWFkZXIiLCJoZWFkUm93cyIsInNsaWNlIiwiYm9keVJvd3MiLCJmcmVzaEVsZW1lbnQiLCJjb252ZXJ0VGFibGVSb3ciLCJjb252ZXJ0VGFibGVDZWxsIiwidGFnTmFtZSIsImF0dHJpYnV0ZXMiLCJjb2xTcGFuIiwiY29sc3BhbiIsInRvU3RyaW5nIiwicm93U3BhbiIsInJvd3NwYW4iLCJjb252ZXJ0Q29tbWVudFJlZmVyZW5jZSIsInJlZmVyZW5jZSIsImlnbm9yZSIsImNvbW1lbnQiLCJjb21tZW50SWQiLCJjb3VudCIsImxhYmVsIiwiY29tbWVudEF1dGhvckxhYmVsIiwiaHJlZiIsInRleHQiLCJjb252ZXJ0Q29tbWVudCIsInJlZmVyZW5jZWRDb21tZW50IiwiYm9keSIsIm5vbkZyZXNoRWxlbWVudCIsImNvbnZlcnRCcmVhayIsImh0bWxQYXRoRm9yQnJlYWsiLCJicmVha1R5cGUiLCJub3RlcyIsIm1hcCIsIm5vdGVSZWZlcmVuY2UiLCJyZXNvbHZlIiwibm90ZXNOb2RlcyIsImFuY2hvciIsInRhcmdldEZyYW1lIiwidGFyZ2V0IiwiY2hlY2tlZCIsIm5hbWUiLCJiYWNrTGluayIsImVsZW1lbnRXaXRoVGFnIiwiZGVmZXJyZWRDb252ZXJzaW9uIiwiZGF0YVVyaSIsImRlZmVycmVkSWQiLCJmdW5jIiwid2FybmluZyIsInN0eWxlTmFtZSIsInZhbHVlcyIsImZsYXR0ZW4iLCJjYWxsYmFjayIsImF1dGhvckluaXRpYWxzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mammoth/lib/document-to-html.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mammoth/lib/documents.js":
/*!***********************************************!*\
  !*** ./node_modules/mammoth/lib/documents.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var _ = __webpack_require__(/*! underscore */ \"(rsc)/./node_modules/underscore/modules/index-all.js\");\nvar types = exports.types = {\n    document: \"document\",\n    paragraph: \"paragraph\",\n    run: \"run\",\n    text: \"text\",\n    tab: \"tab\",\n    checkbox: \"checkbox\",\n    hyperlink: \"hyperlink\",\n    noteReference: \"noteReference\",\n    image: \"image\",\n    note: \"note\",\n    commentReference: \"commentReference\",\n    comment: \"comment\",\n    table: \"table\",\n    tableRow: \"tableRow\",\n    tableCell: \"tableCell\",\n    \"break\": \"break\",\n    bookmarkStart: \"bookmarkStart\"\n};\nfunction Document(children, options) {\n    options = options || {};\n    return {\n        type: types.document,\n        children: children,\n        notes: options.notes || new Notes({}),\n        comments: options.comments || []\n    };\n}\nfunction Paragraph(children, properties) {\n    properties = properties || {};\n    var indent = properties.indent || {};\n    return {\n        type: types.paragraph,\n        children: children,\n        styleId: properties.styleId || null,\n        styleName: properties.styleName || null,\n        numbering: properties.numbering || null,\n        alignment: properties.alignment || null,\n        indent: {\n            start: indent.start || null,\n            end: indent.end || null,\n            firstLine: indent.firstLine || null,\n            hanging: indent.hanging || null\n        }\n    };\n}\nfunction Run(children, properties) {\n    properties = properties || {};\n    return {\n        type: types.run,\n        children: children,\n        styleId: properties.styleId || null,\n        styleName: properties.styleName || null,\n        isBold: !!properties.isBold,\n        isUnderline: !!properties.isUnderline,\n        isItalic: !!properties.isItalic,\n        isStrikethrough: !!properties.isStrikethrough,\n        isAllCaps: !!properties.isAllCaps,\n        isSmallCaps: !!properties.isSmallCaps,\n        verticalAlignment: properties.verticalAlignment || verticalAlignment.baseline,\n        font: properties.font || null,\n        fontSize: properties.fontSize || null,\n        highlight: properties.highlight || null\n    };\n}\nvar verticalAlignment = {\n    baseline: \"baseline\",\n    superscript: \"superscript\",\n    subscript: \"subscript\"\n};\nfunction Text(value) {\n    return {\n        type: types.text,\n        value: value\n    };\n}\nfunction Tab() {\n    return {\n        type: types.tab\n    };\n}\nfunction Checkbox(options) {\n    return {\n        type: types.checkbox,\n        checked: options.checked\n    };\n}\nfunction Hyperlink(children, options) {\n    return {\n        type: types.hyperlink,\n        children: children,\n        href: options.href,\n        anchor: options.anchor,\n        targetFrame: options.targetFrame\n    };\n}\nfunction NoteReference(options) {\n    return {\n        type: types.noteReference,\n        noteType: options.noteType,\n        noteId: options.noteId\n    };\n}\nfunction Notes(notes) {\n    this._notes = _.indexBy(notes, function(note) {\n        return noteKey(note.noteType, note.noteId);\n    });\n}\nNotes.prototype.resolve = function(reference) {\n    return this.findNoteByKey(noteKey(reference.noteType, reference.noteId));\n};\nNotes.prototype.findNoteByKey = function(key) {\n    return this._notes[key] || null;\n};\nfunction Note(options) {\n    return {\n        type: types.note,\n        noteType: options.noteType,\n        noteId: options.noteId,\n        body: options.body\n    };\n}\nfunction commentReference(options) {\n    return {\n        type: types.commentReference,\n        commentId: options.commentId\n    };\n}\nfunction comment(options) {\n    return {\n        type: types.comment,\n        commentId: options.commentId,\n        body: options.body,\n        authorName: options.authorName,\n        authorInitials: options.authorInitials\n    };\n}\nfunction noteKey(noteType, id) {\n    return noteType + \"-\" + id;\n}\nfunction Image(options) {\n    return {\n        type: types.image,\n        // `read` is retained for backwards compatibility, but other read\n        // methods should be preferred.\n        read: function(encoding) {\n            if (encoding) {\n                return options.readImage(encoding);\n            } else {\n                return options.readImage().then(function(arrayBuffer) {\n                    return Buffer.from(arrayBuffer);\n                });\n            }\n        },\n        readAsArrayBuffer: function() {\n            return options.readImage();\n        },\n        readAsBase64String: function() {\n            return options.readImage(\"base64\");\n        },\n        readAsBuffer: function() {\n            return options.readImage().then(function(arrayBuffer) {\n                return Buffer.from(arrayBuffer);\n            });\n        },\n        altText: options.altText,\n        contentType: options.contentType\n    };\n}\nfunction Table(children, properties) {\n    properties = properties || {};\n    return {\n        type: types.table,\n        children: children,\n        styleId: properties.styleId || null,\n        styleName: properties.styleName || null\n    };\n}\nfunction TableRow(children, options) {\n    options = options || {};\n    return {\n        type: types.tableRow,\n        children: children,\n        isHeader: options.isHeader || false\n    };\n}\nfunction TableCell(children, options) {\n    options = options || {};\n    return {\n        type: types.tableCell,\n        children: children,\n        colSpan: options.colSpan == null ? 1 : options.colSpan,\n        rowSpan: options.rowSpan == null ? 1 : options.rowSpan\n    };\n}\nfunction Break(breakType) {\n    return {\n        type: types[\"break\"],\n        breakType: breakType\n    };\n}\nfunction BookmarkStart(options) {\n    return {\n        type: types.bookmarkStart,\n        name: options.name\n    };\n}\nexports.document = exports.Document = Document;\nexports.paragraph = exports.Paragraph = Paragraph;\nexports.run = exports.Run = Run;\nexports.text = exports.Text = Text;\nexports.tab = exports.Tab = Tab;\nexports.checkbox = exports.Checkbox = Checkbox;\nexports.Hyperlink = Hyperlink;\nexports.noteReference = exports.NoteReference = NoteReference;\nexports.Notes = Notes;\nexports.Note = Note;\nexports.commentReference = commentReference;\nexports.comment = comment;\nexports.Image = Image;\nexports.Table = Table;\nexports.TableRow = TableRow;\nexports.TableCell = TableCell;\nexports.lineBreak = Break(\"line\");\nexports.pageBreak = Break(\"page\");\nexports.columnBreak = Break(\"column\");\nexports.BookmarkStart = BookmarkStart;\nexports.verticalAlignment = verticalAlignment;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mammoth/lib/documents.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mammoth/lib/docx/body-reader.js":
/*!******************************************************!*\
  !*** ./node_modules/mammoth/lib/docx/body-reader.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("exports.createBodyReader = createBodyReader;\nexports._readNumberingProperties = readNumberingProperties;\nvar dingbatToUnicode = __webpack_require__(/*! dingbat-to-unicode */ \"(rsc)/./node_modules/dingbat-to-unicode/dist/index.js\");\nvar _ = __webpack_require__(/*! underscore */ \"(rsc)/./node_modules/underscore/modules/index-all.js\");\nvar documents = __webpack_require__(/*! ../documents */ \"(rsc)/./node_modules/mammoth/lib/documents.js\");\nvar Result = (__webpack_require__(/*! ../results */ \"(rsc)/./node_modules/mammoth/lib/results.js\").Result);\nvar warning = (__webpack_require__(/*! ../results */ \"(rsc)/./node_modules/mammoth/lib/results.js\").warning);\nvar xml = __webpack_require__(/*! ../xml */ \"(rsc)/./node_modules/mammoth/lib/xml/index.js\");\nvar uris = __webpack_require__(/*! ./uris */ \"(rsc)/./node_modules/mammoth/lib/docx/uris.js\");\nfunction createBodyReader(options) {\n    return {\n        readXmlElement: function(element) {\n            return new BodyReader(options).readXmlElement(element);\n        },\n        readXmlElements: function(elements) {\n            return new BodyReader(options).readXmlElements(elements);\n        }\n    };\n}\nfunction BodyReader(options) {\n    var complexFieldStack = [];\n    var currentInstrText = [];\n    // When a paragraph is marked as deleted, its contents should be combined\n    // with the following paragraph. See 17.13.5.15 del (Deleted Paragraph) of\n    // ECMA-376 4th edition Part 1.\n    var deletedParagraphContents = [];\n    var relationships = options.relationships;\n    var contentTypes = options.contentTypes;\n    var docxFile = options.docxFile;\n    var files = options.files;\n    var numbering = options.numbering;\n    var styles = options.styles;\n    function readXmlElements(elements) {\n        var results = elements.map(readXmlElement);\n        return combineResults(results);\n    }\n    function readXmlElement(element) {\n        if (element.type === \"element\") {\n            var handler = xmlElementReaders[element.name];\n            if (handler) {\n                return handler(element);\n            } else if (!Object.prototype.hasOwnProperty.call(ignoreElements, element.name)) {\n                var message = warning(\"An unrecognised element was ignored: \" + element.name);\n                return emptyResultWithMessages([\n                    message\n                ]);\n            }\n        }\n        return emptyResult();\n    }\n    function readParagraphProperties(element) {\n        return readParagraphStyle(element).map(function(style) {\n            return {\n                type: \"paragraphProperties\",\n                styleId: style.styleId,\n                styleName: style.name,\n                alignment: element.firstOrEmpty(\"w:jc\").attributes[\"w:val\"],\n                numbering: readNumberingProperties(style.styleId, element.firstOrEmpty(\"w:numPr\"), numbering),\n                indent: readParagraphIndent(element.firstOrEmpty(\"w:ind\"))\n            };\n        });\n    }\n    function readParagraphIndent(element) {\n        return {\n            start: element.attributes[\"w:start\"] || element.attributes[\"w:left\"],\n            end: element.attributes[\"w:end\"] || element.attributes[\"w:right\"],\n            firstLine: element.attributes[\"w:firstLine\"],\n            hanging: element.attributes[\"w:hanging\"]\n        };\n    }\n    function readRunProperties(element) {\n        return readRunStyle(element).map(function(style) {\n            var fontSizeString = element.firstOrEmpty(\"w:sz\").attributes[\"w:val\"];\n            // w:sz gives the font size in half points, so halve the value to get the size in points\n            var fontSize = /^[0-9]+$/.test(fontSizeString) ? parseInt(fontSizeString, 10) / 2 : null;\n            return {\n                type: \"runProperties\",\n                styleId: style.styleId,\n                styleName: style.name,\n                verticalAlignment: element.firstOrEmpty(\"w:vertAlign\").attributes[\"w:val\"],\n                font: element.firstOrEmpty(\"w:rFonts\").attributes[\"w:ascii\"],\n                fontSize: fontSize,\n                isBold: readBooleanElement(element.first(\"w:b\")),\n                isUnderline: readUnderline(element.first(\"w:u\")),\n                isItalic: readBooleanElement(element.first(\"w:i\")),\n                isStrikethrough: readBooleanElement(element.first(\"w:strike\")),\n                isAllCaps: readBooleanElement(element.first(\"w:caps\")),\n                isSmallCaps: readBooleanElement(element.first(\"w:smallCaps\")),\n                highlight: readHighlightValue(element.firstOrEmpty(\"w:highlight\").attributes[\"w:val\"])\n            };\n        });\n    }\n    function readUnderline(element) {\n        if (element) {\n            var value = element.attributes[\"w:val\"];\n            return value !== undefined && value !== \"false\" && value !== \"0\" && value !== \"none\";\n        } else {\n            return false;\n        }\n    }\n    function readBooleanElement(element) {\n        if (element) {\n            var value = element.attributes[\"w:val\"];\n            return value !== \"false\" && value !== \"0\";\n        } else {\n            return false;\n        }\n    }\n    function readBooleanAttributeValue(value) {\n        return value !== \"false\" && value !== \"0\";\n    }\n    function readHighlightValue(value) {\n        if (!value || value === \"none\") {\n            return null;\n        } else {\n            return value;\n        }\n    }\n    function readParagraphStyle(element) {\n        return readStyle(element, \"w:pStyle\", \"Paragraph\", styles.findParagraphStyleById);\n    }\n    function readRunStyle(element) {\n        return readStyle(element, \"w:rStyle\", \"Run\", styles.findCharacterStyleById);\n    }\n    function readTableStyle(element) {\n        return readStyle(element, \"w:tblStyle\", \"Table\", styles.findTableStyleById);\n    }\n    function readStyle(element, styleTagName, styleType, findStyleById) {\n        var messages = [];\n        var styleElement = element.first(styleTagName);\n        var styleId = null;\n        var name = null;\n        if (styleElement) {\n            styleId = styleElement.attributes[\"w:val\"];\n            if (styleId) {\n                var style = findStyleById(styleId);\n                if (style) {\n                    name = style.name;\n                } else {\n                    messages.push(undefinedStyleWarning(styleType, styleId));\n                }\n            }\n        }\n        return elementResultWithMessages({\n            styleId: styleId,\n            name: name\n        }, messages);\n    }\n    function readFldChar(element) {\n        var type = element.attributes[\"w:fldCharType\"];\n        if (type === \"begin\") {\n            complexFieldStack.push({\n                type: \"begin\",\n                fldChar: element\n            });\n            currentInstrText = [];\n        } else if (type === \"end\") {\n            var complexFieldEnd = complexFieldStack.pop();\n            if (complexFieldEnd.type === \"begin\") {\n                complexFieldEnd = parseCurrentInstrText(complexFieldEnd);\n            }\n            if (complexFieldEnd.type === \"checkbox\") {\n                return elementResult(documents.checkbox({\n                    checked: complexFieldEnd.checked\n                }));\n            }\n        } else if (type === \"separate\") {\n            var complexFieldSeparate = complexFieldStack.pop();\n            var complexField = parseCurrentInstrText(complexFieldSeparate);\n            complexFieldStack.push(complexField);\n        }\n        return emptyResult();\n    }\n    function currentHyperlinkOptions() {\n        var topHyperlink = _.last(complexFieldStack.filter(function(complexField) {\n            return complexField.type === \"hyperlink\";\n        }));\n        return topHyperlink ? topHyperlink.options : null;\n    }\n    function parseCurrentInstrText(complexField) {\n        return parseInstrText(currentInstrText.join(\"\"), complexField.type === \"begin\" ? complexField.fldChar : xml.emptyElement);\n    }\n    function parseInstrText(instrText, fldChar) {\n        var externalLinkResult = /\\s*HYPERLINK \"(.*)\"/.exec(instrText);\n        if (externalLinkResult) {\n            return {\n                type: \"hyperlink\",\n                options: {\n                    href: externalLinkResult[1]\n                }\n            };\n        }\n        var internalLinkResult = /\\s*HYPERLINK\\s+\\\\l\\s+\"(.*)\"/.exec(instrText);\n        if (internalLinkResult) {\n            return {\n                type: \"hyperlink\",\n                options: {\n                    anchor: internalLinkResult[1]\n                }\n            };\n        }\n        var checkboxResult = /\\s*FORMCHECKBOX\\s*/.exec(instrText);\n        if (checkboxResult) {\n            var checkboxElement = fldChar.firstOrEmpty(\"w:ffData\").firstOrEmpty(\"w:checkBox\");\n            var checkedElement = checkboxElement.first(\"w:checked\");\n            var checked = checkedElement == null ? readBooleanElement(checkboxElement.first(\"w:default\")) : readBooleanElement(checkedElement);\n            return {\n                type: \"checkbox\",\n                checked: checked\n            };\n        }\n        return {\n            type: \"unknown\"\n        };\n    }\n    function readInstrText(element) {\n        currentInstrText.push(element.text());\n        return emptyResult();\n    }\n    function readSymbol(element) {\n        // See 17.3.3.30 sym (Symbol Character) of ECMA-376 4th edition Part 1\n        var font = element.attributes[\"w:font\"];\n        var char = element.attributes[\"w:char\"];\n        var unicodeCharacter = dingbatToUnicode.hex(font, char);\n        if (unicodeCharacter == null && /^F0..$/.test(char)) {\n            unicodeCharacter = dingbatToUnicode.hex(font, char.substring(2));\n        }\n        if (unicodeCharacter == null) {\n            return emptyResultWithMessages([\n                warning(\"A w:sym element with an unsupported character was ignored: char \" + char + \" in font \" + font)\n            ]);\n        } else {\n            return elementResult(new documents.Text(unicodeCharacter.string));\n        }\n    }\n    function noteReferenceReader(noteType) {\n        return function(element) {\n            var noteId = element.attributes[\"w:id\"];\n            return elementResult(new documents.NoteReference({\n                noteType: noteType,\n                noteId: noteId\n            }));\n        };\n    }\n    function readCommentReference(element) {\n        return elementResult(documents.commentReference({\n            commentId: element.attributes[\"w:id\"]\n        }));\n    }\n    function readChildElements(element) {\n        return readXmlElements(element.children);\n    }\n    var xmlElementReaders = {\n        \"w:p\": function(element) {\n            var paragraphPropertiesElement = element.firstOrEmpty(\"w:pPr\");\n            var isDeleted = !!paragraphPropertiesElement.firstOrEmpty(\"w:rPr\").first(\"w:del\");\n            if (isDeleted) {\n                element.children.forEach(function(child) {\n                    deletedParagraphContents.push(child);\n                });\n                return emptyResult();\n            } else {\n                var childrenXml = element.children;\n                if (deletedParagraphContents.length > 0) {\n                    childrenXml = deletedParagraphContents.concat(childrenXml);\n                    deletedParagraphContents = [];\n                }\n                return ReadResult.map(readParagraphProperties(paragraphPropertiesElement), readXmlElements(childrenXml), function(properties, children) {\n                    return new documents.Paragraph(children, properties);\n                }).insertExtra();\n            }\n        },\n        \"w:r\": function(element) {\n            return ReadResult.map(readRunProperties(element.firstOrEmpty(\"w:rPr\")), readXmlElements(element.children), function(properties, children) {\n                var hyperlinkOptions = currentHyperlinkOptions();\n                if (hyperlinkOptions !== null) {\n                    children = [\n                        new documents.Hyperlink(children, hyperlinkOptions)\n                    ];\n                }\n                return new documents.Run(children, properties);\n            });\n        },\n        \"w:fldChar\": readFldChar,\n        \"w:instrText\": readInstrText,\n        \"w:t\": function(element) {\n            return elementResult(new documents.Text(element.text()));\n        },\n        \"w:tab\": function(element) {\n            return elementResult(new documents.Tab());\n        },\n        \"w:noBreakHyphen\": function() {\n            return elementResult(new documents.Text(\"‑\"));\n        },\n        \"w:softHyphen\": function(element) {\n            return elementResult(new documents.Text(\"\\xad\"));\n        },\n        \"w:sym\": readSymbol,\n        \"w:hyperlink\": function(element) {\n            var relationshipId = element.attributes[\"r:id\"];\n            var anchor = element.attributes[\"w:anchor\"];\n            return readXmlElements(element.children).map(function(children) {\n                function create(options) {\n                    var targetFrame = element.attributes[\"w:tgtFrame\"] || null;\n                    return new documents.Hyperlink(children, _.extend({\n                        targetFrame: targetFrame\n                    }, options));\n                }\n                if (relationshipId) {\n                    var href = relationships.findTargetByRelationshipId(relationshipId);\n                    if (anchor) {\n                        href = uris.replaceFragment(href, anchor);\n                    }\n                    return create({\n                        href: href\n                    });\n                } else if (anchor) {\n                    return create({\n                        anchor: anchor\n                    });\n                } else {\n                    return children;\n                }\n            });\n        },\n        \"w:tbl\": readTable,\n        \"w:tr\": readTableRow,\n        \"w:tc\": readTableCell,\n        \"w:footnoteReference\": noteReferenceReader(\"footnote\"),\n        \"w:endnoteReference\": noteReferenceReader(\"endnote\"),\n        \"w:commentReference\": readCommentReference,\n        \"w:br\": function(element) {\n            var breakType = element.attributes[\"w:type\"];\n            if (breakType == null || breakType === \"textWrapping\") {\n                return elementResult(documents.lineBreak);\n            } else if (breakType === \"page\") {\n                return elementResult(documents.pageBreak);\n            } else if (breakType === \"column\") {\n                return elementResult(documents.columnBreak);\n            } else {\n                return emptyResultWithMessages([\n                    warning(\"Unsupported break type: \" + breakType)\n                ]);\n            }\n        },\n        \"w:bookmarkStart\": function(element) {\n            var name = element.attributes[\"w:name\"];\n            if (name === \"_GoBack\") {\n                return emptyResult();\n            } else {\n                return elementResult(new documents.BookmarkStart({\n                    name: name\n                }));\n            }\n        },\n        \"mc:AlternateContent\": function(element) {\n            return readChildElements(element.firstOrEmpty(\"mc:Fallback\"));\n        },\n        \"w:sdt\": function(element) {\n            var checkbox = element.firstOrEmpty(\"w:sdtPr\").first(\"wordml:checkbox\");\n            if (checkbox) {\n                var checkedElement = checkbox.first(\"wordml:checked\");\n                var isChecked = !!checkedElement && readBooleanAttributeValue(checkedElement.attributes[\"wordml:val\"]);\n                return elementResult(documents.checkbox({\n                    checked: isChecked\n                }));\n            } else {\n                return readXmlElements(element.firstOrEmpty(\"w:sdtContent\").children);\n            }\n        },\n        \"w:ins\": readChildElements,\n        \"w:object\": readChildElements,\n        \"w:smartTag\": readChildElements,\n        \"w:drawing\": readChildElements,\n        \"w:pict\": function(element) {\n            return readChildElements(element).toExtra();\n        },\n        \"v:roundrect\": readChildElements,\n        \"v:shape\": readChildElements,\n        \"v:textbox\": readChildElements,\n        \"w:txbxContent\": readChildElements,\n        \"wp:inline\": readDrawingElement,\n        \"wp:anchor\": readDrawingElement,\n        \"v:imagedata\": readImageData,\n        \"v:group\": readChildElements,\n        \"v:rect\": readChildElements\n    };\n    return {\n        readXmlElement: readXmlElement,\n        readXmlElements: readXmlElements\n    };\n    function readTable(element) {\n        var propertiesResult = readTableProperties(element.firstOrEmpty(\"w:tblPr\"));\n        return readXmlElements(element.children).flatMap(calculateRowSpans).flatMap(function(children) {\n            return propertiesResult.map(function(properties) {\n                return documents.Table(children, properties);\n            });\n        });\n    }\n    function readTableProperties(element) {\n        return readTableStyle(element).map(function(style) {\n            return {\n                styleId: style.styleId,\n                styleName: style.name\n            };\n        });\n    }\n    function readTableRow(element) {\n        var properties = element.firstOrEmpty(\"w:trPr\");\n        var isHeader = !!properties.first(\"w:tblHeader\");\n        return readXmlElements(element.children).map(function(children) {\n            return documents.TableRow(children, {\n                isHeader: isHeader\n            });\n        });\n    }\n    function readTableCell(element) {\n        return readXmlElements(element.children).map(function(children) {\n            var properties = element.firstOrEmpty(\"w:tcPr\");\n            var gridSpan = properties.firstOrEmpty(\"w:gridSpan\").attributes[\"w:val\"];\n            var colSpan = gridSpan ? parseInt(gridSpan, 10) : 1;\n            var cell = documents.TableCell(children, {\n                colSpan: colSpan\n            });\n            cell._vMerge = readVMerge(properties);\n            return cell;\n        });\n    }\n    function readVMerge(properties) {\n        var element = properties.first(\"w:vMerge\");\n        if (element) {\n            var val = element.attributes[\"w:val\"];\n            return val === \"continue\" || !val;\n        } else {\n            return null;\n        }\n    }\n    function calculateRowSpans(rows) {\n        var unexpectedNonRows = _.any(rows, function(row) {\n            return row.type !== documents.types.tableRow;\n        });\n        if (unexpectedNonRows) {\n            return elementResultWithMessages(rows, [\n                warning(\"unexpected non-row element in table, cell merging may be incorrect\")\n            ]);\n        }\n        var unexpectedNonCells = _.any(rows, function(row) {\n            return _.any(row.children, function(cell) {\n                return cell.type !== documents.types.tableCell;\n            });\n        });\n        if (unexpectedNonCells) {\n            return elementResultWithMessages(rows, [\n                warning(\"unexpected non-cell element in table row, cell merging may be incorrect\")\n            ]);\n        }\n        var columns = {};\n        rows.forEach(function(row) {\n            var cellIndex = 0;\n            row.children.forEach(function(cell) {\n                if (cell._vMerge && columns[cellIndex]) {\n                    columns[cellIndex].rowSpan++;\n                } else {\n                    columns[cellIndex] = cell;\n                    cell._vMerge = false;\n                }\n                cellIndex += cell.colSpan;\n            });\n        });\n        rows.forEach(function(row) {\n            row.children = row.children.filter(function(cell) {\n                return !cell._vMerge;\n            });\n            row.children.forEach(function(cell) {\n                delete cell._vMerge;\n            });\n        });\n        return elementResult(rows);\n    }\n    function readDrawingElement(element) {\n        var blips = element.getElementsByTagName(\"a:graphic\").getElementsByTagName(\"a:graphicData\").getElementsByTagName(\"pic:pic\").getElementsByTagName(\"pic:blipFill\").getElementsByTagName(\"a:blip\");\n        return combineResults(blips.map(readBlip.bind(null, element)));\n    }\n    function readBlip(element, blip) {\n        var properties = element.first(\"wp:docPr\").attributes;\n        var altText = isBlank(properties.descr) ? properties.title : properties.descr;\n        var blipImageFile = findBlipImageFile(blip);\n        if (blipImageFile === null) {\n            return emptyResultWithMessages([\n                warning(\"Could not find image file for a:blip element\")\n            ]);\n        } else {\n            return readImage(blipImageFile, altText);\n        }\n    }\n    function isBlank(value) {\n        return value == null || /^\\s*$/.test(value);\n    }\n    function findBlipImageFile(blip) {\n        var embedRelationshipId = blip.attributes[\"r:embed\"];\n        var linkRelationshipId = blip.attributes[\"r:link\"];\n        if (embedRelationshipId) {\n            return findEmbeddedImageFile(embedRelationshipId);\n        } else if (linkRelationshipId) {\n            var imagePath = relationships.findTargetByRelationshipId(linkRelationshipId);\n            return {\n                path: imagePath,\n                read: files.read.bind(files, imagePath)\n            };\n        } else {\n            return null;\n        }\n    }\n    function readImageData(element) {\n        var relationshipId = element.attributes[\"r:id\"];\n        if (relationshipId) {\n            return readImage(findEmbeddedImageFile(relationshipId), element.attributes[\"o:title\"]);\n        } else {\n            return emptyResultWithMessages([\n                warning(\"A v:imagedata element without a relationship ID was ignored\")\n            ]);\n        }\n    }\n    function findEmbeddedImageFile(relationshipId) {\n        var path = uris.uriToZipEntryName(\"word\", relationships.findTargetByRelationshipId(relationshipId));\n        return {\n            path: path,\n            read: docxFile.read.bind(docxFile, path)\n        };\n    }\n    function readImage(imageFile, altText) {\n        var contentType = contentTypes.findContentType(imageFile.path);\n        var image = documents.Image({\n            readImage: imageFile.read,\n            altText: altText,\n            contentType: contentType\n        });\n        var warnings = supportedImageTypes[contentType] ? [] : warning(\"Image of type \" + contentType + \" is unlikely to display in web browsers\");\n        return elementResultWithMessages(image, warnings);\n    }\n    function undefinedStyleWarning(type, styleId) {\n        return warning(type + \" style with ID \" + styleId + \" was referenced but not defined in the document\");\n    }\n}\nfunction readNumberingProperties(styleId, element, numbering) {\n    var level = element.firstOrEmpty(\"w:ilvl\").attributes[\"w:val\"];\n    var numId = element.firstOrEmpty(\"w:numId\").attributes[\"w:val\"];\n    if (level !== undefined && numId !== undefined) {\n        return numbering.findLevel(numId, level);\n    }\n    if (styleId != null) {\n        var levelByStyleId = numbering.findLevelByParagraphStyleId(styleId);\n        if (levelByStyleId != null) {\n            return levelByStyleId;\n        }\n    }\n    return null;\n}\nvar supportedImageTypes = {\n    \"image/png\": true,\n    \"image/gif\": true,\n    \"image/jpeg\": true,\n    \"image/svg+xml\": true,\n    \"image/tiff\": true\n};\nvar ignoreElements = {\n    \"office-word:wrap\": true,\n    \"v:shadow\": true,\n    \"v:shapetype\": true,\n    \"w:annotationRef\": true,\n    \"w:bookmarkEnd\": true,\n    \"w:sectPr\": true,\n    \"w:proofErr\": true,\n    \"w:lastRenderedPageBreak\": true,\n    \"w:commentRangeStart\": true,\n    \"w:commentRangeEnd\": true,\n    \"w:del\": true,\n    \"w:footnoteRef\": true,\n    \"w:endnoteRef\": true,\n    \"w:pPr\": true,\n    \"w:rPr\": true,\n    \"w:tblPr\": true,\n    \"w:tblGrid\": true,\n    \"w:trPr\": true,\n    \"w:tcPr\": true\n};\nfunction emptyResultWithMessages(messages) {\n    return new ReadResult(null, null, messages);\n}\nfunction emptyResult() {\n    return new ReadResult(null);\n}\nfunction elementResult(element) {\n    return new ReadResult(element);\n}\nfunction elementResultWithMessages(element, messages) {\n    return new ReadResult(element, null, messages);\n}\nfunction ReadResult(element, extra, messages) {\n    this.value = element || [];\n    this.extra = extra || [];\n    this._result = new Result({\n        element: this.value,\n        extra: extra\n    }, messages);\n    this.messages = this._result.messages;\n}\nReadResult.prototype.toExtra = function() {\n    return new ReadResult(null, joinElements(this.extra, this.value), this.messages);\n};\nReadResult.prototype.insertExtra = function() {\n    var extra = this.extra;\n    if (extra && extra.length) {\n        return new ReadResult(joinElements(this.value, extra), null, this.messages);\n    } else {\n        return this;\n    }\n};\nReadResult.prototype.map = function(func) {\n    var result = this._result.map(function(value) {\n        return func(value.element);\n    });\n    return new ReadResult(result.value, this.extra, result.messages);\n};\nReadResult.prototype.flatMap = function(func) {\n    var result = this._result.flatMap(function(value) {\n        return func(value.element)._result;\n    });\n    return new ReadResult(result.value.element, joinElements(this.extra, result.value.extra), result.messages);\n};\nReadResult.map = function(first, second, func) {\n    return new ReadResult(func(first.value, second.value), joinElements(first.extra, second.extra), first.messages.concat(second.messages));\n};\nfunction combineResults(results) {\n    var result = Result.combine(_.pluck(results, \"_result\"));\n    return new ReadResult(_.flatten(_.pluck(result.value, \"element\")), _.filter(_.flatten(_.pluck(result.value, \"extra\")), identity), result.messages);\n}\nfunction joinElements(first, second) {\n    return _.flatten([\n        first,\n        second\n    ]);\n}\nfunction identity(value) {\n    return value;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mammoth/lib/docx/body-reader.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mammoth/lib/docx/comments-reader.js":
/*!**********************************************************!*\
  !*** ./node_modules/mammoth/lib/docx/comments-reader.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var documents = __webpack_require__(/*! ../documents */ \"(rsc)/./node_modules/mammoth/lib/documents.js\");\nvar Result = (__webpack_require__(/*! ../results */ \"(rsc)/./node_modules/mammoth/lib/results.js\").Result);\nfunction createCommentsReader(bodyReader) {\n    function readCommentsXml(element) {\n        return Result.combine(element.getElementsByTagName(\"w:comment\").map(readCommentElement));\n    }\n    function readCommentElement(element) {\n        var id = element.attributes[\"w:id\"];\n        function readOptionalAttribute(name) {\n            return (element.attributes[name] || \"\").trim() || null;\n        }\n        return bodyReader.readXmlElements(element.children).map(function(body) {\n            return documents.comment({\n                commentId: id,\n                body: body,\n                authorName: readOptionalAttribute(\"w:author\"),\n                authorInitials: readOptionalAttribute(\"w:initials\")\n            });\n        });\n    }\n    return readCommentsXml;\n}\nexports.createCommentsReader = createCommentsReader;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvZG9jeC9jb21tZW50cy1yZWFkZXIuanMiLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsWUFBWUMsbUJBQU9BLENBQUMsbUVBQWM7QUFDdEMsSUFBSUMsU0FBU0QsNkZBQTRCO0FBRXpDLFNBQVNFLHFCQUFxQkMsVUFBVTtJQUNwQyxTQUFTQyxnQkFBZ0JDLE9BQU87UUFDNUIsT0FBT0osT0FBT0ssT0FBTyxDQUFDRCxRQUFRRSxvQkFBb0IsQ0FBQyxhQUM5Q0MsR0FBRyxDQUFDQztJQUNiO0lBRUEsU0FBU0EsbUJBQW1CSixPQUFPO1FBQy9CLElBQUlLLEtBQUtMLFFBQVFNLFVBQVUsQ0FBQyxPQUFPO1FBRW5DLFNBQVNDLHNCQUFzQkMsSUFBSTtZQUMvQixPQUFPLENBQUNSLFFBQVFNLFVBQVUsQ0FBQ0UsS0FBSyxJQUFJLEVBQUMsRUFBR0MsSUFBSSxNQUFNO1FBQ3REO1FBRUEsT0FBT1gsV0FBV1ksZUFBZSxDQUFDVixRQUFRVyxRQUFRLEVBQzdDUixHQUFHLENBQUMsU0FBU1MsSUFBSTtZQUNkLE9BQU9sQixVQUFVbUIsT0FBTyxDQUFDO2dCQUNyQkMsV0FBV1Q7Z0JBQ1hPLE1BQU1BO2dCQUNORyxZQUFZUixzQkFBc0I7Z0JBQ2xDUyxnQkFBZ0JULHNCQUFzQjtZQUMxQztRQUNKO0lBQ1I7SUFFQSxPQUFPUjtBQUNYO0FBRUFrQiw0QkFBNEIsR0FBR3BCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdW1lYnVpbGRlci1haS8uL25vZGVfbW9kdWxlcy9tYW1tb3RoL2xpYi9kb2N4L2NvbW1lbnRzLXJlYWRlci5qcz9iZjIxIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBkb2N1bWVudHMgPSByZXF1aXJlKFwiLi4vZG9jdW1lbnRzXCIpO1xudmFyIFJlc3VsdCA9IHJlcXVpcmUoXCIuLi9yZXN1bHRzXCIpLlJlc3VsdDtcblxuZnVuY3Rpb24gY3JlYXRlQ29tbWVudHNSZWFkZXIoYm9keVJlYWRlcikge1xuICAgIGZ1bmN0aW9uIHJlYWRDb21tZW50c1htbChlbGVtZW50KSB7XG4gICAgICAgIHJldHVybiBSZXN1bHQuY29tYmluZShlbGVtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwidzpjb21tZW50XCIpXG4gICAgICAgICAgICAubWFwKHJlYWRDb21tZW50RWxlbWVudCkpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHJlYWRDb21tZW50RWxlbWVudChlbGVtZW50KSB7XG4gICAgICAgIHZhciBpZCA9IGVsZW1lbnQuYXR0cmlidXRlc1tcInc6aWRcIl07XG5cbiAgICAgICAgZnVuY3Rpb24gcmVhZE9wdGlvbmFsQXR0cmlidXRlKG5hbWUpIHtcbiAgICAgICAgICAgIHJldHVybiAoZWxlbWVudC5hdHRyaWJ1dGVzW25hbWVdIHx8IFwiXCIpLnRyaW0oKSB8fCBudWxsO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGJvZHlSZWFkZXIucmVhZFhtbEVsZW1lbnRzKGVsZW1lbnQuY2hpbGRyZW4pXG4gICAgICAgICAgICAubWFwKGZ1bmN0aW9uKGJvZHkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZG9jdW1lbnRzLmNvbW1lbnQoe1xuICAgICAgICAgICAgICAgICAgICBjb21tZW50SWQ6IGlkLFxuICAgICAgICAgICAgICAgICAgICBib2R5OiBib2R5LFxuICAgICAgICAgICAgICAgICAgICBhdXRob3JOYW1lOiByZWFkT3B0aW9uYWxBdHRyaWJ1dGUoXCJ3OmF1dGhvclwiKSxcbiAgICAgICAgICAgICAgICAgICAgYXV0aG9ySW5pdGlhbHM6IHJlYWRPcHRpb25hbEF0dHJpYnV0ZShcInc6aW5pdGlhbHNcIilcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgIH1cbiAgICBcbiAgICByZXR1cm4gcmVhZENvbW1lbnRzWG1sO1xufVxuXG5leHBvcnRzLmNyZWF0ZUNvbW1lbnRzUmVhZGVyID0gY3JlYXRlQ29tbWVudHNSZWFkZXI7XG4iXSwibmFtZXMiOlsiZG9jdW1lbnRzIiwicmVxdWlyZSIsIlJlc3VsdCIsImNyZWF0ZUNvbW1lbnRzUmVhZGVyIiwiYm9keVJlYWRlciIsInJlYWRDb21tZW50c1htbCIsImVsZW1lbnQiLCJjb21iaW5lIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJtYXAiLCJyZWFkQ29tbWVudEVsZW1lbnQiLCJpZCIsImF0dHJpYnV0ZXMiLCJyZWFkT3B0aW9uYWxBdHRyaWJ1dGUiLCJuYW1lIiwidHJpbSIsInJlYWRYbWxFbGVtZW50cyIsImNoaWxkcmVuIiwiYm9keSIsImNvbW1lbnQiLCJjb21tZW50SWQiLCJhdXRob3JOYW1lIiwiYXV0aG9ySW5pdGlhbHMiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mammoth/lib/docx/comments-reader.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mammoth/lib/docx/content-types-reader.js":
/*!***************************************************************!*\
  !*** ./node_modules/mammoth/lib/docx/content-types-reader.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("exports.readContentTypesFromXml = readContentTypesFromXml;\nvar fallbackContentTypes = {\n    \"png\": \"png\",\n    \"gif\": \"gif\",\n    \"jpeg\": \"jpeg\",\n    \"jpg\": \"jpeg\",\n    \"tif\": \"tiff\",\n    \"tiff\": \"tiff\",\n    \"bmp\": \"bmp\"\n};\nexports.defaultContentTypes = contentTypes({}, {});\nfunction readContentTypesFromXml(element) {\n    var extensionDefaults = {};\n    var overrides = {};\n    element.children.forEach(function(child) {\n        if (child.name === \"content-types:Default\") {\n            extensionDefaults[child.attributes.Extension] = child.attributes.ContentType;\n        }\n        if (child.name === \"content-types:Override\") {\n            var name = child.attributes.PartName;\n            if (name.charAt(0) === \"/\") {\n                name = name.substring(1);\n            }\n            overrides[name] = child.attributes.ContentType;\n        }\n    });\n    return contentTypes(overrides, extensionDefaults);\n}\nfunction contentTypes(overrides, extensionDefaults) {\n    return {\n        findContentType: function(path) {\n            var overrideContentType = overrides[path];\n            if (overrideContentType) {\n                return overrideContentType;\n            } else {\n                var pathParts = path.split(\".\");\n                var extension = pathParts[pathParts.length - 1];\n                if (extensionDefaults.hasOwnProperty(extension)) {\n                    return extensionDefaults[extension];\n                } else {\n                    var fallback = fallbackContentTypes[extension.toLowerCase()];\n                    if (fallback) {\n                        return \"image/\" + fallback;\n                    } else {\n                        return null;\n                    }\n                }\n            }\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvZG9jeC9jb250ZW50LXR5cGVzLXJlYWRlci5qcyIsIm1hcHBpbmdzIjoiQUFBQUEsK0JBQStCLEdBQUdDO0FBRWxDLElBQUlDLHVCQUF1QjtJQUN2QixPQUFPO0lBQ1AsT0FBTztJQUNQLFFBQVE7SUFDUixPQUFPO0lBQ1AsT0FBTztJQUNQLFFBQVE7SUFDUixPQUFPO0FBQ1g7QUFFQUYsMkJBQTJCLEdBQUdJLGFBQWEsQ0FBQyxHQUFHLENBQUM7QUFHaEQsU0FBU0gsd0JBQXdCSSxPQUFPO0lBQ3BDLElBQUlDLG9CQUFvQixDQUFDO0lBQ3pCLElBQUlDLFlBQVksQ0FBQztJQUVqQkYsUUFBUUcsUUFBUSxDQUFDQyxPQUFPLENBQUMsU0FBU0MsS0FBSztRQUNuQyxJQUFJQSxNQUFNQyxJQUFJLEtBQUsseUJBQXlCO1lBQ3hDTCxpQkFBaUIsQ0FBQ0ksTUFBTUUsVUFBVSxDQUFDQyxTQUFTLENBQUMsR0FBR0gsTUFBTUUsVUFBVSxDQUFDRSxXQUFXO1FBQ2hGO1FBQ0EsSUFBSUosTUFBTUMsSUFBSSxLQUFLLDBCQUEwQjtZQUN6QyxJQUFJQSxPQUFPRCxNQUFNRSxVQUFVLENBQUNHLFFBQVE7WUFDcEMsSUFBSUosS0FBS0ssTUFBTSxDQUFDLE9BQU8sS0FBSztnQkFDeEJMLE9BQU9BLEtBQUtNLFNBQVMsQ0FBQztZQUMxQjtZQUNBVixTQUFTLENBQUNJLEtBQUssR0FBR0QsTUFBTUUsVUFBVSxDQUFDRSxXQUFXO1FBQ2xEO0lBQ0o7SUFDQSxPQUFPVixhQUFhRyxXQUFXRDtBQUNuQztBQUVBLFNBQVNGLGFBQWFHLFNBQVMsRUFBRUQsaUJBQWlCO0lBQzlDLE9BQU87UUFDSFksaUJBQWlCLFNBQVNDLElBQUk7WUFDMUIsSUFBSUMsc0JBQXNCYixTQUFTLENBQUNZLEtBQUs7WUFDekMsSUFBSUMscUJBQXFCO2dCQUNyQixPQUFPQTtZQUNYLE9BQU87Z0JBQ0gsSUFBSUMsWUFBWUYsS0FBS0csS0FBSyxDQUFDO2dCQUMzQixJQUFJQyxZQUFZRixTQUFTLENBQUNBLFVBQVVHLE1BQU0sR0FBRyxFQUFFO2dCQUMvQyxJQUFJbEIsa0JBQWtCbUIsY0FBYyxDQUFDRixZQUFZO29CQUM3QyxPQUFPakIsaUJBQWlCLENBQUNpQixVQUFVO2dCQUN2QyxPQUFPO29CQUNILElBQUlHLFdBQVd4QixvQkFBb0IsQ0FBQ3FCLFVBQVVJLFdBQVcsR0FBRztvQkFDNUQsSUFBSUQsVUFBVTt3QkFDVixPQUFPLFdBQVdBO29CQUN0QixPQUFPO3dCQUNILE9BQU87b0JBQ1g7Z0JBQ0o7WUFDSjtRQUNKO0lBQ0o7QUFFSiIsInNvdXJjZXMiOlsid2VicGFjazovL3Jlc3VtZWJ1aWxkZXItYWkvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvZG9jeC9jb250ZW50LXR5cGVzLXJlYWRlci5qcz9iOWU3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMucmVhZENvbnRlbnRUeXBlc0Zyb21YbWwgPSByZWFkQ29udGVudFR5cGVzRnJvbVhtbDtcblxudmFyIGZhbGxiYWNrQ29udGVudFR5cGVzID0ge1xuICAgIFwicG5nXCI6IFwicG5nXCIsXG4gICAgXCJnaWZcIjogXCJnaWZcIixcbiAgICBcImpwZWdcIjogXCJqcGVnXCIsXG4gICAgXCJqcGdcIjogXCJqcGVnXCIsXG4gICAgXCJ0aWZcIjogXCJ0aWZmXCIsXG4gICAgXCJ0aWZmXCI6IFwidGlmZlwiLFxuICAgIFwiYm1wXCI6IFwiYm1wXCJcbn07XG5cbmV4cG9ydHMuZGVmYXVsdENvbnRlbnRUeXBlcyA9IGNvbnRlbnRUeXBlcyh7fSwge30pO1xuXG5cbmZ1bmN0aW9uIHJlYWRDb250ZW50VHlwZXNGcm9tWG1sKGVsZW1lbnQpIHtcbiAgICB2YXIgZXh0ZW5zaW9uRGVmYXVsdHMgPSB7fTtcbiAgICB2YXIgb3ZlcnJpZGVzID0ge307XG4gICAgXG4gICAgZWxlbWVudC5jaGlsZHJlbi5mb3JFYWNoKGZ1bmN0aW9uKGNoaWxkKSB7XG4gICAgICAgIGlmIChjaGlsZC5uYW1lID09PSBcImNvbnRlbnQtdHlwZXM6RGVmYXVsdFwiKSB7XG4gICAgICAgICAgICBleHRlbnNpb25EZWZhdWx0c1tjaGlsZC5hdHRyaWJ1dGVzLkV4dGVuc2lvbl0gPSBjaGlsZC5hdHRyaWJ1dGVzLkNvbnRlbnRUeXBlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChjaGlsZC5uYW1lID09PSBcImNvbnRlbnQtdHlwZXM6T3ZlcnJpZGVcIikge1xuICAgICAgICAgICAgdmFyIG5hbWUgPSBjaGlsZC5hdHRyaWJ1dGVzLlBhcnROYW1lO1xuICAgICAgICAgICAgaWYgKG5hbWUuY2hhckF0KDApID09PSBcIi9cIikge1xuICAgICAgICAgICAgICAgIG5hbWUgPSBuYW1lLnN1YnN0cmluZygxKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG92ZXJyaWRlc1tuYW1lXSA9IGNoaWxkLmF0dHJpYnV0ZXMuQ29udGVudFR5cGU7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gY29udGVudFR5cGVzKG92ZXJyaWRlcywgZXh0ZW5zaW9uRGVmYXVsdHMpO1xufVxuXG5mdW5jdGlvbiBjb250ZW50VHlwZXMob3ZlcnJpZGVzLCBleHRlbnNpb25EZWZhdWx0cykge1xuICAgIHJldHVybiB7XG4gICAgICAgIGZpbmRDb250ZW50VHlwZTogZnVuY3Rpb24ocGF0aCkge1xuICAgICAgICAgICAgdmFyIG92ZXJyaWRlQ29udGVudFR5cGUgPSBvdmVycmlkZXNbcGF0aF07XG4gICAgICAgICAgICBpZiAob3ZlcnJpZGVDb250ZW50VHlwZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBvdmVycmlkZUNvbnRlbnRUeXBlO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB2YXIgcGF0aFBhcnRzID0gcGF0aC5zcGxpdChcIi5cIik7XG4gICAgICAgICAgICAgICAgdmFyIGV4dGVuc2lvbiA9IHBhdGhQYXJ0c1twYXRoUGFydHMubGVuZ3RoIC0gMV07XG4gICAgICAgICAgICAgICAgaWYgKGV4dGVuc2lvbkRlZmF1bHRzLmhhc093blByb3BlcnR5KGV4dGVuc2lvbikpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGV4dGVuc2lvbkRlZmF1bHRzW2V4dGVuc2lvbl07XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGZhbGxiYWNrID0gZmFsbGJhY2tDb250ZW50VHlwZXNbZXh0ZW5zaW9uLnRvTG93ZXJDYXNlKCldO1xuICAgICAgICAgICAgICAgICAgICBpZiAoZmFsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBcImltYWdlL1wiICsgZmFsbGJhY2s7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG4gICAgXG59XG4iXSwibmFtZXMiOlsiZXhwb3J0cyIsInJlYWRDb250ZW50VHlwZXNGcm9tWG1sIiwiZmFsbGJhY2tDb250ZW50VHlwZXMiLCJkZWZhdWx0Q29udGVudFR5cGVzIiwiY29udGVudFR5cGVzIiwiZWxlbWVudCIsImV4dGVuc2lvbkRlZmF1bHRzIiwib3ZlcnJpZGVzIiwiY2hpbGRyZW4iLCJmb3JFYWNoIiwiY2hpbGQiLCJuYW1lIiwiYXR0cmlidXRlcyIsIkV4dGVuc2lvbiIsIkNvbnRlbnRUeXBlIiwiUGFydE5hbWUiLCJjaGFyQXQiLCJzdWJzdHJpbmciLCJmaW5kQ29udGVudFR5cGUiLCJwYXRoIiwib3ZlcnJpZGVDb250ZW50VHlwZSIsInBhdGhQYXJ0cyIsInNwbGl0IiwiZXh0ZW5zaW9uIiwibGVuZ3RoIiwiaGFzT3duUHJvcGVydHkiLCJmYWxsYmFjayIsInRvTG93ZXJDYXNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mammoth/lib/docx/content-types-reader.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mammoth/lib/docx/document-xml-reader.js":
/*!**************************************************************!*\
  !*** ./node_modules/mammoth/lib/docx/document-xml-reader.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("exports.DocumentXmlReader = DocumentXmlReader;\nvar documents = __webpack_require__(/*! ../documents */ \"(rsc)/./node_modules/mammoth/lib/documents.js\");\nvar Result = (__webpack_require__(/*! ../results */ \"(rsc)/./node_modules/mammoth/lib/results.js\").Result);\nfunction DocumentXmlReader(options) {\n    var bodyReader = options.bodyReader;\n    function convertXmlToDocument(element) {\n        var body = element.first(\"w:body\");\n        if (body == null) {\n            throw new Error(\"Could not find the body element: are you sure this is a docx file?\");\n        }\n        var result = bodyReader.readXmlElements(body.children).map(function(children) {\n            return new documents.Document(children, {\n                notes: options.notes,\n                comments: options.comments\n            });\n        });\n        return new Result(result.value, result.messages);\n    }\n    return {\n        convertXmlToDocument: convertXmlToDocument\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvZG9jeC9kb2N1bWVudC14bWwtcmVhZGVyLmpzIiwibWFwcGluZ3MiOiJBQUFBQSx5QkFBeUIsR0FBR0M7QUFFNUIsSUFBSUMsWUFBWUMsbUJBQU9BLENBQUMsbUVBQWM7QUFDdEMsSUFBSUMsU0FBU0QsNkZBQTRCO0FBR3pDLFNBQVNGLGtCQUFrQkksT0FBTztJQUM5QixJQUFJQyxhQUFhRCxRQUFRQyxVQUFVO0lBRW5DLFNBQVNDLHFCQUFxQkMsT0FBTztRQUNqQyxJQUFJQyxPQUFPRCxRQUFRRSxLQUFLLENBQUM7UUFFekIsSUFBSUQsUUFBUSxNQUFNO1lBQ2QsTUFBTSxJQUFJRSxNQUFNO1FBQ3BCO1FBRUEsSUFBSUMsU0FBU04sV0FBV08sZUFBZSxDQUFDSixLQUFLSyxRQUFRLEVBQ2hEQyxHQUFHLENBQUMsU0FBU0QsUUFBUTtZQUNsQixPQUFPLElBQUlaLFVBQVVjLFFBQVEsQ0FBQ0YsVUFBVTtnQkFDcENHLE9BQU9aLFFBQVFZLEtBQUs7Z0JBQ3BCQyxVQUFVYixRQUFRYSxRQUFRO1lBQzlCO1FBQ0o7UUFDSixPQUFPLElBQUlkLE9BQU9RLE9BQU9PLEtBQUssRUFBRVAsT0FBT1EsUUFBUTtJQUNuRDtJQUVBLE9BQU87UUFDSGIsc0JBQXNCQTtJQUMxQjtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdW1lYnVpbGRlci1haS8uL25vZGVfbW9kdWxlcy9tYW1tb3RoL2xpYi9kb2N4L2RvY3VtZW50LXhtbC1yZWFkZXIuanM/MTg1NiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzLkRvY3VtZW50WG1sUmVhZGVyID0gRG9jdW1lbnRYbWxSZWFkZXI7XG5cbnZhciBkb2N1bWVudHMgPSByZXF1aXJlKFwiLi4vZG9jdW1lbnRzXCIpO1xudmFyIFJlc3VsdCA9IHJlcXVpcmUoXCIuLi9yZXN1bHRzXCIpLlJlc3VsdDtcblxuXG5mdW5jdGlvbiBEb2N1bWVudFhtbFJlYWRlcihvcHRpb25zKSB7XG4gICAgdmFyIGJvZHlSZWFkZXIgPSBvcHRpb25zLmJvZHlSZWFkZXI7XG5cbiAgICBmdW5jdGlvbiBjb252ZXJ0WG1sVG9Eb2N1bWVudChlbGVtZW50KSB7XG4gICAgICAgIHZhciBib2R5ID0gZWxlbWVudC5maXJzdChcInc6Ym9keVwiKTtcblxuICAgICAgICBpZiAoYm9keSA9PSBudWxsKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZCBub3QgZmluZCB0aGUgYm9keSBlbGVtZW50OiBhcmUgeW91IHN1cmUgdGhpcyBpcyBhIGRvY3ggZmlsZT9cIik7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgcmVzdWx0ID0gYm9keVJlYWRlci5yZWFkWG1sRWxlbWVudHMoYm9keS5jaGlsZHJlbilcbiAgICAgICAgICAgIC5tYXAoZnVuY3Rpb24oY2hpbGRyZW4pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IGRvY3VtZW50cy5Eb2N1bWVudChjaGlsZHJlbiwge1xuICAgICAgICAgICAgICAgICAgICBub3Rlczogb3B0aW9ucy5ub3RlcyxcbiAgICAgICAgICAgICAgICAgICAgY29tbWVudHM6IG9wdGlvbnMuY29tbWVudHNcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gbmV3IFJlc3VsdChyZXN1bHQudmFsdWUsIHJlc3VsdC5tZXNzYWdlcyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgY29udmVydFhtbFRvRG9jdW1lbnQ6IGNvbnZlcnRYbWxUb0RvY3VtZW50XG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6WyJleHBvcnRzIiwiRG9jdW1lbnRYbWxSZWFkZXIiLCJkb2N1bWVudHMiLCJyZXF1aXJlIiwiUmVzdWx0Iiwib3B0aW9ucyIsImJvZHlSZWFkZXIiLCJjb252ZXJ0WG1sVG9Eb2N1bWVudCIsImVsZW1lbnQiLCJib2R5IiwiZmlyc3QiLCJFcnJvciIsInJlc3VsdCIsInJlYWRYbWxFbGVtZW50cyIsImNoaWxkcmVuIiwibWFwIiwiRG9jdW1lbnQiLCJub3RlcyIsImNvbW1lbnRzIiwidmFsdWUiLCJtZXNzYWdlcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mammoth/lib/docx/document-xml-reader.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mammoth/lib/docx/docx-reader.js":
/*!******************************************************!*\
  !*** ./node_modules/mammoth/lib/docx/docx-reader.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("exports.read = read;\nexports._findPartPaths = findPartPaths;\nvar promises = __webpack_require__(/*! ../promises */ \"(rsc)/./node_modules/mammoth/lib/promises.js\");\nvar documents = __webpack_require__(/*! ../documents */ \"(rsc)/./node_modules/mammoth/lib/documents.js\");\nvar Result = (__webpack_require__(/*! ../results */ \"(rsc)/./node_modules/mammoth/lib/results.js\").Result);\nvar zipfile = __webpack_require__(/*! ../zipfile */ \"(rsc)/./node_modules/mammoth/lib/zipfile.js\");\nvar readXmlFromZipFile = (__webpack_require__(/*! ./office-xml-reader */ \"(rsc)/./node_modules/mammoth/lib/docx/office-xml-reader.js\").readXmlFromZipFile);\nvar createBodyReader = (__webpack_require__(/*! ./body-reader */ \"(rsc)/./node_modules/mammoth/lib/docx/body-reader.js\").createBodyReader);\nvar DocumentXmlReader = (__webpack_require__(/*! ./document-xml-reader */ \"(rsc)/./node_modules/mammoth/lib/docx/document-xml-reader.js\").DocumentXmlReader);\nvar relationshipsReader = __webpack_require__(/*! ./relationships-reader */ \"(rsc)/./node_modules/mammoth/lib/docx/relationships-reader.js\");\nvar contentTypesReader = __webpack_require__(/*! ./content-types-reader */ \"(rsc)/./node_modules/mammoth/lib/docx/content-types-reader.js\");\nvar numberingXml = __webpack_require__(/*! ./numbering-xml */ \"(rsc)/./node_modules/mammoth/lib/docx/numbering-xml.js\");\nvar stylesReader = __webpack_require__(/*! ./styles-reader */ \"(rsc)/./node_modules/mammoth/lib/docx/styles-reader.js\");\nvar notesReader = __webpack_require__(/*! ./notes-reader */ \"(rsc)/./node_modules/mammoth/lib/docx/notes-reader.js\");\nvar commentsReader = __webpack_require__(/*! ./comments-reader */ \"(rsc)/./node_modules/mammoth/lib/docx/comments-reader.js\");\nvar Files = (__webpack_require__(/*! ./files */ \"(rsc)/./node_modules/mammoth/lib/docx/files.js\").Files);\nfunction read(docxFile, input) {\n    input = input || {};\n    return promises.props({\n        contentTypes: readContentTypesFromZipFile(docxFile),\n        partPaths: findPartPaths(docxFile),\n        docxFile: docxFile,\n        files: input.path ? Files.relativeToFile(input.path) : new Files(null)\n    }).also(function(result) {\n        return {\n            styles: readStylesFromZipFile(docxFile, result.partPaths.styles)\n        };\n    }).also(function(result) {\n        return {\n            numbering: readNumberingFromZipFile(docxFile, result.partPaths.numbering, result.styles)\n        };\n    }).also(function(result) {\n        return {\n            footnotes: readXmlFileWithBody(result.partPaths.footnotes, result, function(bodyReader, xml) {\n                if (xml) {\n                    return notesReader.createFootnotesReader(bodyReader)(xml);\n                } else {\n                    return new Result([]);\n                }\n            }),\n            endnotes: readXmlFileWithBody(result.partPaths.endnotes, result, function(bodyReader, xml) {\n                if (xml) {\n                    return notesReader.createEndnotesReader(bodyReader)(xml);\n                } else {\n                    return new Result([]);\n                }\n            }),\n            comments: readXmlFileWithBody(result.partPaths.comments, result, function(bodyReader, xml) {\n                if (xml) {\n                    return commentsReader.createCommentsReader(bodyReader)(xml);\n                } else {\n                    return new Result([]);\n                }\n            })\n        };\n    }).also(function(result) {\n        return {\n            notes: result.footnotes.flatMap(function(footnotes) {\n                return result.endnotes.map(function(endnotes) {\n                    return new documents.Notes(footnotes.concat(endnotes));\n                });\n            })\n        };\n    }).then(function(result) {\n        return readXmlFileWithBody(result.partPaths.mainDocument, result, function(bodyReader, xml) {\n            return result.notes.flatMap(function(notes) {\n                return result.comments.flatMap(function(comments) {\n                    var reader = new DocumentXmlReader({\n                        bodyReader: bodyReader,\n                        notes: notes,\n                        comments: comments\n                    });\n                    return reader.convertXmlToDocument(xml);\n                });\n            });\n        });\n    });\n}\nfunction findPartPaths(docxFile) {\n    return readPackageRelationships(docxFile).then(function(packageRelationships) {\n        var mainDocumentPath = findPartPath({\n            docxFile: docxFile,\n            relationships: packageRelationships,\n            relationshipType: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\",\n            basePath: \"\",\n            fallbackPath: \"word/document.xml\"\n        });\n        if (!docxFile.exists(mainDocumentPath)) {\n            throw new Error(\"Could not find main document part. Are you sure this is a valid .docx file?\");\n        }\n        return xmlFileReader({\n            filename: relationshipsFilename(mainDocumentPath),\n            readElement: relationshipsReader.readRelationships,\n            defaultValue: relationshipsReader.defaultValue\n        })(docxFile).then(function(documentRelationships) {\n            function findPartRelatedToMainDocument(name) {\n                return findPartPath({\n                    docxFile: docxFile,\n                    relationships: documentRelationships,\n                    relationshipType: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/\" + name,\n                    basePath: zipfile.splitPath(mainDocumentPath).dirname,\n                    fallbackPath: \"word/\" + name + \".xml\"\n                });\n            }\n            return {\n                mainDocument: mainDocumentPath,\n                comments: findPartRelatedToMainDocument(\"comments\"),\n                endnotes: findPartRelatedToMainDocument(\"endnotes\"),\n                footnotes: findPartRelatedToMainDocument(\"footnotes\"),\n                numbering: findPartRelatedToMainDocument(\"numbering\"),\n                styles: findPartRelatedToMainDocument(\"styles\")\n            };\n        });\n    });\n}\nfunction findPartPath(options) {\n    var docxFile = options.docxFile;\n    var relationships = options.relationships;\n    var relationshipType = options.relationshipType;\n    var basePath = options.basePath;\n    var fallbackPath = options.fallbackPath;\n    var targets = relationships.findTargetsByType(relationshipType);\n    var normalisedTargets = targets.map(function(target) {\n        return stripPrefix(zipfile.joinPath(basePath, target), \"/\");\n    });\n    var validTargets = normalisedTargets.filter(function(target) {\n        return docxFile.exists(target);\n    });\n    if (validTargets.length === 0) {\n        return fallbackPath;\n    } else {\n        return validTargets[0];\n    }\n}\nfunction stripPrefix(value, prefix) {\n    if (value.substring(0, prefix.length) === prefix) {\n        return value.substring(prefix.length);\n    } else {\n        return value;\n    }\n}\nfunction xmlFileReader(options) {\n    return function(zipFile) {\n        return readXmlFromZipFile(zipFile, options.filename).then(function(element) {\n            return element ? options.readElement(element) : options.defaultValue;\n        });\n    };\n}\nfunction readXmlFileWithBody(filename, options, func) {\n    var readRelationshipsFromZipFile = xmlFileReader({\n        filename: relationshipsFilename(filename),\n        readElement: relationshipsReader.readRelationships,\n        defaultValue: relationshipsReader.defaultValue\n    });\n    return readRelationshipsFromZipFile(options.docxFile).then(function(relationships) {\n        var bodyReader = new createBodyReader({\n            relationships: relationships,\n            contentTypes: options.contentTypes,\n            docxFile: options.docxFile,\n            numbering: options.numbering,\n            styles: options.styles,\n            files: options.files\n        });\n        return readXmlFromZipFile(options.docxFile, filename).then(function(xml) {\n            return func(bodyReader, xml);\n        });\n    });\n}\nfunction relationshipsFilename(filename) {\n    var split = zipfile.splitPath(filename);\n    return zipfile.joinPath(split.dirname, \"_rels\", split.basename + \".rels\");\n}\nvar readContentTypesFromZipFile = xmlFileReader({\n    filename: \"[Content_Types].xml\",\n    readElement: contentTypesReader.readContentTypesFromXml,\n    defaultValue: contentTypesReader.defaultContentTypes\n});\nfunction readNumberingFromZipFile(zipFile, path, styles) {\n    return xmlFileReader({\n        filename: path,\n        readElement: function(element) {\n            return numberingXml.readNumberingXml(element, {\n                styles: styles\n            });\n        },\n        defaultValue: numberingXml.defaultNumbering\n    })(zipFile);\n}\nfunction readStylesFromZipFile(zipFile, path) {\n    return xmlFileReader({\n        filename: path,\n        readElement: stylesReader.readStylesXml,\n        defaultValue: stylesReader.defaultStyles\n    })(zipFile);\n}\nvar readPackageRelationships = xmlFileReader({\n    filename: \"_rels/.rels\",\n    readElement: relationshipsReader.readRelationships,\n    defaultValue: relationshipsReader.defaultValue\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvZG9jeC9kb2N4LXJlYWRlci5qcyIsIm1hcHBpbmdzIjoiQUFBQUEsWUFBWSxHQUFHQztBQUNmRCxzQkFBc0IsR0FBR0c7QUFFekIsSUFBSUMsV0FBV0MsbUJBQU9BLENBQUMsaUVBQWE7QUFDcEMsSUFBSUMsWUFBWUQsbUJBQU9BLENBQUMsbUVBQWM7QUFDdEMsSUFBSUUsU0FBU0YsNkZBQTRCO0FBQ3pDLElBQUlHLFVBQVVILG1CQUFPQSxDQUFDLCtEQUFZO0FBRWxDLElBQUlJLHFCQUFxQkosaUlBQWlEO0FBQzFFLElBQUlLLG1CQUFtQkwsbUhBQXlDO0FBQ2hFLElBQUlNLG9CQUFvQk4sb0lBQWtEO0FBQzFFLElBQUlPLHNCQUFzQlAsbUJBQU9BLENBQUMsNkZBQXdCO0FBQzFELElBQUlRLHFCQUFxQlIsbUJBQU9BLENBQUMsNkZBQXdCO0FBQ3pELElBQUlTLGVBQWVULG1CQUFPQSxDQUFDLCtFQUFpQjtBQUM1QyxJQUFJVSxlQUFlVixtQkFBT0EsQ0FBQywrRUFBaUI7QUFDNUMsSUFBSVcsY0FBY1gsbUJBQU9BLENBQUMsNkVBQWdCO0FBQzFDLElBQUlZLGlCQUFpQlosbUJBQU9BLENBQUMsbUZBQW1CO0FBQ2hELElBQUlhLFFBQVFiLDRGQUF3QjtBQUdwQyxTQUFTSixLQUFLa0IsUUFBUSxFQUFFQyxLQUFLO0lBQ3pCQSxRQUFRQSxTQUFTLENBQUM7SUFFbEIsT0FBT2hCLFNBQVNpQixLQUFLLENBQUM7UUFDbEJDLGNBQWNDLDRCQUE0Qko7UUFDMUNLLFdBQVdyQixjQUFjZ0I7UUFDekJBLFVBQVVBO1FBQ1ZNLE9BQU9MLE1BQU1NLElBQUksR0FBR1IsTUFBTVMsY0FBYyxDQUFDUCxNQUFNTSxJQUFJLElBQUksSUFBSVIsTUFBTTtJQUNyRSxHQUFHVSxJQUFJLENBQUMsU0FBU0MsTUFBTTtRQUNuQixPQUFPO1lBQ0hDLFFBQVFDLHNCQUFzQlosVUFBVVUsT0FBT0wsU0FBUyxDQUFDTSxNQUFNO1FB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eEQ7QUFFQSxTQUFTNUQseUJBQXlCcUQsT0FBTyxFQUFFNUQsSUFBSSxFQUFFSSxNQUFNO0lBQ25ELE9BQU9nQyxjQUFjO1FBQ2pCQyxVQUFVckM7UUFDVnVDLGFBQWEsU0FBU3NCLE9BQU87WUFDekIsT0FBT3pFLGFBQWFnRixnQkFBZ0IsQ0FBQ1AsU0FBUztnQkFBQ3pELFFBQVFBO1lBQU07UUFDakU7UUFDQXFDLGNBQWNyRCxhQUFhaUYsZ0JBQWdCO0lBQy9DLEdBQUdUO0FBQ1A7QUFFQSxTQUFTdkQsc0JBQXNCdUQsT0FBTyxFQUFFNUQsSUFBSTtJQUN4QyxPQUFPb0MsY0FBYztRQUNqQkMsVUFBVXJDO1FBQ1Z1QyxhQUFhbEQsYUFBYWlGLGFBQWE7UUFDdkM3QixjQUFjcEQsYUFBYWtGLGFBQWE7SUFDNUMsR0FBR1g7QUFDUDtBQUVBLElBQUlsQywyQkFBMkJVLGNBQWM7SUFDekNDLFVBQVU7SUFDVkUsYUFBYXJELG9CQUFvQnNELGlCQUFpQjtJQUNsREMsY0FBY3ZELG9CQUFvQnVELFlBQVk7QUFDbEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN1bWVidWlsZGVyLWFpLy4vbm9kZV9tb2R1bGVzL21hbW1vdGgvbGliL2RvY3gvZG9jeC1yZWFkZXIuanM/NTA2OCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzLnJlYWQgPSByZWFkO1xuZXhwb3J0cy5fZmluZFBhcnRQYXRocyA9IGZpbmRQYXJ0UGF0aHM7XG5cbnZhciBwcm9taXNlcyA9IHJlcXVpcmUoXCIuLi9wcm9taXNlc1wiKTtcbnZhciBkb2N1bWVudHMgPSByZXF1aXJlKFwiLi4vZG9jdW1lbnRzXCIpO1xudmFyIFJlc3VsdCA9IHJlcXVpcmUoXCIuLi9yZXN1bHRzXCIpLlJlc3VsdDtcbnZhciB6aXBmaWxlID0gcmVxdWlyZShcIi4uL3ppcGZpbGVcIik7XG5cbnZhciByZWFkWG1sRnJvbVppcEZpbGUgPSByZXF1aXJlKFwiLi9vZmZpY2UteG1sLXJlYWRlclwiKS5yZWFkWG1sRnJvbVppcEZpbGU7XG52YXIgY3JlYXRlQm9keVJlYWRlciA9IHJlcXVpcmUoXCIuL2JvZHktcmVhZGVyXCIpLmNyZWF0ZUJvZHlSZWFkZXI7XG52YXIgRG9jdW1lbnRYbWxSZWFkZXIgPSByZXF1aXJlKFwiLi9kb2N1bWVudC14bWwtcmVhZGVyXCIpLkRvY3VtZW50WG1sUmVhZGVyO1xudmFyIHJlbGF0aW9uc2hpcHNSZWFkZXIgPSByZXF1aXJlKFwiLi9yZWxhdGlvbnNoaXBzLXJlYWRlclwiKTtcbnZhciBjb250ZW50VHlwZXNSZWFkZXIgPSByZXF1aXJlKFwiLi9jb250ZW50LXR5cGVzLXJlYWRlclwiKTtcbnZhciBudW1iZXJpbmdYbWwgPSByZXF1aXJlKFwiLi9udW1iZXJpbmcteG1sXCIpO1xudmFyIHN0eWxlc1JlYWRlciA9IHJlcXVpcmUoXCIuL3N0eWxlcy1yZWFkZXJcIik7XG52YXIgbm90ZXNSZWFkZXIgPSByZXF1aXJlKFwiLi9ub3Rlcy1yZWFkZXJcIik7XG52YXIgY29tbWVudHNSZWFkZXIgPSByZXF1aXJlKFwiLi9jb21tZW50cy1yZWFkZXJcIik7XG52YXIgRmlsZXMgPSByZXF1aXJlKFwiLi9maWxlc1wiKS5GaWxlcztcblxuXG5mdW5jdGlvbiByZWFkKGRvY3hGaWxlLCBpbnB1dCkge1xuICAgIGlucHV0ID0gaW5wdXQgfHwge307XG5cbiAgICByZXR1cm4gcHJvbWlzZXMucHJvcHMoe1xuICAgICAgICBjb250ZW50VHlwZXM6IHJlYWRDb250ZW50VHlwZXNGcm9tWmlwRmlsZShkb2N4RmlsZSksXG4gICAgICAgIHBhcnRQYXRoczogZmluZFBhcnRQYXRocyhkb2N4RmlsZSksXG4gICAgICAgIGRvY3hGaWxlOiBkb2N4RmlsZSxcbiAgICAgICAgZmlsZXM6IGlucHV0LnBhdGggPyBGaWxlcy5yZWxhdGl2ZVRvRmlsZShpbnB1dC5wYXRoKSA6IG5ldyBGaWxlcyhudWxsKVxuICAgIH0pLmFsc28oZnVuY3Rpb24ocmVzdWx0KSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzdHlsZXM6IHJlYWRTdHlsZXNGcm9tWmlwRmlsZShkb2N4RmlsZSwgcmVzdWx0LnBhcnRQYXRocy5zdHlsZXMpXG4gICAgICAgIH07XG4gICAgfSkuYWxzbyhmdW5jdGlvbihyZXN1bHQpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG51bWJlcmluZzogcmVhZE51bWJlcmluZ0Zyb21aaXBGaWxlKGRvY3hGaWxlLCByZXN1bHQucGFydFBhdGhzLm51bWJlcmluZywgcmVzdWx0LnN0eWxlcylcbiAgICAgICAgfTtcbiAgICB9KS5hbHNvKGZ1bmN0aW9uKHJlc3VsdCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgZm9vdG5vdGVzOiByZWFkWG1sRmlsZVdpdGhCb2R5KHJlc3VsdC5wYXJ0UGF0aHMuZm9vdG5vdGVzLCByZXN1bHQsIGZ1bmN0aW9uKGJvZHlSZWFkZXIsIHhtbCkge1xuICAgICAgICAgICAgICAgIGlmICh4bWwpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5vdGVzUmVhZGVyLmNyZWF0ZUZvb3Rub3Rlc1JlYWRlcihib2R5UmVhZGVyKSh4bWwpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXcgUmVzdWx0KFtdKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIGVuZG5vdGVzOiByZWFkWG1sRmlsZVdpdGhCb2R5KHJlc3VsdC5wYXJ0UGF0aHMuZW5kbm90ZXMsIHJlc3VsdCwgZnVuY3Rpb24oYm9keVJlYWRlciwgeG1sKSB7XG4gICAgICAgICAgICAgICAgaWYgKHhtbCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbm90ZXNSZWFkZXIuY3JlYXRlRW5kbm90ZXNSZWFkZXIoYm9keVJlYWRlcikoeG1sKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFJlc3VsdChbXSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICBjb21tZW50czogcmVhZFhtbEZpbGVXaXRoQm9keShyZXN1bHQucGFydFBhdGhzLmNvbW1lbnRzLCByZXN1bHQsIGZ1bmN0aW9uKGJvZHlSZWFkZXIsIHhtbCkge1xuICAgICAgICAgICAgICAgIGlmICh4bWwpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNvbW1lbnRzUmVhZGVyLmNyZWF0ZUNvbW1lbnRzUmVhZGVyKGJvZHlSZWFkZXIpKHhtbCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBSZXN1bHQoW10pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH07XG4gICAgfSkuYWxzbyhmdW5jdGlvbihyZXN1bHQpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG5vdGVzOiByZXN1bHQuZm9vdG5vdGVzLmZsYXRNYXAoZnVuY3Rpb24oZm9vdG5vdGVzKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdC5lbmRub3Rlcy5tYXAoZnVuY3Rpb24oZW5kbm90ZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBkb2N1bWVudHMuTm90ZXMoZm9vdG5vdGVzLmNvbmNhdChlbmRub3RlcykpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgfTtcbiAgICB9KS50aGVuKGZ1bmN0aW9uKHJlc3VsdCkge1xuICAgICAgICByZXR1cm4gcmVhZFhtbEZpbGVXaXRoQm9keShyZXN1bHQucGFydFBhdGhzLm1haW5Eb2N1bWVudCwgcmVzdWx0LCBmdW5jdGlvbihib2R5UmVhZGVyLCB4bWwpIHtcbiAgICAgICAgICAgIHJldHVybiByZXN1bHQubm90ZXMuZmxhdE1hcChmdW5jdGlvbihub3Rlcykge1xuICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQuY29tbWVudHMuZmxhdE1hcChmdW5jdGlvbihjb21tZW50cykge1xuICAgICAgICAgICAgICAgICAgICB2YXIgcmVhZGVyID0gbmV3IERvY3VtZW50WG1sUmVhZGVyKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvZHlSZWFkZXI6IGJvZHlSZWFkZXIsXG4gICAgICAgICAgICAgICAgICAgICAgICBub3Rlczogbm90ZXMsXG4gICAgICAgICAgICAgICAgICAgICAgICBjb21tZW50czogY29tbWVudHNcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZWFkZXIuY29udmVydFhtbFRvRG9jdW1lbnQoeG1sKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9KTtcbn1cblxuZnVuY3Rpb24gZmluZFBhcnRQYXRocyhkb2N4RmlsZSkge1xuICAgIHJldHVybiByZWFkUGFja2FnZVJlbGF0aW9uc2hpcHMoZG9jeEZpbGUpLnRoZW4oZnVuY3Rpb24ocGFja2FnZVJlbGF0aW9uc2hpcHMpIHtcbiAgICAgICAgdmFyIG1haW5Eb2N1bWVudFBhdGggPSBmaW5kUGFydFBhdGgoe1xuICAgICAgICAgICAgZG9jeEZpbGU6IGRvY3hGaWxlLFxuICAgICAgICAgICAgcmVsYXRpb25zaGlwczogcGFja2FnZVJlbGF0aW9uc2hpcHMsXG4gICAgICAgICAgICByZWxhdGlvbnNoaXBUeXBlOiBcImh0dHA6Ly9zY2hlbWFzLm9wZW54bWxmb3JtYXRzLm9yZy9vZmZpY2VEb2N1bWVudC8yMDA2L3JlbGF0aW9uc2hpcHMvb2ZmaWNlRG9jdW1lbnRcIixcbiAgICAgICAgICAgIGJhc2VQYXRoOiBcIlwiLFxuICAgICAgICAgICAgZmFsbGJhY2tQYXRoOiBcIndvcmQvZG9jdW1lbnQueG1sXCJcbiAgICAgICAgfSk7XG5cbiAgICAgICAgaWYgKCFkb2N4RmlsZS5leGlzdHMobWFpbkRvY3VtZW50UGF0aCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkIG5vdCBmaW5kIG1haW4gZG9jdW1lbnQgcGFydC4gQXJlIHlvdSBzdXJlIHRoaXMgaXMgYSB2YWxpZCAuZG9jeCBmaWxlP1wiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB4bWxGaWxlUmVhZGVyKHtcbiAgICAgICAgICAgIGZpbGVuYW1lOiByZWxhdGlvbnNoaXBzRmlsZW5hbWUobWFpbkRvY3VtZW50UGF0aCksXG4gICAgICAgICAgICByZWFkRWxlbWVudDogcmVsYXRpb25zaGlwc1JlYWRlci5yZWFkUmVsYXRpb25zaGlwcyxcbiAgICAgICAgICAgIGRlZmF1bHRWYWx1ZTogcmVsYXRpb25zaGlwc1JlYWRlci5kZWZhdWx0VmFsdWVcbiAgICAgICAgfSkoZG9jeEZpbGUpLnRoZW4oZnVuY3Rpb24oZG9jdW1lbnRSZWxhdGlvbnNoaXBzKSB7XG4gICAgICAgICAgICBmdW5jdGlvbiBmaW5kUGFydFJlbGF0ZWRUb01haW5Eb2N1bWVudChuYW1lKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZpbmRQYXJ0UGF0aCh7XG4gICAgICAgICAgICAgICAgICAgIGRvY3hGaWxlOiBkb2N4RmlsZSxcbiAgICAgICAgICAgICAgICAgICAgcmVsYXRpb25zaGlwczogZG9jdW1lbnRSZWxhdGlvbnNoaXBzLFxuICAgICAgICAgICAgICAgICAgICByZWxhdGlvbnNoaXBUeXBlOiBcImh0dHA6Ly9zY2hlbWFzLm9wZW54bWxmb3JtYXRzLm9yZy9vZmZpY2VEb2N1bWVudC8yMDA2L3JlbGF0aW9uc2hpcHMvXCIgKyBuYW1lLFxuICAgICAgICAgICAgICAgICAgICBiYXNlUGF0aDogemlwZmlsZS5zcGxpdFBhdGgobWFpbkRvY3VtZW50UGF0aCkuZGlybmFtZSxcbiAgICAgICAgICAgICAgICAgICAgZmFsbGJhY2tQYXRoOiBcIndvcmQvXCIgKyBuYW1lICsgXCIueG1sXCJcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBtYWluRG9jdW1lbnQ6IG1haW5Eb2N1bWVudFBhdGgsXG4gICAgICAgICAgICAgICAgY29tbWVudHM6IGZpbmRQYXJ0UmVsYXRlZFRvTWFpbkRvY3VtZW50KFwiY29tbWVudHNcIiksXG4gICAgICAgICAgICAgICAgZW5kbm90ZXM6IGZpbmRQYXJ0UmVsYXRlZFRvTWFpbkRvY3VtZW50KFwiZW5kbm90ZXNcIiksXG4gICAgICAgICAgICAgICAgZm9vdG5vdGVzOiBmaW5kUGFydFJlbGF0ZWRUb01haW5Eb2N1bWVudChcImZvb3Rub3Rlc1wiKSxcbiAgICAgICAgICAgICAgICBudW1iZXJpbmc6IGZpbmRQYXJ0UmVsYXRlZFRvTWFpbkRvY3VtZW50KFwibnVtYmVyaW5nXCIpLFxuICAgICAgICAgICAgICAgIHN0eWxlczogZmluZFBhcnRSZWxhdGVkVG9NYWluRG9jdW1lbnQoXCJzdHlsZXNcIilcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0pO1xuICAgIH0pO1xufVxuXG5mdW5jdGlvbiBmaW5kUGFydFBhdGgob3B0aW9ucykge1xuICAgIHZhciBkb2N4RmlsZSA9IG9wdGlvbnMuZG9jeEZpbGU7XG4gICAgdmFyIHJlbGF0aW9uc2hpcHMgPSBvcHRpb25zLnJlbGF0aW9uc2hpcHM7XG4gICAgdmFyIHJlbGF0aW9uc2hpcFR5cGUgPSBvcHRpb25zLnJlbGF0aW9uc2hpcFR5cGU7XG4gICAgdmFyIGJhc2VQYXRoID0gb3B0aW9ucy5iYXNlUGF0aDtcbiAgICB2YXIgZmFsbGJhY2tQYXRoID0gb3B0aW9ucy5mYWxsYmFja1BhdGg7XG5cbiAgICB2YXIgdGFyZ2V0cyA9IHJlbGF0aW9uc2hpcHMuZmluZFRhcmdldHNCeVR5cGUocmVsYXRpb25zaGlwVHlwZSk7XG4gICAgdmFyIG5vcm1hbGlzZWRUYXJnZXRzID0gdGFyZ2V0cy5tYXAoZnVuY3Rpb24odGFyZ2V0KSB7XG4gICAgICAgIHJldHVybiBzdHJpcFByZWZpeCh6aXBmaWxlLmpvaW5QYXRoKGJhc2VQYXRoLCB0YXJnZXQpLCBcIi9cIik7XG4gICAgfSk7XG4gICAgdmFyIHZhbGlkVGFyZ2V0cyA9IG5vcm1hbGlzZWRUYXJnZXRzLmZpbHRlcihmdW5jdGlvbih0YXJnZXQpIHtcbiAgICAgICAgcmV0dXJuIGRvY3hGaWxlLmV4aXN0cyh0YXJnZXQpO1xuICAgIH0pO1xuICAgIGlmICh2YWxpZFRhcmdldHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHJldHVybiBmYWxsYmFja1BhdGg7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHZhbGlkVGFyZ2V0c1swXTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIHN0cmlwUHJlZml4KHZhbHVlLCBwcmVmaXgpIHtcbiAgICBpZiAodmFsdWUuc3Vic3RyaW5nKDAsIHByZWZpeC5sZW5ndGgpID09PSBwcmVmaXgpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlLnN1YnN0cmluZyhwcmVmaXgubGVuZ3RoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxufVxuXG5mdW5jdGlvbiB4bWxGaWxlUmVhZGVyKG9wdGlvbnMpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24oemlwRmlsZSkge1xuICAgICAgICByZXR1cm4gcmVhZFhtbEZyb21aaXBGaWxlKHppcEZpbGUsIG9wdGlvbnMuZmlsZW5hbWUpXG4gICAgICAgICAgICAudGhlbihmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGVsZW1lbnQgPyBvcHRpb25zLnJlYWRFbGVtZW50KGVsZW1lbnQpIDogb3B0aW9ucy5kZWZhdWx0VmFsdWU7XG4gICAgICAgICAgICB9KTtcbiAgICB9O1xufVxuXG5mdW5jdGlvbiByZWFkWG1sRmlsZVdpdGhCb2R5KGZpbGVuYW1lLCBvcHRpb25zLCBmdW5jKSB7XG4gICAgdmFyIHJlYWRSZWxhdGlvbnNoaXBzRnJvbVppcEZpbGUgPSB4bWxGaWxlUmVhZGVyKHtcbiAgICAgICAgZmlsZW5hbWU6IHJlbGF0aW9uc2hpcHNGaWxlbmFtZShmaWxlbmFtZSksXG4gICAgICAgIHJlYWRFbGVtZW50OiByZWxhdGlvbnNoaXBzUmVhZGVyLnJlYWRSZWxhdGlvbnNoaXBzLFxuICAgICAgICBkZWZhdWx0VmFsdWU6IHJlbGF0aW9uc2hpcHNSZWFkZXIuZGVmYXVsdFZhbHVlXG4gICAgfSk7XG5cbiAgICByZXR1cm4gcmVhZFJlbGF0aW9uc2hpcHNGcm9tWmlwRmlsZShvcHRpb25zLmRvY3hGaWxlKS50aGVuKGZ1bmN0aW9uKHJlbGF0aW9uc2hpcHMpIHtcbiAgICAgICAgdmFyIGJvZHlSZWFkZXIgPSBuZXcgY3JlYXRlQm9keVJlYWRlcih7XG4gICAgICAgICAgICByZWxhdGlvbnNoaXBzOiByZWxhdGlvbnNoaXBzLFxuICAgICAgICAgICAgY29udGVudFR5cGVzOiBvcHRpb25zLmNvbnRlbnRUeXBlcyxcbiAgICAgICAgICAgIGRvY3hGaWxlOiBvcHRpb25zLmRvY3hGaWxlLFxuICAgICAgICAgICAgbnVtYmVyaW5nOiBvcHRpb25zLm51bWJlcmluZyxcbiAgICAgICAgICAgIHN0eWxlczogb3B0aW9ucy5zdHlsZXMsXG4gICAgICAgICAgICBmaWxlczogb3B0aW9ucy5maWxlc1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHJlYWRYbWxGcm9tWmlwRmlsZShvcHRpb25zLmRvY3hGaWxlLCBmaWxlbmFtZSlcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uKHhtbCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmdW5jKGJvZHlSZWFkZXIsIHhtbCk7XG4gICAgICAgICAgICB9KTtcbiAgICB9KTtcbn1cblxuZnVuY3Rpb24gcmVsYXRpb25zaGlwc0ZpbGVuYW1lKGZpbGVuYW1lKSB7XG4gICAgdmFyIHNwbGl0ID0gemlwZmlsZS5zcGxpdFBhdGgoZmlsZW5hbWUpO1xuICAgIHJldHVybiB6aXBmaWxlLmpvaW5QYXRoKHNwbGl0LmRpcm5hbWUsIFwiX3JlbHNcIiwgc3BsaXQuYmFzZW5hbWUgKyBcIi5yZWxzXCIpO1xufVxuXG52YXIgcmVhZENvbnRlbnRUeXBlc0Zyb21aaXBGaWxlID0geG1sRmlsZVJlYWRlcih7XG4gICAgZmlsZW5hbWU6IFwiW0NvbnRlbnRfVHlwZXNdLnhtbFwiLFxuICAgIHJlYWRFbGVtZW50OiBjb250ZW50VHlwZXNSZWFkZXIucmVhZENvbnRlbnRUeXBlc0Zyb21YbWwsXG4gICAgZGVmYXVsdFZhbHVlOiBjb250ZW50VHlwZXNSZWFkZXIuZGVmYXVsdENvbnRlbnRUeXBlc1xufSk7XG5cbmZ1bmN0aW9uIHJlYWROdW1iZXJpbmdGcm9tWmlwRmlsZSh6aXBGaWxlLCBwYXRoLCBzdHlsZXMpIHtcbiAgICByZXR1cm4geG1sRmlsZVJlYWRlcih7XG4gICAgICAgIGZpbGVuYW1lOiBwYXRoLFxuICAgICAgICByZWFkRWxlbWVudDogZnVuY3Rpb24oZWxlbWVudCkge1xuICAgICAgICAgICAgcmV0dXJuIG51bWJlcmluZ1htbC5yZWFkTnVtYmVyaW5nWG1sKGVsZW1lbnQsIHtzdHlsZXM6IHN0eWxlc30pO1xuICAgICAgICB9LFxuICAgICAgICBkZWZhdWx0VmFsdWU6IG51bWJlcmluZ1htbC5kZWZhdWx0TnVtYmVyaW5nXG4gICAgfSkoemlwRmlsZSk7XG59XG5cbmZ1bmN0aW9uIHJlYWRTdHlsZXNGcm9tWmlwRmlsZSh6aXBGaWxlLCBwYXRoKSB7XG4gICAgcmV0dXJuIHhtbEZpbGVSZWFkZXIoe1xuICAgICAgICBmaWxlbmFtZTogcGF0aCxcbiAgICAgICAgcmVhZEVsZW1lbnQ6IHN0eWxlc1JlYWRlci5yZWFkU3R5bGVzWG1sLFxuICAgICAgICBkZWZhdWx0VmFsdWU6IHN0eWxlc1JlYWRlci5kZWZhdWx0U3R5bGVzXG4gICAgfSkoemlwRmlsZSk7XG59XG5cbnZhciByZWFkUGFja2FnZVJlbGF0aW9uc2hpcHMgPSB4bWxGaWxlUmVhZGVyKHtcbiAgICBmaWxlbmFtZTogXCJfcmVscy8ucmVsc1wiLFxuICAgIHJlYWRFbGVtZW50OiByZWxhdGlvbnNoaXBzUmVhZGVyLnJlYWRSZWxhdGlvbnNoaXBzLFxuICAgIGRlZmF1bHRWYWx1ZTogcmVsYXRpb25zaGlwc1JlYWRlci5kZWZhdWx0VmFsdWVcbn0pO1xuIl0sIm5hbWVzIjpbImV4cG9ydHMiLCJyZWFkIiwiX2ZpbmRQYXJ0UGF0aHMiLCJmaW5kUGFydFBhdGhzIiwicHJvbWlzZXMiLCJyZXF1aXJlIiwiZG9jdW1lbnRzIiwiUmVzdWx0IiwiemlwZmlsZSIsInJlYWRYbWxGcm9tWmlwRmlsZSIsImNyZWF0ZUJvZHlSZWFkZXIiLCJEb2N1bWVudFhtbFJlYWRlciIsInJlbGF0aW9uc2hpcHNSZWFkZXIiLCJjb250ZW50VHlwZXNSZWFkZXIiLCJudW1iZXJpbmdYbWwiLCJzdHlsZXNSZWFkZXIiLCJub3Rlc1JlYWRlciIsImNvbW1lbnRzUmVhZGVyIiwiRmlsZXMiLCJkb2N4RmlsZSIsImlucHV0IiwicHJvcHMiLCJjb250ZW50VHlwZXMiLCJyZWFkQ29udGVudFR5cGVzRnJvbVppcEZpbGUiLCJwYXJ0UGF0aHMiLCJmaWxlcyIsInBhdGgiLCJyZWxhdGl2ZVRvRmlsZSIsImFsc28iLCJyZXN1bHQiLCJzdHlsZXMiLCJyZWFkU3R5bGVzRnJvbVppcEZpbGUiLCJudW1iZXJpbmciLCJyZWFkTnVtYmVyaW5nRnJvbVppcEZpbGUiLCJmb290bm90ZXMiLCJyZWFkWG1sRmlsZVdpdGhCb2R5IiwiYm9keVJlYWRlciIsInhtbCIsImNyZWF0ZUZvb3Rub3Rlc1JlYWRlciIsImVuZG5vdGVzIiwiY3JlYXRlRW5kbm90ZXNSZWFkZXIiLCJjb21tZW50cyIsImNyZWF0ZUNvbW1lbnRzUmVhZGVyIiwibm90ZXMiLCJmbGF0TWFwIiwibWFwIiwiTm90ZXMiLCJjb25jYXQiLCJ0aGVuIiwibWFpbkRvY3VtZW50IiwicmVhZGVyIiwiY29udmVydFhtbFRvRG9jdW1lbnQiLCJyZWFkUGFja2FnZVJlbGF0aW9uc2hpcHMiLCJwYWNrYWdlUmVsYXRpb25zaGlwcyIsIm1haW5Eb2N1bWVudFBhdGgiLCJmaW5kUGFydFBhdGgiLCJyZWxhdGlvbnNoaXBzIiwicmVsYXRpb25zaGlwVHlwZSIsImJhc2VQYXRoIiwiZmFsbGJhY2tQYXRoIiwiZXhpc3RzIiwiRXJyb3IiLCJ4bWxGaWxlUmVhZGVyIiwiZmlsZW5hbWUiLCJyZWxhdGlvbnNoaXBzRmlsZW5hbWUiLCJyZWFkRWxlbWVudCIsInJlYWRSZWxhdGlvbnNoaXBzIiwiZGVmYXVsdFZhbHVlIiwiZG9jdW1lbnRSZWxhdGlvbnNoaXBzIiwiZmluZFBhcnRSZWxhdGVkVG9NYWluRG9jdW1lbnQiLCJuYW1lIiwic3BsaXRQYXRoIiwiZGlybmFtZSIsIm9wdGlvbnMiLCJ0YXJnZXRzIiwiZmluZFRhcmdldHNCeVR5cGUiLCJub3JtYWxpc2VkVGFyZ2V0cyIsInRhcmdldCIsInN0cmlwUHJlZml4Iiwiam9pblBhdGgiLCJ2YWxpZFRhcmdldHMiLCJmaWx0ZXIiLCJsZW5ndGgiLCJ2YWx1ZSIsInByZWZpeCIsInN1YnN0cmluZyIsInppcEZpbGUiLCJlbGVtZW50IiwiZnVuYyIsInJlYWRSZWxhdGlvbnNoaXBzRnJvbVppcEZpbGUiLCJzcGxpdCIsImJhc2VuYW1lIiwicmVhZENvbnRlbnRUeXBlc0Zyb21YbWwiLCJkZWZhdWx0Q29udGVudFR5cGVzIiwicmVhZE51bWJlcmluZ1htbCIsImRlZmF1bHROdW1iZXJpbmciLCJyZWFkU3R5bGVzWG1sIiwiZGVmYXVsdFN0eWxlcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mammoth/lib/docx/docx-reader.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mammoth/lib/docx/files.js":
/*!************************************************!*\
  !*** ./node_modules/mammoth/lib/docx/files.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var fs = __webpack_require__(/*! fs */ \"fs\");\nvar url = __webpack_require__(/*! url */ \"url\");\nvar os = __webpack_require__(/*! os */ \"os\");\nvar dirname = (__webpack_require__(/*! path */ \"path\").dirname);\nvar resolvePath = (__webpack_require__(/*! path */ \"path\").resolve);\nvar isAbsolutePath = __webpack_require__(/*! path-is-absolute */ \"(rsc)/./node_modules/path-is-absolute/index.js\");\nvar promises = __webpack_require__(/*! ../promises */ \"(rsc)/./node_modules/mammoth/lib/promises.js\");\nexports.Files = Files;\nexports.uriToPath = uriToPath;\nfunction Files(base) {\n    function read(uri, encoding) {\n        return resolveUri(uri).then(function(path) {\n            return readFile(path, encoding).caught(function(error) {\n                var message = \"could not open external image: '\" + uri + \"' (document directory: '\" + base + \"')\\n\" + error.message;\n                return promises.reject(new Error(message));\n            });\n        });\n    }\n    function resolveUri(uri) {\n        var path = uriToPath(uri);\n        if (isAbsolutePath(path)) {\n            return promises.resolve(path);\n        } else if (base) {\n            return promises.resolve(resolvePath(base, path));\n        } else {\n            return promises.reject(new Error(\"could not find external image '\" + uri + \"', path of input document is unknown\"));\n        }\n    }\n    return {\n        read: read\n    };\n}\nfunction relativeToFile(filePath) {\n    return new Files(dirname(filePath));\n}\nFiles.relativeToFile = relativeToFile;\nvar readFile = promises.promisify(fs.readFile.bind(fs));\nfunction uriToPath(uriString, platform) {\n    if (!platform) {\n        platform = os.platform();\n    }\n    var uri = url.parse(uriString);\n    if (isLocalFileUri(uri) || isRelativeUri(uri)) {\n        var path = decodeURIComponent(uri.path);\n        if (platform === \"win32\" && /^\\/[a-z]:/i.test(path)) {\n            return path.slice(1);\n        } else {\n            return path;\n        }\n    } else {\n        throw new Error(\"Could not convert URI to path: \" + uriString);\n    }\n}\nfunction isLocalFileUri(uri) {\n    return uri.protocol === \"file:\" && (!uri.host || uri.host === \"localhost\");\n}\nfunction isRelativeUri(uri) {\n    return !uri.protocol && !uri.host;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvZG9jeC9maWxlcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxLQUFLQyxtQkFBT0EsQ0FBQyxjQUFJO0FBQ3JCLElBQUlDLE1BQU1ELG1CQUFPQSxDQUFDLGdCQUFLO0FBQ3ZCLElBQUlFLEtBQUtGLG1CQUFPQSxDQUFDLGNBQUk7QUFDckIsSUFBSUcsVUFBVUgsaURBQXVCO0FBQ3JDLElBQUlJLGNBQWNKLGlEQUF1QjtBQUN6QyxJQUFJTSxpQkFBaUJOLG1CQUFPQSxDQUFDO0FBRTdCLElBQUlPLFdBQVdQLG1CQUFPQSxDQUFDLGlFQUFhO0FBR3BDUSxhQUFhLEdBQUdDO0FBQ2hCRCxpQkFBaUIsR0FBR0U7QUFHcEIsU0FBU0QsTUFBTUUsSUFBSTtJQUNmLFNBQVNDLEtBQUtDLEdBQUcsRUFBRUMsUUFBUTtRQUN2QixPQUFPQyxXQUFXRixLQUFLRyxJQUFJLENBQUMsU0FBU0MsSUFBSTtZQUNyQyxPQUFPQyxTQUFTRCxNQUFNSCxVQUFVSyxNQUFNLENBQUMsU0FBU0MsS0FBSztnQkFDakQsSUFBSUMsVUFBVSxxQ0FBcUNSLE1BQU0sNkJBQTZCRixPQUFPLFNBQVNTLE1BQU1DLE9BQU87Z0JBQ25ILE9BQU9kLFNBQVNlLE1BQU0sQ0FBQyxJQUFJQyxNQUFNRjtZQUNyQztRQUNKO0lBQ0o7SUFFQSxTQUFTTixXQUFXRixHQUFHO1FBQ25CLElBQUlJLE9BQU9QLFVBQVVHO1FBQ3JCLElBQUlQLGVBQWVXLE9BQU87WUFDdEIsT0FBT1YsU0FBU0YsT0FBTyxDQUFDWTtRQUM1QixPQUFPLElBQUlOLE1BQU07WUFDYixPQUFPSixTQUFTRixPQUFPLENBQUNELFlBQVlPLE1BQU1NO1FBQzlDLE9BQU87WUFDSCxPQUFPVixTQUFTZSxNQUFNLENBQUMsSUFBSUMsTUFBTSxvQ0FBb0NWLE1BQU07UUFDL0U7SUFDSjtJQUVBLE9BQU87UUFDSEQsTUFBTUE7SUFDVjtBQUNKO0FBR0EsU0FBU1ksZUFBZUMsUUFBUTtJQUM1QixPQUFPLElBQUloQixNQUFNTixRQUFRc0I7QUFDN0I7QUFFQWhCLE1BQU1lLGNBQWMsR0FBR0E7QUFHdkIsSUFBSU4sV0FBV1gsU0FBU21CLFNBQVMsQ0FBQzNCLEdBQUdtQixRQUFRLENBQUNTLElBQUksQ0FBQzVCO0FBR25ELFNBQVNXLFVBQVVrQixTQUFTLEVBQUVDLFFBQVE7SUFDbEMsSUFBSSxDQUFDQSxVQUFVO1FBQ1hBLFdBQVczQixHQUFHMkIsUUFBUTtJQUMxQjtJQUVBLElBQUloQixNQUFNWixJQUFJNkIsS0FBSyxDQUFDRjtJQUNwQixJQUFJRyxlQUFlbEIsUUFBUW1CLGNBQWNuQixNQUFNO1FBQzNDLElBQUlJLE9BQU9nQixtQkFBbUJwQixJQUFJSSxJQUFJO1FBQ3RDLElBQUlZLGFBQWEsV0FBVyxhQUFhSyxJQUFJLENBQUNqQixPQUFPO1lBQ2pELE9BQU9BLEtBQUtrQixLQUFLLENBQUM7UUFDdEIsT0FBTztZQUNILE9BQU9sQjtRQUNYO0lBQ0osT0FBTztRQUNILE1BQU0sSUFBSU0sTUFBTSxvQ0FBb0NLO0lBQ3hEO0FBQ0o7QUFFQSxTQUFTRyxlQUFlbEIsR0FBRztJQUN2QixPQUFPQSxJQUFJdUIsUUFBUSxLQUFLLFdBQVksRUFBQ3ZCLElBQUl3QixJQUFJLElBQUl4QixJQUFJd0IsSUFBSSxLQUFLLFdBQVU7QUFDNUU7QUFFQSxTQUFTTCxjQUFjbkIsR0FBRztJQUN0QixPQUFPLENBQUNBLElBQUl1QixRQUFRLElBQUksQ0FBQ3ZCLElBQUl3QixJQUFJO0FBQ3JDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdW1lYnVpbGRlci1haS8uL25vZGVfbW9kdWxlcy9tYW1tb3RoL2xpYi9kb2N4L2ZpbGVzLmpzPzY5OWMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGZzID0gcmVxdWlyZShcImZzXCIpO1xudmFyIHVybCA9IHJlcXVpcmUoXCJ1cmxcIik7XG52YXIgb3MgPSByZXF1aXJlKFwib3NcIik7XG52YXIgZGlybmFtZSA9IHJlcXVpcmUoXCJwYXRoXCIpLmRpcm5hbWU7XG52YXIgcmVzb2x2ZVBhdGggPSByZXF1aXJlKFwicGF0aFwiKS5yZXNvbHZlO1xudmFyIGlzQWJzb2x1dGVQYXRoID0gcmVxdWlyZSgncGF0aC1pcy1hYnNvbHV0ZScpO1xuXG52YXIgcHJvbWlzZXMgPSByZXF1aXJlKFwiLi4vcHJvbWlzZXNcIik7XG5cblxuZXhwb3J0cy5GaWxlcyA9IEZpbGVzO1xuZXhwb3J0cy51cmlUb1BhdGggPSB1cmlUb1BhdGg7XG5cblxuZnVuY3Rpb24gRmlsZXMoYmFzZSkge1xuICAgIGZ1bmN0aW9uIHJlYWQodXJpLCBlbmNvZGluZykge1xuICAgICAgICByZXR1cm4gcmVzb2x2ZVVyaSh1cmkpLnRoZW4oZnVuY3Rpb24ocGF0aCkge1xuICAgICAgICAgICAgcmV0dXJuIHJlYWRGaWxlKHBhdGgsIGVuY29kaW5nKS5jYXVnaHQoZnVuY3Rpb24oZXJyb3IpIHtcbiAgICAgICAgICAgICAgICB2YXIgbWVzc2FnZSA9IFwiY291bGQgbm90IG9wZW4gZXh0ZXJuYWwgaW1hZ2U6ICdcIiArIHVyaSArIFwiJyAoZG9jdW1lbnQgZGlyZWN0b3J5OiAnXCIgKyBiYXNlICsgXCInKVxcblwiICsgZXJyb3IubWVzc2FnZTtcbiAgICAgICAgICAgICAgICByZXR1cm4gcHJvbWlzZXMucmVqZWN0KG5ldyBFcnJvcihtZXNzYWdlKSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcmVzb2x2ZVVyaSh1cmkpIHtcbiAgICAgICAgdmFyIHBhdGggPSB1cmlUb1BhdGgodXJpKTtcbiAgICAgICAgaWYgKGlzQWJzb2x1dGVQYXRoKHBhdGgpKSB7XG4gICAgICAgICAgICByZXR1cm4gcHJvbWlzZXMucmVzb2x2ZShwYXRoKTtcbiAgICAgICAgfSBlbHNlIGlmIChiYXNlKSB7XG4gICAgICAgICAgICByZXR1cm4gcHJvbWlzZXMucmVzb2x2ZShyZXNvbHZlUGF0aChiYXNlLCBwYXRoKSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gcHJvbWlzZXMucmVqZWN0KG5ldyBFcnJvcihcImNvdWxkIG5vdCBmaW5kIGV4dGVybmFsIGltYWdlICdcIiArIHVyaSArIFwiJywgcGF0aCBvZiBpbnB1dCBkb2N1bWVudCBpcyB1bmtub3duXCIpKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICAgIHJlYWQ6IHJlYWRcbiAgICB9O1xufVxuXG5cbmZ1bmN0aW9uIHJlbGF0aXZlVG9GaWxlKGZpbGVQYXRoKSB7XG4gICAgcmV0dXJuIG5ldyBGaWxlcyhkaXJuYW1lKGZpbGVQYXRoKSk7XG59XG5cbkZpbGVzLnJlbGF0aXZlVG9GaWxlID0gcmVsYXRpdmVUb0ZpbGU7XG5cblxudmFyIHJlYWRGaWxlID0gcHJvbWlzZXMucHJvbWlzaWZ5KGZzLnJlYWRGaWxlLmJpbmQoZnMpKTtcblxuXG5mdW5jdGlvbiB1cmlUb1BhdGgodXJpU3RyaW5nLCBwbGF0Zm9ybSkge1xuICAgIGlmICghcGxhdGZvcm0pIHtcbiAgICAgICAgcGxhdGZvcm0gPSBvcy5wbGF0Zm9ybSgpO1xuICAgIH1cblxuICAgIHZhciB1cmkgPSB1cmwucGFyc2UodXJpU3RyaW5nKTtcbiAgICBpZiAoaXNMb2NhbEZpbGVVcmkodXJpKSB8fCBpc1JlbGF0aXZlVXJpKHVyaSkpIHtcbiAgICAgICAgdmFyIHBhdGggPSBkZWNvZGVVUklDb21wb25lbnQodXJpLnBhdGgpO1xuICAgICAgICBpZiAocGxhdGZvcm0gPT09IFwid2luMzJcIiAmJiAvXlxcL1thLXpdOi9pLnRlc3QocGF0aCkpIHtcbiAgICAgICAgICAgIHJldHVybiBwYXRoLnNsaWNlKDEpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHBhdGg7XG4gICAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZCBub3QgY29udmVydCBVUkkgdG8gcGF0aDogXCIgKyB1cmlTdHJpbmcpO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gaXNMb2NhbEZpbGVVcmkodXJpKSB7XG4gICAgcmV0dXJuIHVyaS5wcm90b2NvbCA9PT0gXCJmaWxlOlwiICYmICghdXJpLmhvc3QgfHwgdXJpLmhvc3QgPT09IFwibG9jYWxob3N0XCIpO1xufVxuXG5mdW5jdGlvbiBpc1JlbGF0aXZlVXJpKHVyaSkge1xuICAgIHJldHVybiAhdXJpLnByb3RvY29sICYmICF1cmkuaG9zdDtcbn1cbiJdLCJuYW1lcyI6WyJmcyIsInJlcXVpcmUiLCJ1cmwiLCJvcyIsImRpcm5hbWUiLCJyZXNvbHZlUGF0aCIsInJlc29sdmUiLCJpc0Fic29sdXRlUGF0aCIsInByb21pc2VzIiwiZXhwb3J0cyIsIkZpbGVzIiwidXJpVG9QYXRoIiwiYmFzZSIsInJlYWQiLCJ1cmkiLCJlbmNvZGluZyIsInJlc29sdmVVcmkiLCJ0aGVuIiwicGF0aCIsInJlYWRGaWxlIiwiY2F1Z2h0IiwiZXJyb3IiLCJtZXNzYWdlIiwicmVqZWN0IiwiRXJyb3IiLCJyZWxhdGl2ZVRvRmlsZSIsImZpbGVQYXRoIiwicHJvbWlzaWZ5IiwiYmluZCIsInVyaVN0cmluZyIsInBsYXRmb3JtIiwicGFyc2UiLCJpc0xvY2FsRmlsZVVyaSIsImlzUmVsYXRpdmVVcmkiLCJkZWNvZGVVUklDb21wb25lbnQiLCJ0ZXN0Iiwic2xpY2UiLCJwcm90b2NvbCIsImhvc3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mammoth/lib/docx/files.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mammoth/lib/docx/notes-reader.js":
/*!*******************************************************!*\
  !*** ./node_modules/mammoth/lib/docx/notes-reader.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("var documents = __webpack_require__(/*! ../documents */ \"(rsc)/./node_modules/mammoth/lib/documents.js\");\nvar Result = (__webpack_require__(/*! ../results */ \"(rsc)/./node_modules/mammoth/lib/results.js\").Result);\nexports.createFootnotesReader = createReader.bind(this, \"footnote\");\nexports.createEndnotesReader = createReader.bind(this, \"endnote\");\nfunction createReader(noteType, bodyReader) {\n    function readNotesXml(element) {\n        return Result.combine(element.getElementsByTagName(\"w:\" + noteType).filter(isFootnoteElement).map(readFootnoteElement));\n    }\n    function isFootnoteElement(element) {\n        var type = element.attributes[\"w:type\"];\n        return type !== \"continuationSeparator\" && type !== \"separator\";\n    }\n    function readFootnoteElement(footnoteElement) {\n        var id = footnoteElement.attributes[\"w:id\"];\n        return bodyReader.readXmlElements(footnoteElement.children).map(function(body) {\n            return documents.Note({\n                noteType: noteType,\n                noteId: id,\n                body: body\n            });\n        });\n    }\n    return readNotesXml;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvZG9jeC9ub3Rlcy1yZWFkZXIuanMiLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsWUFBWUMsbUJBQU9BLENBQUMsbUVBQWM7QUFDdEMsSUFBSUMsU0FBU0QsNkZBQTRCO0FBRXpDRSw2QkFBNkIsR0FBR0UsYUFBYUMsSUFBSSxDQUFDLElBQUksRUFBRTtBQUN4REgsNEJBQTRCLEdBQUdFLGFBQWFDLElBQUksQ0FBQyxJQUFJLEVBQUU7QUFFdkQsU0FBU0QsYUFBYUcsUUFBUSxFQUFFQyxVQUFVO0lBQ3RDLFNBQVNDLGFBQWFDLE9BQU87UUFDekIsT0FBT1QsT0FBT1UsT0FBTyxDQUFDRCxRQUFRRSxvQkFBb0IsQ0FBQyxPQUFPTCxVQUNyRE0sTUFBTSxDQUFDQyxtQkFDUEMsR0FBRyxDQUFDQztJQUNiO0lBRUEsU0FBU0Ysa0JBQWtCSixPQUFPO1FBQzlCLElBQUlPLE9BQU9QLFFBQVFRLFVBQVUsQ0FBQyxTQUFTO1FBQ3ZDLE9BQU9ELFNBQVMsMkJBQTJCQSxTQUFTO0lBQ3hEO0lBRUEsU0FBU0Qsb0JBQW9CRyxlQUFlO1FBQ3hDLElBQUlDLEtBQUtELGdCQUFnQkQsVUFBVSxDQUFDLE9BQU87UUFDM0MsT0FBT1YsV0FBV2EsZUFBZSxDQUFDRixnQkFBZ0JHLFFBQVEsRUFDckRQLEdBQUcsQ0FBQyxTQUFTUSxJQUFJO1lBQ2QsT0FBT3hCLFVBQVV5QixJQUFJLENBQUM7Z0JBQUNqQixVQUFVQTtnQkFBVWtCLFFBQVFMO2dCQUFJRyxNQUFNQTtZQUFJO1FBQ3JFO0lBQ1I7SUFFQSxPQUFPZDtBQUNYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdW1lYnVpbGRlci1haS8uL25vZGVfbW9kdWxlcy9tYW1tb3RoL2xpYi9kb2N4L25vdGVzLXJlYWRlci5qcz9mM2MzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBkb2N1bWVudHMgPSByZXF1aXJlKFwiLi4vZG9jdW1lbnRzXCIpO1xudmFyIFJlc3VsdCA9IHJlcXVpcmUoXCIuLi9yZXN1bHRzXCIpLlJlc3VsdDtcblxuZXhwb3J0cy5jcmVhdGVGb290bm90ZXNSZWFkZXIgPSBjcmVhdGVSZWFkZXIuYmluZCh0aGlzLCBcImZvb3Rub3RlXCIpO1xuZXhwb3J0cy5jcmVhdGVFbmRub3Rlc1JlYWRlciA9IGNyZWF0ZVJlYWRlci5iaW5kKHRoaXMsIFwiZW5kbm90ZVwiKTtcblxuZnVuY3Rpb24gY3JlYXRlUmVhZGVyKG5vdGVUeXBlLCBib2R5UmVhZGVyKSB7XG4gICAgZnVuY3Rpb24gcmVhZE5vdGVzWG1sKGVsZW1lbnQpIHtcbiAgICAgICAgcmV0dXJuIFJlc3VsdC5jb21iaW5lKGVsZW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJ3OlwiICsgbm90ZVR5cGUpXG4gICAgICAgICAgICAuZmlsdGVyKGlzRm9vdG5vdGVFbGVtZW50KVxuICAgICAgICAgICAgLm1hcChyZWFkRm9vdG5vdGVFbGVtZW50KSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaXNGb290bm90ZUVsZW1lbnQoZWxlbWVudCkge1xuICAgICAgICB2YXIgdHlwZSA9IGVsZW1lbnQuYXR0cmlidXRlc1tcInc6dHlwZVwiXTtcbiAgICAgICAgcmV0dXJuIHR5cGUgIT09IFwiY29udGludWF0aW9uU2VwYXJhdG9yXCIgJiYgdHlwZSAhPT0gXCJzZXBhcmF0b3JcIjtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiByZWFkRm9vdG5vdGVFbGVtZW50KGZvb3Rub3RlRWxlbWVudCkge1xuICAgICAgICB2YXIgaWQgPSBmb290bm90ZUVsZW1lbnQuYXR0cmlidXRlc1tcInc6aWRcIl07XG4gICAgICAgIHJldHVybiBib2R5UmVhZGVyLnJlYWRYbWxFbGVtZW50cyhmb290bm90ZUVsZW1lbnQuY2hpbGRyZW4pXG4gICAgICAgICAgICAubWFwKGZ1bmN0aW9uKGJvZHkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZG9jdW1lbnRzLk5vdGUoe25vdGVUeXBlOiBub3RlVHlwZSwgbm90ZUlkOiBpZCwgYm9keTogYm9keX0pO1xuICAgICAgICAgICAgfSk7XG4gICAgfVxuICAgIFxuICAgIHJldHVybiByZWFkTm90ZXNYbWw7XG59XG4iXSwibmFtZXMiOlsiZG9jdW1lbnRzIiwicmVxdWlyZSIsIlJlc3VsdCIsImV4cG9ydHMiLCJjcmVhdGVGb290bm90ZXNSZWFkZXIiLCJjcmVhdGVSZWFkZXIiLCJiaW5kIiwiY3JlYXRlRW5kbm90ZXNSZWFkZXIiLCJub3RlVHlwZSIsImJvZHlSZWFkZXIiLCJyZWFkTm90ZXNYbWwiLCJlbGVtZW50IiwiY29tYmluZSIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwiZmlsdGVyIiwiaXNGb290bm90ZUVsZW1lbnQiLCJtYXAiLCJyZWFkRm9vdG5vdGVFbGVtZW50IiwidHlwZSIsImF0dHJpYnV0ZXMiLCJmb290bm90ZUVsZW1lbnQiLCJpZCIsInJlYWRYbWxFbGVtZW50cyIsImNoaWxkcmVuIiwiYm9keSIsIk5vdGUiLCJub3RlSWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mammoth/lib/docx/notes-reader.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mammoth/lib/docx/numbering-xml.js":
/*!********************************************************!*\
  !*** ./node_modules/mammoth/lib/docx/numbering-xml.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var _ = __webpack_require__(/*! underscore */ \"(rsc)/./node_modules/underscore/modules/index-all.js\");\nexports.readNumberingXml = readNumberingXml;\nexports.Numbering = Numbering;\nexports.defaultNumbering = new Numbering({}, {});\nfunction Numbering(nums, abstractNums, styles) {\n    var allLevels = _.flatten(_.values(abstractNums).map(function(abstractNum) {\n        return _.values(abstractNum.levels);\n    }));\n    var levelsByParagraphStyleId = _.indexBy(allLevels.filter(function(level) {\n        return level.paragraphStyleId != null;\n    }), \"paragraphStyleId\");\n    function findLevel(numId, level) {\n        var num = nums[numId];\n        if (num) {\n            var abstractNum = abstractNums[num.abstractNumId];\n            if (!abstractNum) {\n                return null;\n            } else if (abstractNum.numStyleLink == null) {\n                return abstractNums[num.abstractNumId].levels[level];\n            } else {\n                var style = styles.findNumberingStyleById(abstractNum.numStyleLink);\n                return findLevel(style.numId, level);\n            }\n        } else {\n            return null;\n        }\n    }\n    function findLevelByParagraphStyleId(styleId) {\n        return levelsByParagraphStyleId[styleId] || null;\n    }\n    return {\n        findLevel: findLevel,\n        findLevelByParagraphStyleId: findLevelByParagraphStyleId\n    };\n}\nfunction readNumberingXml(root, options) {\n    if (!options || !options.styles) {\n        throw new Error(\"styles is missing\");\n    }\n    var abstractNums = readAbstractNums(root);\n    var nums = readNums(root, abstractNums);\n    return new Numbering(nums, abstractNums, options.styles);\n}\nfunction readAbstractNums(root) {\n    var abstractNums = {};\n    root.getElementsByTagName(\"w:abstractNum\").forEach(function(element) {\n        var id = element.attributes[\"w:abstractNumId\"];\n        abstractNums[id] = readAbstractNum(element);\n    });\n    return abstractNums;\n}\nfunction readAbstractNum(element) {\n    var levels = {};\n    element.getElementsByTagName(\"w:lvl\").forEach(function(levelElement) {\n        var levelIndex = levelElement.attributes[\"w:ilvl\"];\n        var numFmt = levelElement.firstOrEmpty(\"w:numFmt\").attributes[\"w:val\"];\n        var paragraphStyleId = levelElement.firstOrEmpty(\"w:pStyle\").attributes[\"w:val\"];\n        levels[levelIndex] = {\n            isOrdered: numFmt !== \"bullet\",\n            level: levelIndex,\n            paragraphStyleId: paragraphStyleId\n        };\n    });\n    var numStyleLink = element.firstOrEmpty(\"w:numStyleLink\").attributes[\"w:val\"];\n    return {\n        levels: levels,\n        numStyleLink: numStyleLink\n    };\n}\nfunction readNums(root) {\n    var nums = {};\n    root.getElementsByTagName(\"w:num\").forEach(function(element) {\n        var numId = element.attributes[\"w:numId\"];\n        var abstractNumId = element.first(\"w:abstractNumId\").attributes[\"w:val\"];\n        nums[numId] = {\n            abstractNumId: abstractNumId\n        };\n    });\n    return nums;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvZG9jeC9udW1iZXJpbmcteG1sLmpzIiwibWFwcGluZ3MiOiJBQUFBLElBQUlBLElBQUlDLG1CQUFPQSxDQUFDLHdFQUFZO0FBRTVCQyx3QkFBd0IsR0FBR0M7QUFDM0JELGlCQUFpQixHQUFHRTtBQUNwQkYsd0JBQXdCLEdBQUcsSUFBSUUsVUFBVSxDQUFDLEdBQUcsQ0FBQztBQUU5QyxTQUFTQSxVQUFVRSxJQUFJLEVBQUVDLFlBQVksRUFBRUMsTUFBTTtJQUN6QyxJQUFJQyxZQUFZVCxFQUFFVSxPQUFPLENBQUNWLEVBQUVXLE1BQU0sQ0FBQ0osY0FBY0ssR0FBRyxDQUFDLFNBQVNDLFdBQVc7UUFDckUsT0FBT2IsRUFBRVcsTUFBTSxDQUFDRSxZQUFZQyxNQUFNO0lBQ3RDO0lBRUEsSUFBSUMsMkJBQTJCZixFQUFFZ0IsT0FBTyxDQUNwQ1AsVUFBVVEsTUFBTSxDQUFDLFNBQVNDLEtBQUs7UUFDM0IsT0FBT0EsTUFBTUMsZ0JBQWdCLElBQUk7SUFDckMsSUFDQTtJQUdKLFNBQVNDLFVBQVVDLEtBQUssRUFBRUgsS0FBSztRQUMzQixJQUFJSSxNQUFNaEIsSUFBSSxDQUFDZSxNQUFNO1FBQ3JCLElBQUlDLEtBQUs7WUFDTCxJQUFJVCxjQUFjTixZQUFZLENBQUNlLElBQUlDLGFBQWEsQ0FBQztZQUNqRCxJQUFJLENBQUNWLGFBQWE7Z0JBQ2QsT0FBTztZQUNYLE9BQU8sSUFBSUEsWUFBWVcsWUFBWSxJQUFJLE1BQU07Z0JBQ3pDLE9BQU9qQixZQUFZLENBQUNlLElBQUlDLGFBQWEsQ0FBQyxDQUFDVCxNQUFNLENBQUNJLE1BQU07WUFDeEQsT0FBTztnQkFDSCxJQUFJTyxRQUFRakIsT0FBT2tCLHNCQUFzQixDQUFDYixZQUFZVyxZQUFZO2dCQUNsRSxPQUFPSixVQUFVSyxNQUFNSixLQUFLLEVBQUVIO1lBQ2xDO1FBQ0osT0FBTztZQUNILE9BQU87UUFDWDtJQUNKO0lBRUEsU0FBU1MsNEJBQTRCQyxPQUFPO1FBQ3hDLE9BQU9iLHdCQUF3QixDQUFDYSxRQUFRLElBQUk7SUFDaEQ7SUFFQSxPQUFPO1FBQ0hSLFdBQVdBO1FBQ1hPLDZCQUE2QkE7SUFDakM7QUFDSjtBQUVBLFNBQVN4QixpQkFBaUIwQixJQUFJLEVBQUVDLE9BQU87SUFDbkMsSUFBSSxDQUFDQSxXQUFXLENBQUNBLFFBQVF0QixNQUFNLEVBQUU7UUFDN0IsTUFBTSxJQUFJdUIsTUFBTTtJQUNwQjtJQUVBLElBQUl4QixlQUFleUIsaUJBQWlCSDtJQUNwQyxJQUFJdkIsT0FBTzJCLFNBQVNKLE1BQU10QjtJQUMxQixPQUFPLElBQUlILFVBQVVFLE1BQU1DLGNBQWN1QixRQUFRdEIsTUFBTTtBQUMzRDtBQUVBLFNBQVN3QixpQkFBaUJILElBQUk7SUFDMUIsSUFBSXRCLGVBQWUsQ0FBQztJQUNwQnNCLEtBQUtLLG9CQUFvQixDQUFDLGlCQUFpQkMsT0FBTyxDQUFDLFNBQVNDLE9BQU87UUFDL0QsSUFBSUMsS0FBS0QsUUFBUUUsVUFBVSxDQUFDLGtCQUFrQjtRQUM5Qy9CLFlBQVksQ0FBQzhCLEdBQUcsR0FBR0UsZ0JBQWdCSDtJQUN2QztJQUNBLE9BQU83QjtBQUNYO0FBRUEsU0FBU2dDLGdCQUFnQkgsT0FBTztJQUM1QixJQUFJdEIsU0FBUyxDQUFDO0lBQ2RzQixRQUFRRixvQkFBb0IsQ0FBQyxTQUFTQyxPQUFPLENBQUMsU0FBU0ssWUFBWTtRQUMvRCxJQUFJQyxhQUFhRCxhQUFhRixVQUFVLENBQUMsU0FBUztRQUNsRCxJQUFJSSxTQUFTRixhQUFhRyxZQUFZLENBQUMsWUFBWUwsVUFBVSxDQUFDLFFBQVE7UUFDdEUsSUFBSW5CLG1CQUFtQnFCLGFBQWFHLFlBQVksQ0FBQyxZQUFZTCxVQUFVLENBQUMsUUFBUTtRQUVoRnhCLE1BQU0sQ0FBQzJCLFdBQVcsR0FBRztZQUNqQkcsV0FBV0YsV0FBVztZQUN0QnhCLE9BQU91QjtZQUNQdEIsa0JBQWtCQTtRQUN0QjtJQUNKO0lBRUEsSUFBSUssZUFBZVksUUFBUU8sWUFBWSxDQUFDLGtCQUFrQkwsVUFBVSxDQUFDLFFBQVE7SUFFN0UsT0FBTztRQUFDeEIsUUFBUUE7UUFBUVUsY0FBY0E7SUFBWTtBQUN0RDtBQUVBLFNBQVNTLFNBQVNKLElBQUk7SUFDbEIsSUFBSXZCLE9BQU8sQ0FBQztJQUNadUIsS0FBS0ssb0JBQW9CLENBQUMsU0FBU0MsT0FBTyxDQUFDLFNBQVNDLE9BQU87UUFDdkQsSUFBSWYsUUFBUWUsUUFBUUUsVUFBVSxDQUFDLFVBQVU7UUFDekMsSUFBSWYsZ0JBQWdCYSxRQUFRUyxLQUFLLENBQUMsbUJBQW1CUCxVQUFVLENBQUMsUUFBUTtRQUN4RWhDLElBQUksQ0FBQ2UsTUFBTSxHQUFHO1lBQUNFLGVBQWVBO1FBQWE7SUFDL0M7SUFDQSxPQUFPakI7QUFDWCIsInNvdXJjZXMiOlsid2VicGFjazovL3Jlc3VtZWJ1aWxkZXItYWkvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvZG9jeC9udW1iZXJpbmcteG1sLmpzPzU2MTQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF8gPSByZXF1aXJlKFwidW5kZXJzY29yZVwiKTtcblxuZXhwb3J0cy5yZWFkTnVtYmVyaW5nWG1sID0gcmVhZE51bWJlcmluZ1htbDtcbmV4cG9ydHMuTnVtYmVyaW5nID0gTnVtYmVyaW5nO1xuZXhwb3J0cy5kZWZhdWx0TnVtYmVyaW5nID0gbmV3IE51bWJlcmluZyh7fSwge30pO1xuXG5mdW5jdGlvbiBOdW1iZXJpbmcobnVtcywgYWJzdHJhY3ROdW1zLCBzdHlsZXMpIHtcbiAgICB2YXIgYWxsTGV2ZWxzID0gXy5mbGF0dGVuKF8udmFsdWVzKGFic3RyYWN0TnVtcykubWFwKGZ1bmN0aW9uKGFic3RyYWN0TnVtKSB7XG4gICAgICAgIHJldHVybiBfLnZhbHVlcyhhYnN0cmFjdE51bS5sZXZlbHMpO1xuICAgIH0pKTtcblxuICAgIHZhciBsZXZlbHNCeVBhcmFncmFwaFN0eWxlSWQgPSBfLmluZGV4QnkoXG4gICAgICAgIGFsbExldmVscy5maWx0ZXIoZnVuY3Rpb24obGV2ZWwpIHtcbiAgICAgICAgICAgIHJldHVybiBsZXZlbC5wYXJhZ3JhcGhTdHlsZUlkICE9IG51bGw7XG4gICAgICAgIH0pLFxuICAgICAgICBcInBhcmFncmFwaFN0eWxlSWRcIlxuICAgICk7XG5cbiAgICBmdW5jdGlvbiBmaW5kTGV2ZWwobnVtSWQsIGxldmVsKSB7XG4gICAgICAgIHZhciBudW0gPSBudW1zW251bUlkXTtcbiAgICAgICAgaWYgKG51bSkge1xuICAgICAgICAgICAgdmFyIGFic3RyYWN0TnVtID0gYWJzdHJhY3ROdW1zW251bS5hYnN0cmFjdE51bUlkXTtcbiAgICAgICAgICAgIGlmICghYWJzdHJhY3ROdW0pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoYWJzdHJhY3ROdW0ubnVtU3R5bGVMaW5rID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYWJzdHJhY3ROdW1zW251bS5hYnN0cmFjdE51bUlkXS5sZXZlbHNbbGV2ZWxdO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB2YXIgc3R5bGUgPSBzdHlsZXMuZmluZE51bWJlcmluZ1N0eWxlQnlJZChhYnN0cmFjdE51bS5udW1TdHlsZUxpbmspO1xuICAgICAgICAgICAgICAgIHJldHVybiBmaW5kTGV2ZWwoc3R5bGUubnVtSWQsIGxldmVsKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZmluZExldmVsQnlQYXJhZ3JhcGhTdHlsZUlkKHN0eWxlSWQpIHtcbiAgICAgICAgcmV0dXJuIGxldmVsc0J5UGFyYWdyYXBoU3R5bGVJZFtzdHlsZUlkXSB8fCBudWxsO1xuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICAgIGZpbmRMZXZlbDogZmluZExldmVsLFxuICAgICAgICBmaW5kTGV2ZWxCeVBhcmFncmFwaFN0eWxlSWQ6IGZpbmRMZXZlbEJ5UGFyYWdyYXBoU3R5bGVJZFxuICAgIH07XG59XG5cbmZ1bmN0aW9uIHJlYWROdW1iZXJpbmdYbWwocm9vdCwgb3B0aW9ucykge1xuICAgIGlmICghb3B0aW9ucyB8fCAhb3B0aW9ucy5zdHlsZXMpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwic3R5bGVzIGlzIG1pc3NpbmdcIik7XG4gICAgfVxuXG4gICAgdmFyIGFic3RyYWN0TnVtcyA9IHJlYWRBYnN0cmFjdE51bXMocm9vdCk7XG4gICAgdmFyIG51bXMgPSByZWFkTnVtcyhyb290LCBhYnN0cmFjdE51bXMpO1xuICAgIHJldHVybiBuZXcgTnVtYmVyaW5nKG51bXMsIGFic3RyYWN0TnVtcywgb3B0aW9ucy5zdHlsZXMpO1xufVxuXG5mdW5jdGlvbiByZWFkQWJzdHJhY3ROdW1zKHJvb3QpIHtcbiAgICB2YXIgYWJzdHJhY3ROdW1zID0ge307XG4gICAgcm9vdC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInc6YWJzdHJhY3ROdW1cIikuZm9yRWFjaChmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgICAgIHZhciBpZCA9IGVsZW1lbnQuYXR0cmlidXRlc1tcInc6YWJzdHJhY3ROdW1JZFwiXTtcbiAgICAgICAgYWJzdHJhY3ROdW1zW2lkXSA9IHJlYWRBYnN0cmFjdE51bShlbGVtZW50KTtcbiAgICB9KTtcbiAgICByZXR1cm4gYWJzdHJhY3ROdW1zO1xufVxuXG5mdW5jdGlvbiByZWFkQWJzdHJhY3ROdW0oZWxlbWVudCkge1xuICAgIHZhciBsZXZlbHMgPSB7fTtcbiAgICBlbGVtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwidzpsdmxcIikuZm9yRWFjaChmdW5jdGlvbihsZXZlbEVsZW1lbnQpIHtcbiAgICAgICAgdmFyIGxldmVsSW5kZXggPSBsZXZlbEVsZW1lbnQuYXR0cmlidXRlc1tcInc6aWx2bFwiXTtcbiAgICAgICAgdmFyIG51bUZtdCA9IGxldmVsRWxlbWVudC5maXJzdE9yRW1wdHkoXCJ3Om51bUZtdFwiKS5hdHRyaWJ1dGVzW1widzp2YWxcIl07XG4gICAgICAgIHZhciBwYXJhZ3JhcGhTdHlsZUlkID0gbGV2ZWxFbGVtZW50LmZpcnN0T3JFbXB0eShcInc6cFN0eWxlXCIpLmF0dHJpYnV0ZXNbXCJ3OnZhbFwiXTtcblxuICAgICAgICBsZXZlbHNbbGV2ZWxJbmRleF0gPSB7XG4gICAgICAgICAgICBpc09yZGVyZWQ6IG51bUZtdCAhPT0gXCJidWxsZXRcIixcbiAgICAgICAgICAgIGxldmVsOiBsZXZlbEluZGV4LFxuICAgICAgICAgICAgcGFyYWdyYXBoU3R5bGVJZDogcGFyYWdyYXBoU3R5bGVJZFxuICAgICAgICB9O1xuICAgIH0pO1xuXG4gICAgdmFyIG51bVN0eWxlTGluayA9IGVsZW1lbnQuZmlyc3RPckVtcHR5KFwidzpudW1TdHlsZUxpbmtcIikuYXR0cmlidXRlc1tcInc6dmFsXCJdO1xuXG4gICAgcmV0dXJuIHtsZXZlbHM6IGxldmVscywgbnVtU3R5bGVMaW5rOiBudW1TdHlsZUxpbmt9O1xufVxuXG5mdW5jdGlvbiByZWFkTnVtcyhyb290KSB7XG4gICAgdmFyIG51bXMgPSB7fTtcbiAgICByb290LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwidzpudW1cIikuZm9yRWFjaChmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgICAgIHZhciBudW1JZCA9IGVsZW1lbnQuYXR0cmlidXRlc1tcInc6bnVtSWRcIl07XG4gICAgICAgIHZhciBhYnN0cmFjdE51bUlkID0gZWxlbWVudC5maXJzdChcInc6YWJzdHJhY3ROdW1JZFwiKS5hdHRyaWJ1dGVzW1widzp2YWxcIl07XG4gICAgICAgIG51bXNbbnVtSWRdID0ge2Fic3RyYWN0TnVtSWQ6IGFic3RyYWN0TnVtSWR9O1xuICAgIH0pO1xuICAgIHJldHVybiBudW1zO1xufVxuIl0sIm5hbWVzIjpbIl8iLCJyZXF1aXJlIiwiZXhwb3J0cyIsInJlYWROdW1iZXJpbmdYbWwiLCJOdW1iZXJpbmciLCJkZWZhdWx0TnVtYmVyaW5nIiwibnVtcyIsImFic3RyYWN0TnVtcyIsInN0eWxlcyIsImFsbExldmVscyIsImZsYXR0ZW4iLCJ2YWx1ZXMiLCJtYXAiLCJhYnN0cmFjdE51bSIsImxldmVscyIsImxldmVsc0J5UGFyYWdyYXBoU3R5bGVJZCIsImluZGV4QnkiLCJmaWx0ZXIiLCJsZXZlbCIsInBhcmFncmFwaFN0eWxlSWQiLCJmaW5kTGV2ZWwiLCJudW1JZCIsIm51bSIsImFic3RyYWN0TnVtSWQiLCJudW1TdHlsZUxpbmsiLCJzdHlsZSIsImZpbmROdW1iZXJpbmdTdHlsZUJ5SWQiLCJmaW5kTGV2ZWxCeVBhcmFncmFwaFN0eWxlSWQiLCJzdHlsZUlkIiwicm9vdCIsIm9wdGlvbnMiLCJFcnJvciIsInJlYWRBYnN0cmFjdE51bXMiLCJyZWFkTnVtcyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwiZm9yRWFjaCIsImVsZW1lbnQiLCJpZCIsImF0dHJpYnV0ZXMiLCJyZWFkQWJzdHJhY3ROdW0iLCJsZXZlbEVsZW1lbnQiLCJsZXZlbEluZGV4IiwibnVtRm10IiwiZmlyc3RPckVtcHR5IiwiaXNPcmRlcmVkIiwiZmlyc3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mammoth/lib/docx/numbering-xml.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mammoth/lib/docx/office-xml-reader.js":
/*!************************************************************!*\
  !*** ./node_modules/mammoth/lib/docx/office-xml-reader.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var _ = __webpack_require__(/*! underscore */ \"(rsc)/./node_modules/underscore/modules/index-all.js\");\nvar promises = __webpack_require__(/*! ../promises */ \"(rsc)/./node_modules/mammoth/lib/promises.js\");\nvar xml = __webpack_require__(/*! ../xml */ \"(rsc)/./node_modules/mammoth/lib/xml/index.js\");\nexports.read = read;\nexports.readXmlFromZipFile = readXmlFromZipFile;\nvar xmlNamespaceMap = {\n    // Transitional format\n    \"http://schemas.openxmlformats.org/wordprocessingml/2006/main\": \"w\",\n    \"http://schemas.openxmlformats.org/officeDocument/2006/relationships\": \"r\",\n    \"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing\": \"wp\",\n    \"http://schemas.openxmlformats.org/drawingml/2006/main\": \"a\",\n    \"http://schemas.openxmlformats.org/drawingml/2006/picture\": \"pic\",\n    // Strict format\n    \"http://purl.oclc.org/ooxml/wordprocessingml/main\": \"w\",\n    \"http://purl.oclc.org/ooxml/officeDocument/relationships\": \"r\",\n    \"http://purl.oclc.org/ooxml/drawingml/wordprocessingDrawing\": \"wp\",\n    \"http://purl.oclc.org/ooxml/drawingml/main\": \"a\",\n    \"http://purl.oclc.org/ooxml/drawingml/picture\": \"pic\",\n    // Common\n    \"http://schemas.openxmlformats.org/package/2006/content-types\": \"content-types\",\n    \"http://schemas.openxmlformats.org/package/2006/relationships\": \"relationships\",\n    \"http://schemas.openxmlformats.org/markup-compatibility/2006\": \"mc\",\n    \"urn:schemas-microsoft-com:vml\": \"v\",\n    \"urn:schemas-microsoft-com:office:word\": \"office-word\",\n    // [MS-DOCX]: Word Extensions to the Office Open XML (.docx) File Format\n    // https://learn.microsoft.com/en-us/openspecs/office_standards/ms-docx/b839fe1f-e1ca-4fa6-8c26-5954d0abbccd\n    \"http://schemas.microsoft.com/office/word/2010/wordml\": \"wordml\"\n};\nfunction read(xmlString) {\n    return xml.readString(xmlString, xmlNamespaceMap).then(function(document) {\n        return collapseAlternateContent(document)[0];\n    });\n}\nfunction readXmlFromZipFile(docxFile, path) {\n    if (docxFile.exists(path)) {\n        return docxFile.read(path, \"utf-8\").then(stripUtf8Bom).then(read);\n    } else {\n        return promises.resolve(null);\n    }\n}\nfunction stripUtf8Bom(xmlString) {\n    return xmlString.replace(/^\\uFEFF/g, \"\");\n}\nfunction collapseAlternateContent(node) {\n    if (node.type === \"element\") {\n        if (node.name === \"mc:AlternateContent\") {\n            return node.firstOrEmpty(\"mc:Fallback\").children;\n        } else {\n            node.children = _.flatten(node.children.map(collapseAlternateContent, true));\n            return [\n                node\n            ];\n        }\n    } else {\n        return [\n            node\n        ];\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvZG9jeC9vZmZpY2UteG1sLXJlYWRlci5qcyIsIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxJQUFJQyxtQkFBT0EsQ0FBQyx3RUFBWTtBQUU1QixJQUFJQyxXQUFXRCxtQkFBT0EsQ0FBQyxpRUFBYTtBQUNwQyxJQUFJRSxNQUFNRixtQkFBT0EsQ0FBQyw2REFBUTtBQUcxQkcsWUFBWSxHQUFHQztBQUNmRCwwQkFBMEIsR0FBR0U7QUFFN0IsSUFBSUMsa0JBQWtCO0lBQ2xCLHNCQUFzQjtJQUN0QixnRUFBZ0U7SUFDaEUsdUVBQXVFO0lBQ3ZFLDBFQUEwRTtJQUMxRSx5REFBeUQ7SUFDekQsNERBQTREO0lBRTVELGdCQUFnQjtJQUNoQixvREFBb0Q7SUFDcEQsMkRBQTJEO0lBQzNELDhEQUE4RDtJQUM5RCw2Q0FBNkM7SUFDN0MsZ0RBQWdEO0lBRWhELFNBQVM7SUFDVCxnRUFBZ0U7SUFDaEUsZ0VBQWdFO0lBQ2hFLCtEQUErRDtJQUMvRCxpQ0FBaUM7SUFDakMseUNBQXlDO0lBRXpDLHdFQUF3RTtJQUN4RSw0R0FBNEc7SUFDNUcsd0RBQXdEO0FBQzVEO0FBR0EsU0FBU0YsS0FBS0csU0FBUztJQUNuQixPQUFPTCxJQUFJTSxVQUFVLENBQUNELFdBQVdELGlCQUM1QkcsSUFBSSxDQUFDLFNBQVNDLFFBQVE7UUFDbkIsT0FBT0MseUJBQXlCRCxTQUFTLENBQUMsRUFBRTtJQUNoRDtBQUNSO0FBR0EsU0FBU0wsbUJBQW1CTyxRQUFRLEVBQUVDLElBQUk7SUFDdEMsSUFBSUQsU0FBU0UsTUFBTSxDQUFDRCxPQUFPO1FBQ3ZCLE9BQU9ELFNBQVNSLElBQUksQ0FBQ1MsTUFBTSxTQUN0QkosSUFBSSxDQUFDTSxjQUNMTixJQUFJLENBQUNMO0lBQ2QsT0FBTztRQUNILE9BQU9ILFNBQVNlLE9BQU8sQ0FBQztJQUM1QjtBQUNKO0FBR0EsU0FBU0QsYUFBYVIsU0FBUztJQUMzQixPQUFPQSxVQUFVVSxPQUFPLENBQUMsWUFBWTtBQUN6QztBQUdBLFNBQVNOLHlCQUF5Qk8sSUFBSTtJQUNsQyxJQUFJQSxLQUFLQyxJQUFJLEtBQUssV0FBVztRQUN6QixJQUFJRCxLQUFLRSxJQUFJLEtBQUssdUJBQXVCO1lBQ3JDLE9BQU9GLEtBQUtHLFlBQVksQ0FBQyxlQUFlQyxRQUFRO1FBQ3BELE9BQU87WUFDSEosS0FBS0ksUUFBUSxHQUFHdkIsRUFBRXdCLE9BQU8sQ0FBQ0wsS0FBS0ksUUFBUSxDQUFDRSxHQUFHLENBQUNiLDBCQUEwQjtZQUN0RSxPQUFPO2dCQUFDTzthQUFLO1FBQ2pCO0lBQ0osT0FBTztRQUNILE9BQU87WUFBQ0E7U0FBSztJQUNqQjtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdW1lYnVpbGRlci1haS8uL25vZGVfbW9kdWxlcy9tYW1tb3RoL2xpYi9kb2N4L29mZmljZS14bWwtcmVhZGVyLmpzPzY2YWQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF8gPSByZXF1aXJlKFwidW5kZXJzY29yZVwiKTtcblxudmFyIHByb21pc2VzID0gcmVxdWlyZShcIi4uL3Byb21pc2VzXCIpO1xudmFyIHhtbCA9IHJlcXVpcmUoXCIuLi94bWxcIik7XG5cblxuZXhwb3J0cy5yZWFkID0gcmVhZDtcbmV4cG9ydHMucmVhZFhtbEZyb21aaXBGaWxlID0gcmVhZFhtbEZyb21aaXBGaWxlO1xuXG52YXIgeG1sTmFtZXNwYWNlTWFwID0ge1xuICAgIC8vIFRyYW5zaXRpb25hbCBmb3JtYXRcbiAgICBcImh0dHA6Ly9zY2hlbWFzLm9wZW54bWxmb3JtYXRzLm9yZy93b3JkcHJvY2Vzc2luZ21sLzIwMDYvbWFpblwiOiBcIndcIixcbiAgICBcImh0dHA6Ly9zY2hlbWFzLm9wZW54bWxmb3JtYXRzLm9yZy9vZmZpY2VEb2N1bWVudC8yMDA2L3JlbGF0aW9uc2hpcHNcIjogXCJyXCIsXG4gICAgXCJodHRwOi8vc2NoZW1hcy5vcGVueG1sZm9ybWF0cy5vcmcvZHJhd2luZ21sLzIwMDYvd29yZHByb2Nlc3NpbmdEcmF3aW5nXCI6IFwid3BcIixcbiAgICBcImh0dHA6Ly9zY2hlbWFzLm9wZW54bWxmb3JtYXRzLm9yZy9kcmF3aW5nbWwvMjAwNi9tYWluXCI6IFwiYVwiLFxuICAgIFwiaHR0cDovL3NjaGVtYXMub3BlbnhtbGZvcm1hdHMub3JnL2RyYXdpbmdtbC8yMDA2L3BpY3R1cmVcIjogXCJwaWNcIixcblxuICAgIC8vIFN0cmljdCBmb3JtYXRcbiAgICBcImh0dHA6Ly9wdXJsLm9jbGMub3JnL29veG1sL3dvcmRwcm9jZXNzaW5nbWwvbWFpblwiOiBcIndcIixcbiAgICBcImh0dHA6Ly9wdXJsLm9jbGMub3JnL29veG1sL29mZmljZURvY3VtZW50L3JlbGF0aW9uc2hpcHNcIjogXCJyXCIsXG4gICAgXCJodHRwOi8vcHVybC5vY2xjLm9yZy9vb3htbC9kcmF3aW5nbWwvd29yZHByb2Nlc3NpbmdEcmF3aW5nXCI6IFwid3BcIixcbiAgICBcImh0dHA6Ly9wdXJsLm9jbGMub3JnL29veG1sL2RyYXdpbmdtbC9tYWluXCI6IFwiYVwiLFxuICAgIFwiaHR0cDovL3B1cmwub2NsYy5vcmcvb294bWwvZHJhd2luZ21sL3BpY3R1cmVcIjogXCJwaWNcIixcblxuICAgIC8vIENvbW1vblxuICAgIFwiaHR0cDovL3NjaGVtYXMub3BlbnhtbGZvcm1hdHMub3JnL3BhY2thZ2UvMjAwNi9jb250ZW50LXR5cGVzXCI6IFwiY29udGVudC10eXBlc1wiLFxuICAgIFwiaHR0cDovL3NjaGVtYXMub3BlbnhtbGZvcm1hdHMub3JnL3BhY2thZ2UvMjAwNi9yZWxhdGlvbnNoaXBzXCI6IFwicmVsYXRpb25zaGlwc1wiLFxuICAgIFwiaHR0cDovL3NjaGVtYXMub3BlbnhtbGZvcm1hdHMub3JnL21hcmt1cC1jb21wYXRpYmlsaXR5LzIwMDZcIjogXCJtY1wiLFxuICAgIFwidXJuOnNjaGVtYXMtbWljcm9zb2Z0LWNvbTp2bWxcIjogXCJ2XCIsXG4gICAgXCJ1cm46c2NoZW1hcy1taWNyb3NvZnQtY29tOm9mZmljZTp3b3JkXCI6IFwib2ZmaWNlLXdvcmRcIixcblxuICAgIC8vIFtNUy1ET0NYXTogV29yZCBFeHRlbnNpb25zIHRvIHRoZSBPZmZpY2UgT3BlbiBYTUwgKC5kb2N4KSBGaWxlIEZvcm1hdFxuICAgIC8vIGh0dHBzOi8vbGVhcm4ubWljcm9zb2Z0LmNvbS9lbi11cy9vcGVuc3BlY3Mvb2ZmaWNlX3N0YW5kYXJkcy9tcy1kb2N4L2I4MzlmZTFmLWUxY2EtNGZhNi04YzI2LTU5NTRkMGFiYmNjZFxuICAgIFwiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9vZmZpY2Uvd29yZC8yMDEwL3dvcmRtbFwiOiBcIndvcmRtbFwiXG59O1xuXG5cbmZ1bmN0aW9uIHJlYWQoeG1sU3RyaW5nKSB7XG4gICAgcmV0dXJuIHhtbC5yZWFkU3RyaW5nKHhtbFN0cmluZywgeG1sTmFtZXNwYWNlTWFwKVxuICAgICAgICAudGhlbihmdW5jdGlvbihkb2N1bWVudCkge1xuICAgICAgICAgICAgcmV0dXJuIGNvbGxhcHNlQWx0ZXJuYXRlQ29udGVudChkb2N1bWVudClbMF07XG4gICAgICAgIH0pO1xufVxuXG5cbmZ1bmN0aW9uIHJlYWRYbWxGcm9tWmlwRmlsZShkb2N4RmlsZSwgcGF0aCkge1xuICAgIGlmIChkb2N4RmlsZS5leGlzdHMocGF0aCkpIHtcbiAgICAgICAgcmV0dXJuIGRvY3hGaWxlLnJlYWQocGF0aCwgXCJ1dGYtOFwiKVxuICAgICAgICAgICAgLnRoZW4oc3RyaXBVdGY4Qm9tKVxuICAgICAgICAgICAgLnRoZW4ocmVhZCk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHByb21pc2VzLnJlc29sdmUobnVsbCk7XG4gICAgfVxufVxuXG5cbmZ1bmN0aW9uIHN0cmlwVXRmOEJvbSh4bWxTdHJpbmcpIHtcbiAgICByZXR1cm4geG1sU3RyaW5nLnJlcGxhY2UoL15cXHVGRUZGL2csICcnKTtcbn1cblxuXG5mdW5jdGlvbiBjb2xsYXBzZUFsdGVybmF0ZUNvbnRlbnQobm9kZSkge1xuICAgIGlmIChub2RlLnR5cGUgPT09IFwiZWxlbWVudFwiKSB7XG4gICAgICAgIGlmIChub2RlLm5hbWUgPT09IFwibWM6QWx0ZXJuYXRlQ29udGVudFwiKSB7XG4gICAgICAgICAgICByZXR1cm4gbm9kZS5maXJzdE9yRW1wdHkoXCJtYzpGYWxsYmFja1wiKS5jaGlsZHJlbjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG5vZGUuY2hpbGRyZW4gPSBfLmZsYXR0ZW4obm9kZS5jaGlsZHJlbi5tYXAoY29sbGFwc2VBbHRlcm5hdGVDb250ZW50LCB0cnVlKSk7XG4gICAgICAgICAgICByZXR1cm4gW25vZGVdO1xuICAgICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIFtub2RlXTtcbiAgICB9XG59XG4iXSwibmFtZXMiOlsiXyIsInJlcXVpcmUiLCJwcm9taXNlcyIsInhtbCIsImV4cG9ydHMiLCJyZWFkIiwicmVhZFhtbEZyb21aaXBGaWxlIiwieG1sTmFtZXNwYWNlTWFwIiwieG1sU3RyaW5nIiwicmVhZFN0cmluZyIsInRoZW4iLCJkb2N1bWVudCIsImNvbGxhcHNlQWx0ZXJuYXRlQ29udGVudCIsImRvY3hGaWxlIiwicGF0aCIsImV4aXN0cyIsInN0cmlwVXRmOEJvbSIsInJlc29sdmUiLCJyZXBsYWNlIiwibm9kZSIsInR5cGUiLCJuYW1lIiwiZmlyc3RPckVtcHR5IiwiY2hpbGRyZW4iLCJmbGF0dGVuIiwibWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mammoth/lib/docx/office-xml-reader.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mammoth/lib/docx/relationships-reader.js":
/*!***************************************************************!*\
  !*** ./node_modules/mammoth/lib/docx/relationships-reader.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("exports.readRelationships = readRelationships;\nexports.defaultValue = new Relationships([]);\nexports.Relationships = Relationships;\nfunction readRelationships(element) {\n    var relationships = [];\n    element.children.forEach(function(child) {\n        if (child.name === \"relationships:Relationship\") {\n            var relationship = {\n                relationshipId: child.attributes.Id,\n                target: child.attributes.Target,\n                type: child.attributes.Type\n            };\n            relationships.push(relationship);\n        }\n    });\n    return new Relationships(relationships);\n}\nfunction Relationships(relationships) {\n    var targetsByRelationshipId = {};\n    relationships.forEach(function(relationship) {\n        targetsByRelationshipId[relationship.relationshipId] = relationship.target;\n    });\n    var targetsByType = {};\n    relationships.forEach(function(relationship) {\n        if (!targetsByType[relationship.type]) {\n            targetsByType[relationship.type] = [];\n        }\n        targetsByType[relationship.type].push(relationship.target);\n    });\n    return {\n        findTargetByRelationshipId: function(relationshipId) {\n            return targetsByRelationshipId[relationshipId];\n        },\n        findTargetsByType: function(type) {\n            return targetsByType[type] || [];\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvZG9jeC9yZWxhdGlvbnNoaXBzLXJlYWRlci5qcyIsIm1hcHBpbmdzIjoiQUFBQUEseUJBQXlCLEdBQUdDO0FBQzVCRCxvQkFBb0IsR0FBRyxJQUFJRyxjQUFjLEVBQUU7QUFDM0NILHFCQUFxQixHQUFHRztBQUd4QixTQUFTRixrQkFBa0JHLE9BQU87SUFDOUIsSUFBSUMsZ0JBQWdCLEVBQUU7SUFDdEJELFFBQVFFLFFBQVEsQ0FBQ0MsT0FBTyxDQUFDLFNBQVNDLEtBQUs7UUFDbkMsSUFBSUEsTUFBTUMsSUFBSSxLQUFLLDhCQUE4QjtZQUM3QyxJQUFJQyxlQUFlO2dCQUNmQyxnQkFBZ0JILE1BQU1JLFVBQVUsQ0FBQ0MsRUFBRTtnQkFDbkNDLFFBQVFOLE1BQU1JLFVBQVUsQ0FBQ0csTUFBTTtnQkFDL0JDLE1BQU1SLE1BQU1JLFVBQVUsQ0FBQ0ssSUFBSTtZQUMvQjtZQUNBWixjQUFjYSxJQUFJLENBQUNSO1FBQ3ZCO0lBQ0o7SUFDQSxPQUFPLElBQUlQLGNBQWNFO0FBQzdCO0FBRUEsU0FBU0YsY0FBY0UsYUFBYTtJQUNoQyxJQUFJYywwQkFBMEIsQ0FBQztJQUMvQmQsY0FBY0UsT0FBTyxDQUFDLFNBQVNHLFlBQVk7UUFDdkNTLHVCQUF1QixDQUFDVCxhQUFhQyxjQUFjLENBQUMsR0FBR0QsYUFBYUksTUFBTTtJQUM5RTtJQUVBLElBQUlNLGdCQUFnQixDQUFDO0lBQ3JCZixjQUFjRSxPQUFPLENBQUMsU0FBU0csWUFBWTtRQUN2QyxJQUFJLENBQUNVLGFBQWEsQ0FBQ1YsYUFBYU0sSUFBSSxDQUFDLEVBQUU7WUFDbkNJLGFBQWEsQ0FBQ1YsYUFBYU0sSUFBSSxDQUFDLEdBQUcsRUFBRTtRQUN6QztRQUNBSSxhQUFhLENBQUNWLGFBQWFNLElBQUksQ0FBQyxDQUFDRSxJQUFJLENBQUNSLGFBQWFJLE1BQU07SUFDN0Q7SUFFQSxPQUFPO1FBQ0hPLDRCQUE0QixTQUFTVixjQUFjO1lBQy9DLE9BQU9RLHVCQUF1QixDQUFDUixlQUFlO1FBQ2xEO1FBQ0FXLG1CQUFtQixTQUFTTixJQUFJO1lBQzVCLE9BQU9JLGFBQWEsQ0FBQ0osS0FBSyxJQUFJLEVBQUU7UUFDcEM7SUFDSjtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdW1lYnVpbGRlci1haS8uL25vZGVfbW9kdWxlcy9tYW1tb3RoL2xpYi9kb2N4L3JlbGF0aW9uc2hpcHMtcmVhZGVyLmpzPzk4M2IiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cy5yZWFkUmVsYXRpb25zaGlwcyA9IHJlYWRSZWxhdGlvbnNoaXBzO1xuZXhwb3J0cy5kZWZhdWx0VmFsdWUgPSBuZXcgUmVsYXRpb25zaGlwcyhbXSk7XG5leHBvcnRzLlJlbGF0aW9uc2hpcHMgPSBSZWxhdGlvbnNoaXBzO1xuXG5cbmZ1bmN0aW9uIHJlYWRSZWxhdGlvbnNoaXBzKGVsZW1lbnQpIHtcbiAgICB2YXIgcmVsYXRpb25zaGlwcyA9IFtdO1xuICAgIGVsZW1lbnQuY2hpbGRyZW4uZm9yRWFjaChmdW5jdGlvbihjaGlsZCkge1xuICAgICAgICBpZiAoY2hpbGQubmFtZSA9PT0gXCJyZWxhdGlvbnNoaXBzOlJlbGF0aW9uc2hpcFwiKSB7XG4gICAgICAgICAgICB2YXIgcmVsYXRpb25zaGlwID0ge1xuICAgICAgICAgICAgICAgIHJlbGF0aW9uc2hpcElkOiBjaGlsZC5hdHRyaWJ1dGVzLklkLFxuICAgICAgICAgICAgICAgIHRhcmdldDogY2hpbGQuYXR0cmlidXRlcy5UYXJnZXQsXG4gICAgICAgICAgICAgICAgdHlwZTogY2hpbGQuYXR0cmlidXRlcy5UeXBlXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgcmVsYXRpb25zaGlwcy5wdXNoKHJlbGF0aW9uc2hpcCk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gbmV3IFJlbGF0aW9uc2hpcHMocmVsYXRpb25zaGlwcyk7XG59XG5cbmZ1bmN0aW9uIFJlbGF0aW9uc2hpcHMocmVsYXRpb25zaGlwcykge1xuICAgIHZhciB0YXJnZXRzQnlSZWxhdGlvbnNoaXBJZCA9IHt9O1xuICAgIHJlbGF0aW9uc2hpcHMuZm9yRWFjaChmdW5jdGlvbihyZWxhdGlvbnNoaXApIHtcbiAgICAgICAgdGFyZ2V0c0J5UmVsYXRpb25zaGlwSWRbcmVsYXRpb25zaGlwLnJlbGF0aW9uc2hpcElkXSA9IHJlbGF0aW9uc2hpcC50YXJnZXQ7XG4gICAgfSk7XG5cbiAgICB2YXIgdGFyZ2V0c0J5VHlwZSA9IHt9O1xuICAgIHJlbGF0aW9uc2hpcHMuZm9yRWFjaChmdW5jdGlvbihyZWxhdGlvbnNoaXApIHtcbiAgICAgICAgaWYgKCF0YXJnZXRzQnlUeXBlW3JlbGF0aW9uc2hpcC50eXBlXSkge1xuICAgICAgICAgICAgdGFyZ2V0c0J5VHlwZVtyZWxhdGlvbnNoaXAudHlwZV0gPSBbXTtcbiAgICAgICAgfVxuICAgICAgICB0YXJnZXRzQnlUeXBlW3JlbGF0aW9uc2hpcC50eXBlXS5wdXNoKHJlbGF0aW9uc2hpcC50YXJnZXQpO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgZmluZFRhcmdldEJ5UmVsYXRpb25zaGlwSWQ6IGZ1bmN0aW9uKHJlbGF0aW9uc2hpcElkKSB7XG4gICAgICAgICAgICByZXR1cm4gdGFyZ2V0c0J5UmVsYXRpb25zaGlwSWRbcmVsYXRpb25zaGlwSWRdO1xuICAgICAgICB9LFxuICAgICAgICBmaW5kVGFyZ2V0c0J5VHlwZTogZnVuY3Rpb24odHlwZSkge1xuICAgICAgICAgICAgcmV0dXJuIHRhcmdldHNCeVR5cGVbdHlwZV0gfHwgW107XG4gICAgICAgIH1cbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbImV4cG9ydHMiLCJyZWFkUmVsYXRpb25zaGlwcyIsImRlZmF1bHRWYWx1ZSIsIlJlbGF0aW9uc2hpcHMiLCJlbGVtZW50IiwicmVsYXRpb25zaGlwcyIsImNoaWxkcmVuIiwiZm9yRWFjaCIsImNoaWxkIiwibmFtZSIsInJlbGF0aW9uc2hpcCIsInJlbGF0aW9uc2hpcElkIiwiYXR0cmlidXRlcyIsIklkIiwidGFyZ2V0IiwiVGFyZ2V0IiwidHlwZSIsIlR5cGUiLCJwdXNoIiwidGFyZ2V0c0J5UmVsYXRpb25zaGlwSWQiLCJ0YXJnZXRzQnlUeXBlIiwiZmluZFRhcmdldEJ5UmVsYXRpb25zaGlwSWQiLCJmaW5kVGFyZ2V0c0J5VHlwZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mammoth/lib/docx/relationships-reader.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mammoth/lib/docx/style-map.js":
/*!****************************************************!*\
  !*** ./node_modules/mammoth/lib/docx/style-map.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var _ = __webpack_require__(/*! underscore */ \"(rsc)/./node_modules/underscore/modules/index-all.js\");\nvar promises = __webpack_require__(/*! ../promises */ \"(rsc)/./node_modules/mammoth/lib/promises.js\");\nvar xml = __webpack_require__(/*! ../xml */ \"(rsc)/./node_modules/mammoth/lib/xml/index.js\");\nexports.writeStyleMap = writeStyleMap;\nexports.readStyleMap = readStyleMap;\nvar schema = \"http://schemas.zwobble.org/mammoth/style-map\";\nvar styleMapPath = \"mammoth/style-map\";\nvar styleMapAbsolutePath = \"/\" + styleMapPath;\nfunction writeStyleMap(docxFile, styleMap) {\n    docxFile.write(styleMapPath, styleMap);\n    return updateRelationships(docxFile).then(function() {\n        return updateContentTypes(docxFile);\n    });\n}\nfunction updateRelationships(docxFile) {\n    var path = \"word/_rels/document.xml.rels\";\n    var relationshipsUri = \"http://schemas.openxmlformats.org/package/2006/relationships\";\n    var relationshipElementName = \"{\" + relationshipsUri + \"}Relationship\";\n    return docxFile.read(path, \"utf8\").then(xml.readString).then(function(relationshipsContainer) {\n        var relationships = relationshipsContainer.children;\n        addOrUpdateElement(relationships, relationshipElementName, \"Id\", {\n            \"Id\": \"rMammothStyleMap\",\n            \"Type\": schema,\n            \"Target\": styleMapAbsolutePath\n        });\n        var namespaces = {\n            \"\": relationshipsUri\n        };\n        return docxFile.write(path, xml.writeString(relationshipsContainer, namespaces));\n    });\n}\nfunction updateContentTypes(docxFile) {\n    var path = \"[Content_Types].xml\";\n    var contentTypesUri = \"http://schemas.openxmlformats.org/package/2006/content-types\";\n    var overrideName = \"{\" + contentTypesUri + \"}Override\";\n    return docxFile.read(path, \"utf8\").then(xml.readString).then(function(typesElement) {\n        var children = typesElement.children;\n        addOrUpdateElement(children, overrideName, \"PartName\", {\n            \"PartName\": styleMapAbsolutePath,\n            \"ContentType\": \"text/prs.mammoth.style-map\"\n        });\n        var namespaces = {\n            \"\": contentTypesUri\n        };\n        return docxFile.write(path, xml.writeString(typesElement, namespaces));\n    });\n}\nfunction addOrUpdateElement(elements, name, identifyingAttribute, attributes) {\n    var existingElement = _.find(elements, function(element) {\n        return element.name === name && element.attributes[identifyingAttribute] === attributes[identifyingAttribute];\n    });\n    if (existingElement) {\n        existingElement.attributes = attributes;\n    } else {\n        elements.push(xml.element(name, attributes));\n    }\n}\nfunction readStyleMap(docxFile) {\n    if (docxFile.exists(styleMapPath)) {\n        return docxFile.read(styleMapPath, \"utf8\");\n    } else {\n        return promises.resolve(null);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvZG9jeC9zdHlsZS1tYXAuanMiLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsSUFBSUMsbUJBQU9BLENBQUMsd0VBQVk7QUFFNUIsSUFBSUMsV0FBV0QsbUJBQU9BLENBQUMsaUVBQWE7QUFDcEMsSUFBSUUsTUFBTUYsbUJBQU9BLENBQUMsNkRBQVE7QUFFMUJHLHFCQUFxQixHQUFHQztBQUN4QkQsb0JBQW9CLEdBQUdFO0FBR3ZCLElBQUlDLFNBQVM7QUFDYixJQUFJQyxlQUFlO0FBQ25CLElBQUlDLHVCQUF1QixNQUFNRDtBQUVqQyxTQUFTSCxjQUFjSyxRQUFRLEVBQUVDLFFBQVE7SUFDckNELFNBQVNFLEtBQUssQ0FBQ0osY0FBY0c7SUFDN0IsT0FBT0Usb0JBQW9CSCxVQUFVSSxJQUFJLENBQUM7UUFDdEMsT0FBT0MsbUJBQW1CTDtJQUM5QjtBQUNKO0FBRUEsU0FBU0csb0JBQW9CSCxRQUFRO0lBQ2pDLElBQUlNLE9BQU87SUFDWCxJQUFJQyxtQkFBbUI7SUFDdkIsSUFBSUMsMEJBQTBCLE1BQU1ELG1CQUFtQjtJQUN2RCxPQUFPUCxTQUFTUyxJQUFJLENBQUNILE1BQU0sUUFDdEJGLElBQUksQ0FBQ1gsSUFBSWlCLFVBQVUsRUFDbkJOLElBQUksQ0FBQyxTQUFTTyxzQkFBc0I7UUFDakMsSUFBSUMsZ0JBQWdCRCx1QkFBdUJFLFFBQVE7UUFDbkRDLG1CQUFtQkYsZUFBZUoseUJBQXlCLE1BQU07WUFDN0QsTUFBTTtZQUNOLFFBQVFYO1lBQ1IsVUFBVUU7UUFDZDtRQUVBLElBQUlnQixhQUFhO1lBQUMsSUFBSVI7UUFBZ0I7UUFDdEMsT0FBT1AsU0FBU0UsS0FBSyxDQUFDSSxNQUFNYixJQUFJdUIsV0FBVyxDQUFDTCx3QkFBd0JJO0lBQ3hFO0FBQ1I7QUFFQSxTQUFTVixtQkFBbUJMLFFBQVE7SUFDaEMsSUFBSU0sT0FBTztJQUNYLElBQUlXLGtCQUFrQjtJQUN0QixJQUFJQyxlQUFlLE1BQU1ELGtCQUFrQjtJQUMzQyxPQUFPakIsU0FBU1MsSUFBSSxDQUFDSCxNQUFNLFFBQ3RCRixJQUFJLENBQUNYLElBQUlpQixVQUFVLEVBQ25CTixJQUFJLENBQUMsU0FBU2UsWUFBWTtRQUN2QixJQUFJTixXQUFXTSxhQUFhTixRQUFRO1FBQ3BDQyxtQkFBbUJELFVBQVVLLGNBQWMsWUFBWTtZQUNuRCxZQUFZbkI7WUFDWixlQUFlO1FBQ25CO1FBQ0EsSUFBSWdCLGFBQWE7WUFBQyxJQUFJRTtRQUFlO1FBQ3JDLE9BQU9qQixTQUFTRSxLQUFLLENBQUNJLE1BQU1iLElBQUl1QixXQUFXLENBQUNHLGNBQWNKO0lBQzlEO0FBQ1I7QUFFQSxTQUFTRCxtQkFBbUJNLFFBQVEsRUFBRUMsSUFBSSxFQUFFQyxvQkFBb0IsRUFBRUMsVUFBVTtJQUN4RSxJQUFJQyxrQkFBa0JsQyxFQUFFbUMsSUFBSSxDQUFDTCxVQUFVLFNBQVNNLE9BQU87UUFDbkQsT0FBT0EsUUFBUUwsSUFBSSxLQUFLQSxRQUNwQkssUUFBUUgsVUFBVSxDQUFDRCxxQkFBcUIsS0FBS0MsVUFBVSxDQUFDRCxxQkFBcUI7SUFDckY7SUFDQSxJQUFJRSxpQkFBaUI7UUFDakJBLGdCQUFnQkQsVUFBVSxHQUFHQTtJQUNqQyxPQUFPO1FBQ0hILFNBQVNPLElBQUksQ0FBQ2xDLElBQUlpQyxPQUFPLENBQUNMLE1BQU1FO0lBQ3BDO0FBQ0o7QUFFQSxTQUFTM0IsYUFBYUksUUFBUTtJQUMxQixJQUFJQSxTQUFTNEIsTUFBTSxDQUFDOUIsZUFBZTtRQUMvQixPQUFPRSxTQUFTUyxJQUFJLENBQUNYLGNBQWM7SUFDdkMsT0FBTztRQUNILE9BQU9OLFNBQVNxQyxPQUFPLENBQUM7SUFDNUI7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL3Jlc3VtZWJ1aWxkZXItYWkvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvZG9jeC9zdHlsZS1tYXAuanM/ZjFlNyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgXyA9IHJlcXVpcmUoXCJ1bmRlcnNjb3JlXCIpO1xuXG52YXIgcHJvbWlzZXMgPSByZXF1aXJlKFwiLi4vcHJvbWlzZXNcIik7XG52YXIgeG1sID0gcmVxdWlyZShcIi4uL3htbFwiKTtcblxuZXhwb3J0cy53cml0ZVN0eWxlTWFwID0gd3JpdGVTdHlsZU1hcDtcbmV4cG9ydHMucmVhZFN0eWxlTWFwID0gcmVhZFN0eWxlTWFwO1xuXG5cbnZhciBzY2hlbWEgPSBcImh0dHA6Ly9zY2hlbWFzLnp3b2JibGUub3JnL21hbW1vdGgvc3R5bGUtbWFwXCI7XG52YXIgc3R5bGVNYXBQYXRoID0gXCJtYW1tb3RoL3N0eWxlLW1hcFwiO1xudmFyIHN0eWxlTWFwQWJzb2x1dGVQYXRoID0gXCIvXCIgKyBzdHlsZU1hcFBhdGg7XG5cbmZ1bmN0aW9uIHdyaXRlU3R5bGVNYXAoZG9jeEZpbGUsIHN0eWxlTWFwKSB7XG4gICAgZG9jeEZpbGUud3JpdGUoc3R5bGVNYXBQYXRoLCBzdHlsZU1hcCk7XG4gICAgcmV0dXJuIHVwZGF0ZVJlbGF0aW9uc2hpcHMoZG9jeEZpbGUpLnRoZW4oZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB1cGRhdGVDb250ZW50VHlwZXMoZG9jeEZpbGUpO1xuICAgIH0pO1xufVxuXG5mdW5jdGlvbiB1cGRhdGVSZWxhdGlvbnNoaXBzKGRvY3hGaWxlKSB7XG4gICAgdmFyIHBhdGggPSBcIndvcmQvX3JlbHMvZG9jdW1lbnQueG1sLnJlbHNcIjtcbiAgICB2YXIgcmVsYXRpb25zaGlwc1VyaSA9IFwiaHR0cDovL3NjaGVtYXMub3BlbnhtbGZvcm1hdHMub3JnL3BhY2thZ2UvMjAwNi9yZWxhdGlvbnNoaXBzXCI7XG4gICAgdmFyIHJlbGF0aW9uc2hpcEVsZW1lbnROYW1lID0gXCJ7XCIgKyByZWxhdGlvbnNoaXBzVXJpICsgXCJ9UmVsYXRpb25zaGlwXCI7XG4gICAgcmV0dXJuIGRvY3hGaWxlLnJlYWQocGF0aCwgXCJ1dGY4XCIpXG4gICAgICAgIC50aGVuKHhtbC5yZWFkU3RyaW5nKVxuICAgICAgICAudGhlbihmdW5jdGlvbihyZWxhdGlvbnNoaXBzQ29udGFpbmVyKSB7XG4gICAgICAgICAgICB2YXIgcmVsYXRpb25zaGlwcyA9IHJlbGF0aW9uc2hpcHNDb250YWluZXIuY2hpbGRyZW47XG4gICAgICAgICAgICBhZGRPclVwZGF0ZUVsZW1lbnQocmVsYXRpb25zaGlwcywgcmVsYXRpb25zaGlwRWxlbWVudE5hbWUsIFwiSWRcIiwge1xuICAgICAgICAgICAgICAgIFwiSWRcIjogXCJyTWFtbW90aFN0eWxlTWFwXCIsXG4gICAgICAgICAgICAgICAgXCJUeXBlXCI6IHNjaGVtYSxcbiAgICAgICAgICAgICAgICBcIlRhcmdldFwiOiBzdHlsZU1hcEFic29sdXRlUGF0aFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHZhciBuYW1lc3BhY2VzID0ge1wiXCI6IHJlbGF0aW9uc2hpcHNVcml9O1xuICAgICAgICAgICAgcmV0dXJuIGRvY3hGaWxlLndyaXRlKHBhdGgsIHhtbC53cml0ZVN0cmluZyhyZWxhdGlvbnNoaXBzQ29udGFpbmVyLCBuYW1lc3BhY2VzKSk7XG4gICAgICAgIH0pO1xufVxuXG5mdW5jdGlvbiB1cGRhdGVDb250ZW50VHlwZXMoZG9jeEZpbGUpIHtcbiAgICB2YXIgcGF0aCA9IFwiW0NvbnRlbnRfVHlwZXNdLnhtbFwiO1xuICAgIHZhciBjb250ZW50VHlwZXNVcmkgPSBcImh0dHA6Ly9zY2hlbWFzLm9wZW54bWxmb3JtYXRzLm9yZy9wYWNrYWdlLzIwMDYvY29udGVudC10eXBlc1wiO1xuICAgIHZhciBvdmVycmlkZU5hbWUgPSBcIntcIiArIGNvbnRlbnRUeXBlc1VyaSArIFwifU92ZXJyaWRlXCI7XG4gICAgcmV0dXJuIGRvY3hGaWxlLnJlYWQocGF0aCwgXCJ1dGY4XCIpXG4gICAgICAgIC50aGVuKHhtbC5yZWFkU3RyaW5nKVxuICAgICAgICAudGhlbihmdW5jdGlvbih0eXBlc0VsZW1lbnQpIHtcbiAgICAgICAgICAgIHZhciBjaGlsZHJlbiA9IHR5cGVzRWxlbWVudC5jaGlsZHJlbjtcbiAgICAgICAgICAgIGFkZE9yVXBkYXRlRWxlbWVudChjaGlsZHJlbiwgb3ZlcnJpZGVOYW1lLCBcIlBhcnROYW1lXCIsIHtcbiAgICAgICAgICAgICAgICBcIlBhcnROYW1lXCI6IHN0eWxlTWFwQWJzb2x1dGVQYXRoLFxuICAgICAgICAgICAgICAgIFwiQ29udGVudFR5cGVcIjogXCJ0ZXh0L3Bycy5tYW1tb3RoLnN0eWxlLW1hcFwiXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHZhciBuYW1lc3BhY2VzID0ge1wiXCI6IGNvbnRlbnRUeXBlc1VyaX07XG4gICAgICAgICAgICByZXR1cm4gZG9jeEZpbGUud3JpdGUocGF0aCwgeG1sLndyaXRlU3RyaW5nKHR5cGVzRWxlbWVudCwgbmFtZXNwYWNlcykpO1xuICAgICAgICB9KTtcbn1cblxuZnVuY3Rpb24gYWRkT3JVcGRhdGVFbGVtZW50KGVsZW1lbnRzLCBuYW1lLCBpZGVudGlmeWluZ0F0dHJpYnV0ZSwgYXR0cmlidXRlcykge1xuICAgIHZhciBleGlzdGluZ0VsZW1lbnQgPSBfLmZpbmQoZWxlbWVudHMsIGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAgICAgICAgcmV0dXJuIGVsZW1lbnQubmFtZSA9PT0gbmFtZSAmJlxuICAgICAgICAgICAgZWxlbWVudC5hdHRyaWJ1dGVzW2lkZW50aWZ5aW5nQXR0cmlidXRlXSA9PT0gYXR0cmlidXRlc1tpZGVudGlmeWluZ0F0dHJpYnV0ZV07XG4gICAgfSk7XG4gICAgaWYgKGV4aXN0aW5nRWxlbWVudCkge1xuICAgICAgICBleGlzdGluZ0VsZW1lbnQuYXR0cmlidXRlcyA9IGF0dHJpYnV0ZXM7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgZWxlbWVudHMucHVzaCh4bWwuZWxlbWVudChuYW1lLCBhdHRyaWJ1dGVzKSk7XG4gICAgfVxufVxuXG5mdW5jdGlvbiByZWFkU3R5bGVNYXAoZG9jeEZpbGUpIHtcbiAgICBpZiAoZG9jeEZpbGUuZXhpc3RzKHN0eWxlTWFwUGF0aCkpIHtcbiAgICAgICAgcmV0dXJuIGRvY3hGaWxlLnJlYWQoc3R5bGVNYXBQYXRoLCBcInV0ZjhcIik7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHByb21pc2VzLnJlc29sdmUobnVsbCk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbIl8iLCJyZXF1aXJlIiwicHJvbWlzZXMiLCJ4bWwiLCJleHBvcnRzIiwid3JpdGVTdHlsZU1hcCIsInJlYWRTdHlsZU1hcCIsInNjaGVtYSIsInN0eWxlTWFwUGF0aCIsInN0eWxlTWFwQWJzb2x1dGVQYXRoIiwiZG9jeEZpbGUiLCJzdHlsZU1hcCIsIndyaXRlIiwidXBkYXRlUmVsYXRpb25zaGlwcyIsInRoZW4iLCJ1cGRhdGVDb250ZW50VHlwZXMiLCJwYXRoIiwicmVsYXRpb25zaGlwc1VyaSIsInJlbGF0aW9uc2hpcEVsZW1lbnROYW1lIiwicmVhZCIsInJlYWRTdHJpbmciLCJyZWxhdGlvbnNoaXBzQ29udGFpbmVyIiwicmVsYXRpb25zaGlwcyIsImNoaWxkcmVuIiwiYWRkT3JVcGRhdGVFbGVtZW50IiwibmFtZXNwYWNlcyIsIndyaXRlU3RyaW5nIiwiY29udGVudFR5cGVzVXJpIiwib3ZlcnJpZGVOYW1lIiwidHlwZXNFbGVtZW50IiwiZWxlbWVudHMiLCJuYW1lIiwiaWRlbnRpZnlpbmdBdHRyaWJ1dGUiLCJhdHRyaWJ1dGVzIiwiZXhpc3RpbmdFbGVtZW50IiwiZmluZCIsImVsZW1lbnQiLCJwdXNoIiwiZXhpc3RzIiwicmVzb2x2ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mammoth/lib/docx/style-map.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mammoth/lib/docx/styles-reader.js":
/*!********************************************************!*\
  !*** ./node_modules/mammoth/lib/docx/styles-reader.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("exports.readStylesXml = readStylesXml;\nexports.Styles = Styles;\nexports.defaultStyles = new Styles({}, {});\nfunction Styles(paragraphStyles, characterStyles, tableStyles, numberingStyles) {\n    return {\n        findParagraphStyleById: function(styleId) {\n            return paragraphStyles[styleId];\n        },\n        findCharacterStyleById: function(styleId) {\n            return characterStyles[styleId];\n        },\n        findTableStyleById: function(styleId) {\n            return tableStyles[styleId];\n        },\n        findNumberingStyleById: function(styleId) {\n            return numberingStyles[styleId];\n        }\n    };\n}\nStyles.EMPTY = new Styles({}, {}, {}, {});\nfunction readStylesXml(root) {\n    var paragraphStyles = {};\n    var characterStyles = {};\n    var tableStyles = {};\n    var numberingStyles = {};\n    var styles = {\n        \"paragraph\": paragraphStyles,\n        \"character\": characterStyles,\n        \"table\": tableStyles\n    };\n    root.getElementsByTagName(\"w:style\").forEach(function(styleElement) {\n        var style = readStyleElement(styleElement);\n        if (style.type === \"numbering\") {\n            numberingStyles[style.styleId] = readNumberingStyleElement(styleElement);\n        } else {\n            var styleSet = styles[style.type];\n            if (styleSet) {\n                styleSet[style.styleId] = style;\n            }\n        }\n    });\n    return new Styles(paragraphStyles, characterStyles, tableStyles, numberingStyles);\n}\nfunction readStyleElement(styleElement) {\n    var type = styleElement.attributes[\"w:type\"];\n    var styleId = styleElement.attributes[\"w:styleId\"];\n    var name = styleName(styleElement);\n    return {\n        type: type,\n        styleId: styleId,\n        name: name\n    };\n}\nfunction styleName(styleElement) {\n    var nameElement = styleElement.first(\"w:name\");\n    return nameElement ? nameElement.attributes[\"w:val\"] : null;\n}\nfunction readNumberingStyleElement(styleElement) {\n    var numId = styleElement.firstOrEmpty(\"w:pPr\").firstOrEmpty(\"w:numPr\").firstOrEmpty(\"w:numId\").attributes[\"w:val\"];\n    return {\n        numId: numId\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvZG9jeC9zdHlsZXMtcmVhZGVyLmpzIiwibWFwcGluZ3MiOiJBQUFBQSxxQkFBcUIsR0FBR0M7QUFDeEJELGNBQWMsR0FBR0U7QUFDakJGLHFCQUFxQixHQUFHLElBQUlFLE9BQU8sQ0FBQyxHQUFHLENBQUM7QUFFeEMsU0FBU0EsT0FBT0UsZUFBZSxFQUFFQyxlQUFlLEVBQUVDLFdBQVcsRUFBRUMsZUFBZTtJQUMxRSxPQUFPO1FBQ0hDLHdCQUF3QixTQUFTQyxPQUFPO1lBQ3BDLE9BQU9MLGVBQWUsQ0FBQ0ssUUFBUTtRQUNuQztRQUNBQyx3QkFBd0IsU0FBU0QsT0FBTztZQUNwQyxPQUFPSixlQUFlLENBQUNJLFFBQVE7UUFDbkM7UUFDQUUsb0JBQW9CLFNBQVNGLE9BQU87WUFDaEMsT0FBT0gsV0FBVyxDQUFDRyxRQUFRO1FBQy9CO1FBQ0FHLHdCQUF3QixTQUFTSCxPQUFPO1lBQ3BDLE9BQU9GLGVBQWUsQ0FBQ0UsUUFBUTtRQUNuQztJQUNKO0FBQ0o7QUFFQVAsT0FBT1csS0FBSyxHQUFHLElBQUlYLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQztBQUV2QyxTQUFTRCxjQUFjYSxJQUFJO0lBQ3ZCLElBQUlWLGtCQUFrQixDQUFDO0lBQ3ZCLElBQUlDLGtCQUFrQixDQUFDO0lBQ3ZCLElBQUlDLGNBQWMsQ0FBQztJQUNuQixJQUFJQyxrQkFBa0IsQ0FBQztJQUV2QixJQUFJUSxTQUFTO1FBQ1QsYUFBYVg7UUFDYixhQUFhQztRQUNiLFNBQVNDO0lBQ2I7SUFFQVEsS0FBS0Usb0JBQW9CLENBQUMsV0FBV0MsT0FBTyxDQUFDLFNBQVNDLFlBQVk7UUFDOUQsSUFBSUMsUUFBUUMsaUJBQWlCRjtRQUM3QixJQUFJQyxNQUFNRSxJQUFJLEtBQUssYUFBYTtZQUM1QmQsZUFBZSxDQUFDWSxNQUFNVixPQUFPLENBQUMsR0FBR2EsMEJBQTBCSjtRQUMvRCxPQUFPO1lBQ0gsSUFBSUssV0FBV1IsTUFBTSxDQUFDSSxNQUFNRSxJQUFJLENBQUM7WUFDakMsSUFBSUUsVUFBVTtnQkFDVkEsUUFBUSxDQUFDSixNQUFNVixPQUFPLENBQUMsR0FBR1U7WUFDOUI7UUFDSjtJQUNKO0lBRUEsT0FBTyxJQUFJakIsT0FBT0UsaUJBQWlCQyxpQkFBaUJDLGFBQWFDO0FBQ3JFO0FBRUEsU0FBU2EsaUJBQWlCRixZQUFZO0lBQ2xDLElBQUlHLE9BQU9ILGFBQWFNLFVBQVUsQ0FBQyxTQUFTO0lBQzVDLElBQUlmLFVBQVVTLGFBQWFNLFVBQVUsQ0FBQyxZQUFZO0lBQ2xELElBQUlDLE9BQU9DLFVBQVVSO0lBQ3JCLE9BQU87UUFBQ0csTUFBTUE7UUFBTVosU0FBU0E7UUFBU2dCLE1BQU1BO0lBQUk7QUFDcEQ7QUFFQSxTQUFTQyxVQUFVUixZQUFZO0lBQzNCLElBQUlTLGNBQWNULGFBQWFVLEtBQUssQ0FBQztJQUNyQyxPQUFPRCxjQUFjQSxZQUFZSCxVQUFVLENBQUMsUUFBUSxHQUFHO0FBQzNEO0FBRUEsU0FBU0YsMEJBQTBCSixZQUFZO0lBQzNDLElBQUlXLFFBQVFYLGFBQ1BZLFlBQVksQ0FBQyxTQUNiQSxZQUFZLENBQUMsV0FDYkEsWUFBWSxDQUFDLFdBQ2JOLFVBQVUsQ0FBQyxRQUFRO0lBQ3hCLE9BQU87UUFBQ0ssT0FBT0E7SUFBSztBQUN4QiIsInNvdXJjZXMiOlsid2VicGFjazovL3Jlc3VtZWJ1aWxkZXItYWkvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvZG9jeC9zdHlsZXMtcmVhZGVyLmpzP2NjN2QiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cy5yZWFkU3R5bGVzWG1sID0gcmVhZFN0eWxlc1htbDtcbmV4cG9ydHMuU3R5bGVzID0gU3R5bGVzO1xuZXhwb3J0cy5kZWZhdWx0U3R5bGVzID0gbmV3IFN0eWxlcyh7fSwge30pO1xuXG5mdW5jdGlvbiBTdHlsZXMocGFyYWdyYXBoU3R5bGVzLCBjaGFyYWN0ZXJTdHlsZXMsIHRhYmxlU3R5bGVzLCBudW1iZXJpbmdTdHlsZXMpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBmaW5kUGFyYWdyYXBoU3R5bGVCeUlkOiBmdW5jdGlvbihzdHlsZUlkKSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyYWdyYXBoU3R5bGVzW3N0eWxlSWRdO1xuICAgICAgICB9LFxuICAgICAgICBmaW5kQ2hhcmFjdGVyU3R5bGVCeUlkOiBmdW5jdGlvbihzdHlsZUlkKSB7XG4gICAgICAgICAgICByZXR1cm4gY2hhcmFjdGVyU3R5bGVzW3N0eWxlSWRdO1xuICAgICAgICB9LFxuICAgICAgICBmaW5kVGFibGVTdHlsZUJ5SWQ6IGZ1bmN0aW9uKHN0eWxlSWQpIHtcbiAgICAgICAgICAgIHJldHVybiB0YWJsZVN0eWxlc1tzdHlsZUlkXTtcbiAgICAgICAgfSxcbiAgICAgICAgZmluZE51bWJlcmluZ1N0eWxlQnlJZDogZnVuY3Rpb24oc3R5bGVJZCkge1xuICAgICAgICAgICAgcmV0dXJuIG51bWJlcmluZ1N0eWxlc1tzdHlsZUlkXTtcbiAgICAgICAgfVxuICAgIH07XG59XG5cblN0eWxlcy5FTVBUWSA9IG5ldyBTdHlsZXMoe30sIHt9LCB7fSwge30pO1xuXG5mdW5jdGlvbiByZWFkU3R5bGVzWG1sKHJvb3QpIHtcbiAgICB2YXIgcGFyYWdyYXBoU3R5bGVzID0ge307XG4gICAgdmFyIGNoYXJhY3RlclN0eWxlcyA9IHt9O1xuICAgIHZhciB0YWJsZVN0eWxlcyA9IHt9O1xuICAgIHZhciBudW1iZXJpbmdTdHlsZXMgPSB7fTtcblxuICAgIHZhciBzdHlsZXMgPSB7XG4gICAgICAgIFwicGFyYWdyYXBoXCI6IHBhcmFncmFwaFN0eWxlcyxcbiAgICAgICAgXCJjaGFyYWN0ZXJcIjogY2hhcmFjdGVyU3R5bGVzLFxuICAgICAgICBcInRhYmxlXCI6IHRhYmxlU3R5bGVzXG4gICAgfTtcblxuICAgIHJvb3QuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJ3OnN0eWxlXCIpLmZvckVhY2goZnVuY3Rpb24oc3R5bGVFbGVtZW50KSB7XG4gICAgICAgIHZhciBzdHlsZSA9IHJlYWRTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICAgICAgaWYgKHN0eWxlLnR5cGUgPT09IFwibnVtYmVyaW5nXCIpIHtcbiAgICAgICAgICAgIG51bWJlcmluZ1N0eWxlc1tzdHlsZS5zdHlsZUlkXSA9IHJlYWROdW1iZXJpbmdTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHZhciBzdHlsZVNldCA9IHN0eWxlc1tzdHlsZS50eXBlXTtcbiAgICAgICAgICAgIGlmIChzdHlsZVNldCkge1xuICAgICAgICAgICAgICAgIHN0eWxlU2V0W3N0eWxlLnN0eWxlSWRdID0gc3R5bGU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9KTtcblxuICAgIHJldHVybiBuZXcgU3R5bGVzKHBhcmFncmFwaFN0eWxlcywgY2hhcmFjdGVyU3R5bGVzLCB0YWJsZVN0eWxlcywgbnVtYmVyaW5nU3R5bGVzKTtcbn1cblxuZnVuY3Rpb24gcmVhZFN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgICB2YXIgdHlwZSA9IHN0eWxlRWxlbWVudC5hdHRyaWJ1dGVzW1widzp0eXBlXCJdO1xuICAgIHZhciBzdHlsZUlkID0gc3R5bGVFbGVtZW50LmF0dHJpYnV0ZXNbXCJ3OnN0eWxlSWRcIl07XG4gICAgdmFyIG5hbWUgPSBzdHlsZU5hbWUoc3R5bGVFbGVtZW50KTtcbiAgICByZXR1cm4ge3R5cGU6IHR5cGUsIHN0eWxlSWQ6IHN0eWxlSWQsIG5hbWU6IG5hbWV9O1xufVxuXG5mdW5jdGlvbiBzdHlsZU5hbWUoc3R5bGVFbGVtZW50KSB7XG4gICAgdmFyIG5hbWVFbGVtZW50ID0gc3R5bGVFbGVtZW50LmZpcnN0KFwidzpuYW1lXCIpO1xuICAgIHJldHVybiBuYW1lRWxlbWVudCA/IG5hbWVFbGVtZW50LmF0dHJpYnV0ZXNbXCJ3OnZhbFwiXSA6IG51bGw7XG59XG5cbmZ1bmN0aW9uIHJlYWROdW1iZXJpbmdTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gICAgdmFyIG51bUlkID0gc3R5bGVFbGVtZW50XG4gICAgICAgIC5maXJzdE9yRW1wdHkoXCJ3OnBQclwiKVxuICAgICAgICAuZmlyc3RPckVtcHR5KFwidzpudW1QclwiKVxuICAgICAgICAuZmlyc3RPckVtcHR5KFwidzpudW1JZFwiKVxuICAgICAgICAuYXR0cmlidXRlc1tcInc6dmFsXCJdO1xuICAgIHJldHVybiB7bnVtSWQ6IG51bUlkfTtcbn1cbiJdLCJuYW1lcyI6WyJleHBvcnRzIiwicmVhZFN0eWxlc1htbCIsIlN0eWxlcyIsImRlZmF1bHRTdHlsZXMiLCJwYXJhZ3JhcGhTdHlsZXMiLCJjaGFyYWN0ZXJTdHlsZXMiLCJ0YWJsZVN0eWxlcyIsIm51bWJlcmluZ1N0eWxlcyIsImZpbmRQYXJhZ3JhcGhTdHlsZUJ5SWQiLCJzdHlsZUlkIiwiZmluZENoYXJhY3RlclN0eWxlQnlJZCIsImZpbmRUYWJsZVN0eWxlQnlJZCIsImZpbmROdW1iZXJpbmdTdHlsZUJ5SWQiLCJFTVBUWSIsInJvb3QiLCJzdHlsZXMiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsImZvckVhY2giLCJzdHlsZUVsZW1lbnQiLCJzdHlsZSIsInJlYWRTdHlsZUVsZW1lbnQiLCJ0eXBlIiwicmVhZE51bWJlcmluZ1N0eWxlRWxlbWVudCIsInN0eWxlU2V0IiwiYXR0cmlidXRlcyIsIm5hbWUiLCJzdHlsZU5hbWUiLCJuYW1lRWxlbWVudCIsImZpcnN0IiwibnVtSWQiLCJmaXJzdE9yRW1wdHkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mammoth/lib/docx/styles-reader.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mammoth/lib/docx/uris.js":
/*!***********************************************!*\
  !*** ./node_modules/mammoth/lib/docx/uris.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("exports.uriToZipEntryName = uriToZipEntryName;\nexports.replaceFragment = replaceFragment;\nfunction uriToZipEntryName(base, uri) {\n    if (uri.charAt(0) === \"/\") {\n        return uri.substr(1);\n    } else {\n        // In general, we should check first and second for trailing and leading slashes,\n        // but in our specific case this seems to be sufficient\n        return base + \"/\" + uri;\n    }\n}\nfunction replaceFragment(uri, fragment) {\n    var hashIndex = uri.indexOf(\"#\");\n    if (hashIndex !== -1) {\n        uri = uri.substring(0, hashIndex);\n    }\n    return uri + \"#\" + fragment;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvZG9jeC91cmlzLmpzIiwibWFwcGluZ3MiOiJBQUFBQSx5QkFBeUIsR0FBR0M7QUFDNUJELHVCQUF1QixHQUFHRTtBQUUxQixTQUFTRCxrQkFBa0JFLElBQUksRUFBRUMsR0FBRztJQUNoQyxJQUFJQSxJQUFJQyxNQUFNLENBQUMsT0FBTyxLQUFLO1FBQ3ZCLE9BQU9ELElBQUlFLE1BQU0sQ0FBQztJQUN0QixPQUFPO1FBQ0gsaUZBQWlGO1FBQ2pGLHVEQUF1RDtRQUN2RCxPQUFPSCxPQUFPLE1BQU1DO0lBQ3hCO0FBQ0o7QUFHQSxTQUFTRixnQkFBZ0JFLEdBQUcsRUFBRUcsUUFBUTtJQUNsQyxJQUFJQyxZQUFZSixJQUFJSyxPQUFPLENBQUM7SUFDNUIsSUFBSUQsY0FBYyxDQUFDLEdBQUc7UUFDbEJKLE1BQU1BLElBQUlNLFNBQVMsQ0FBQyxHQUFHRjtJQUMzQjtJQUNBLE9BQU9KLE1BQU0sTUFBTUc7QUFDdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN1bWVidWlsZGVyLWFpLy4vbm9kZV9tb2R1bGVzL21hbW1vdGgvbGliL2RvY3gvdXJpcy5qcz83ODlmIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMudXJpVG9aaXBFbnRyeU5hbWUgPSB1cmlUb1ppcEVudHJ5TmFtZTtcbmV4cG9ydHMucmVwbGFjZUZyYWdtZW50ID0gcmVwbGFjZUZyYWdtZW50O1xuXG5mdW5jdGlvbiB1cmlUb1ppcEVudHJ5TmFtZShiYXNlLCB1cmkpIHtcbiAgICBpZiAodXJpLmNoYXJBdCgwKSA9PT0gXCIvXCIpIHtcbiAgICAgICAgcmV0dXJuIHVyaS5zdWJzdHIoMSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgLy8gSW4gZ2VuZXJhbCwgd2Ugc2hvdWxkIGNoZWNrIGZpcnN0IGFuZCBzZWNvbmQgZm9yIHRyYWlsaW5nIGFuZCBsZWFkaW5nIHNsYXNoZXMsXG4gICAgICAgIC8vIGJ1dCBpbiBvdXIgc3BlY2lmaWMgY2FzZSB0aGlzIHNlZW1zIHRvIGJlIHN1ZmZpY2llbnRcbiAgICAgICAgcmV0dXJuIGJhc2UgKyBcIi9cIiArIHVyaTtcbiAgICB9XG59XG5cblxuZnVuY3Rpb24gcmVwbGFjZUZyYWdtZW50KHVyaSwgZnJhZ21lbnQpIHtcbiAgICB2YXIgaGFzaEluZGV4ID0gdXJpLmluZGV4T2YoXCIjXCIpO1xuICAgIGlmIChoYXNoSW5kZXggIT09IC0xKSB7XG4gICAgICAgIHVyaSA9IHVyaS5zdWJzdHJpbmcoMCwgaGFzaEluZGV4KTtcbiAgICB9XG4gICAgcmV0dXJuIHVyaSArIFwiI1wiICsgZnJhZ21lbnQ7XG59XG4iXSwibmFtZXMiOlsiZXhwb3J0cyIsInVyaVRvWmlwRW50cnlOYW1lIiwicmVwbGFjZUZyYWdtZW50IiwiYmFzZSIsInVyaSIsImNoYXJBdCIsInN1YnN0ciIsImZyYWdtZW50IiwiaGFzaEluZGV4IiwiaW5kZXhPZiIsInN1YnN0cmluZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mammoth/lib/docx/uris.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mammoth/lib/html/ast.js":
/*!**********************************************!*\
  !*** ./node_modules/mammoth/lib/html/ast.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var htmlPaths = __webpack_require__(/*! ../styles/html-paths */ \"(rsc)/./node_modules/mammoth/lib/styles/html-paths.js\");\nfunction nonFreshElement(tagName, attributes, children) {\n    return elementWithTag(htmlPaths.element(tagName, attributes, {\n        fresh: false\n    }), children);\n}\nfunction freshElement(tagName, attributes, children) {\n    var tag = htmlPaths.element(tagName, attributes, {\n        fresh: true\n    });\n    return elementWithTag(tag, children);\n}\nfunction elementWithTag(tag, children) {\n    return {\n        type: \"element\",\n        tag: tag,\n        children: children || []\n    };\n}\nfunction text(value) {\n    return {\n        type: \"text\",\n        value: value\n    };\n}\nvar forceWrite = {\n    type: \"forceWrite\"\n};\nexports.freshElement = freshElement;\nexports.nonFreshElement = nonFreshElement;\nexports.elementWithTag = elementWithTag;\nexports.text = text;\nexports.forceWrite = forceWrite;\nvar voidTagNames = {\n    \"br\": true,\n    \"hr\": true,\n    \"img\": true,\n    \"input\": true\n};\nfunction isVoidElement(node) {\n    return node.children.length === 0 && voidTagNames[node.tag.tagName];\n}\nexports.isVoidElement = isVoidElement;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvaHRtbC9hc3QuanMiLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsWUFBWUMsbUJBQU9BLENBQUMsbUZBQXNCO0FBRzlDLFNBQVNDLGdCQUFnQkMsT0FBTyxFQUFFQyxVQUFVLEVBQUVDLFFBQVE7SUFDbEQsT0FBT0MsZUFDSE4sVUFBVU8sT0FBTyxDQUFDSixTQUFTQyxZQUFZO1FBQUNJLE9BQU87SUFBSyxJQUNwREg7QUFDUjtBQUVBLFNBQVNJLGFBQWFOLE9BQU8sRUFBRUMsVUFBVSxFQUFFQyxRQUFRO0lBQy9DLElBQUlLLE1BQU1WLFVBQVVPLE9BQU8sQ0FBQ0osU0FBU0MsWUFBWTtRQUFDSSxPQUFPO0lBQUk7SUFDN0QsT0FBT0YsZUFBZUksS0FBS0w7QUFDL0I7QUFFQSxTQUFTQyxlQUFlSSxHQUFHLEVBQUVMLFFBQVE7SUFDakMsT0FBTztRQUNITSxNQUFNO1FBQ05ELEtBQUtBO1FBQ0xMLFVBQVVBLFlBQVksRUFBRTtJQUM1QjtBQUNKO0FBRUEsU0FBU08sS0FBS0MsS0FBSztJQUNmLE9BQU87UUFDSEYsTUFBTTtRQUNORSxPQUFPQTtJQUNYO0FBQ0o7QUFFQSxJQUFJQyxhQUFhO0lBQ2JILE1BQU07QUFDVjtBQUVBSSxvQkFBb0IsR0FBR047QUFDdkJNLHVCQUF1QixHQUFHYjtBQUMxQmEsc0JBQXNCLEdBQUdUO0FBQ3pCUyxZQUFZLEdBQUdIO0FBQ2ZHLGtCQUFrQixHQUFHRDtBQUVyQixJQUFJRSxlQUFlO0lBQ2YsTUFBTTtJQUNOLE1BQU07SUFDTixPQUFPO0lBQ1AsU0FBUztBQUNiO0FBRUEsU0FBU0MsY0FBY0MsSUFBSTtJQUN2QixPQUFPLEtBQU1iLFFBQVEsQ0FBQ2MsTUFBTSxLQUFLLEtBQU1ILFlBQVksQ0FBQ0UsS0FBS1IsR0FBRyxDQUFDUCxPQUFPLENBQUM7QUFDekU7QUFFQVkscUJBQXFCLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdW1lYnVpbGRlci1haS8uL25vZGVfbW9kdWxlcy9tYW1tb3RoL2xpYi9odG1sL2FzdC5qcz9hMjdlIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBodG1sUGF0aHMgPSByZXF1aXJlKFwiLi4vc3R5bGVzL2h0bWwtcGF0aHNcIik7XG5cblxuZnVuY3Rpb24gbm9uRnJlc2hFbGVtZW50KHRhZ05hbWUsIGF0dHJpYnV0ZXMsIGNoaWxkcmVuKSB7XG4gICAgcmV0dXJuIGVsZW1lbnRXaXRoVGFnKFxuICAgICAgICBodG1sUGF0aHMuZWxlbWVudCh0YWdOYW1lLCBhdHRyaWJ1dGVzLCB7ZnJlc2g6IGZhbHNlfSksXG4gICAgICAgIGNoaWxkcmVuKTtcbn1cblxuZnVuY3Rpb24gZnJlc2hFbGVtZW50KHRhZ05hbWUsIGF0dHJpYnV0ZXMsIGNoaWxkcmVuKSB7XG4gICAgdmFyIHRhZyA9IGh0bWxQYXRocy5lbGVtZW50KHRhZ05hbWUsIGF0dHJpYnV0ZXMsIHtmcmVzaDogdHJ1ZX0pO1xuICAgIHJldHVybiBlbGVtZW50V2l0aFRhZyh0YWcsIGNoaWxkcmVuKTtcbn1cblxuZnVuY3Rpb24gZWxlbWVudFdpdGhUYWcodGFnLCBjaGlsZHJlbikge1xuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IFwiZWxlbWVudFwiLFxuICAgICAgICB0YWc6IHRhZyxcbiAgICAgICAgY2hpbGRyZW46IGNoaWxkcmVuIHx8IFtdXG4gICAgfTtcbn1cblxuZnVuY3Rpb24gdGV4dCh2YWx1ZSkge1xuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IFwidGV4dFwiLFxuICAgICAgICB2YWx1ZTogdmFsdWVcbiAgICB9O1xufVxuXG52YXIgZm9yY2VXcml0ZSA9IHtcbiAgICB0eXBlOiBcImZvcmNlV3JpdGVcIlxufTtcblxuZXhwb3J0cy5mcmVzaEVsZW1lbnQgPSBmcmVzaEVsZW1lbnQ7XG5leHBvcnRzLm5vbkZyZXNoRWxlbWVudCA9IG5vbkZyZXNoRWxlbWVudDtcbmV4cG9ydHMuZWxlbWVudFdpdGhUYWcgPSBlbGVtZW50V2l0aFRhZztcbmV4cG9ydHMudGV4dCA9IHRleHQ7XG5leHBvcnRzLmZvcmNlV3JpdGUgPSBmb3JjZVdyaXRlO1xuXG52YXIgdm9pZFRhZ05hbWVzID0ge1xuICAgIFwiYnJcIjogdHJ1ZSxcbiAgICBcImhyXCI6IHRydWUsXG4gICAgXCJpbWdcIjogdHJ1ZSxcbiAgICBcImlucHV0XCI6IHRydWVcbn07XG5cbmZ1bmN0aW9uIGlzVm9pZEVsZW1lbnQobm9kZSkge1xuICAgIHJldHVybiAobm9kZS5jaGlsZHJlbi5sZW5ndGggPT09IDApICYmIHZvaWRUYWdOYW1lc1tub2RlLnRhZy50YWdOYW1lXTtcbn1cblxuZXhwb3J0cy5pc1ZvaWRFbGVtZW50ID0gaXNWb2lkRWxlbWVudDtcbiJdLCJuYW1lcyI6WyJodG1sUGF0aHMiLCJyZXF1aXJlIiwibm9uRnJlc2hFbGVtZW50IiwidGFnTmFtZSIsImF0dHJpYnV0ZXMiLCJjaGlsZHJlbiIsImVsZW1lbnRXaXRoVGFnIiwiZWxlbWVudCIsImZyZXNoIiwiZnJlc2hFbGVtZW50IiwidGFnIiwidHlwZSIsInRleHQiLCJ2YWx1ZSIsImZvcmNlV3JpdGUiLCJleHBvcnRzIiwidm9pZFRhZ05hbWVzIiwiaXNWb2lkRWxlbWVudCIsIm5vZGUiLCJsZW5ndGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mammoth/lib/html/ast.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mammoth/lib/html/index.js":
/*!************************************************!*\
  !*** ./node_modules/mammoth/lib/html/index.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var ast = __webpack_require__(/*! ./ast */ \"(rsc)/./node_modules/mammoth/lib/html/ast.js\");\nexports.freshElement = ast.freshElement;\nexports.nonFreshElement = ast.nonFreshElement;\nexports.elementWithTag = ast.elementWithTag;\nexports.text = ast.text;\nexports.forceWrite = ast.forceWrite;\nexports.simplify = __webpack_require__(/*! ./simplify */ \"(rsc)/./node_modules/mammoth/lib/html/simplify.js\");\nfunction write(writer, nodes) {\n    nodes.forEach(function(node) {\n        writeNode(writer, node);\n    });\n}\nfunction writeNode(writer, node) {\n    toStrings[node.type](writer, node);\n}\nvar toStrings = {\n    element: generateElementString,\n    text: generateTextString,\n    forceWrite: function() {}\n};\nfunction generateElementString(writer, node) {\n    if (ast.isVoidElement(node)) {\n        writer.selfClosing(node.tag.tagName, node.tag.attributes);\n    } else {\n        writer.open(node.tag.tagName, node.tag.attributes);\n        write(writer, node.children);\n        writer.close(node.tag.tagName);\n    }\n}\nfunction generateTextString(writer, node) {\n    writer.text(node.value);\n}\nexports.write = write;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvaHRtbC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxNQUFNQyxtQkFBT0EsQ0FBQywyREFBTztBQUV6QkMsb0JBQW9CLEdBQUdGLElBQUlHLFlBQVk7QUFDdkNELHVCQUF1QixHQUFHRixJQUFJSSxlQUFlO0FBQzdDRixzQkFBc0IsR0FBR0YsSUFBSUssY0FBYztBQUMzQ0gsWUFBWSxHQUFHRixJQUFJTSxJQUFJO0FBQ3ZCSixrQkFBa0IsR0FBR0YsSUFBSU8sVUFBVTtBQUVuQ0wsNkdBQXdDO0FBRXhDLFNBQVNPLE1BQU1DLE1BQU0sRUFBRUMsS0FBSztJQUN4QkEsTUFBTUMsT0FBTyxDQUFDLFNBQVNDLElBQUk7UUFDdkJDLFVBQVVKLFFBQVFHO0lBQ3RCO0FBQ0o7QUFFQSxTQUFTQyxVQUFVSixNQUFNLEVBQUVHLElBQUk7SUFDM0JFLFNBQVMsQ0FBQ0YsS0FBS0csSUFBSSxDQUFDLENBQUNOLFFBQVFHO0FBQ2pDO0FBRUEsSUFBSUUsWUFBWTtJQUNaRSxTQUFTQztJQUNUWixNQUFNYTtJQUNOWixZQUFZLFlBQWE7QUFDN0I7QUFFQSxTQUFTVyxzQkFBc0JSLE1BQU0sRUFBRUcsSUFBSTtJQUN2QyxJQUFJYixJQUFJb0IsYUFBYSxDQUFDUCxPQUFPO1FBQ3pCSCxPQUFPVyxXQUFXLENBQUNSLEtBQUtTLEdBQUcsQ0FBQ0MsT0FBTyxFQUFFVixLQUFLUyxHQUFHLENBQUNFLFVBQVU7SUFDNUQsT0FBTztRQUNIZCxPQUFPZSxJQUFJLENBQUNaLEtBQUtTLEdBQUcsQ0FBQ0MsT0FBTyxFQUFFVixLQUFLUyxHQUFHLENBQUNFLFVBQVU7UUFDakRmLE1BQU1DLFFBQVFHLEtBQUthLFFBQVE7UUFDM0JoQixPQUFPaUIsS0FBSyxDQUFDZCxLQUFLUyxHQUFHLENBQUNDLE9BQU87SUFDakM7QUFDSjtBQUVBLFNBQVNKLG1CQUFtQlQsTUFBTSxFQUFFRyxJQUFJO0lBQ3BDSCxPQUFPSixJQUFJLENBQUNPLEtBQUtlLEtBQUs7QUFDMUI7QUFFQTFCLGFBQWEsR0FBR08iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN1bWVidWlsZGVyLWFpLy4vbm9kZV9tb2R1bGVzL21hbW1vdGgvbGliL2h0bWwvaW5kZXguanM/MzY4YyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXN0ID0gcmVxdWlyZShcIi4vYXN0XCIpO1xuXG5leHBvcnRzLmZyZXNoRWxlbWVudCA9IGFzdC5mcmVzaEVsZW1lbnQ7XG5leHBvcnRzLm5vbkZyZXNoRWxlbWVudCA9IGFzdC5ub25GcmVzaEVsZW1lbnQ7XG5leHBvcnRzLmVsZW1lbnRXaXRoVGFnID0gYXN0LmVsZW1lbnRXaXRoVGFnO1xuZXhwb3J0cy50ZXh0ID0gYXN0LnRleHQ7XG5leHBvcnRzLmZvcmNlV3JpdGUgPSBhc3QuZm9yY2VXcml0ZTtcblxuZXhwb3J0cy5zaW1wbGlmeSA9IHJlcXVpcmUoXCIuL3NpbXBsaWZ5XCIpO1xuXG5mdW5jdGlvbiB3cml0ZSh3cml0ZXIsIG5vZGVzKSB7XG4gICAgbm9kZXMuZm9yRWFjaChmdW5jdGlvbihub2RlKSB7XG4gICAgICAgIHdyaXRlTm9kZSh3cml0ZXIsIG5vZGUpO1xuICAgIH0pO1xufVxuXG5mdW5jdGlvbiB3cml0ZU5vZGUod3JpdGVyLCBub2RlKSB7XG4gICAgdG9TdHJpbmdzW25vZGUudHlwZV0od3JpdGVyLCBub2RlKTtcbn1cblxudmFyIHRvU3RyaW5ncyA9IHtcbiAgICBlbGVtZW50OiBnZW5lcmF0ZUVsZW1lbnRTdHJpbmcsXG4gICAgdGV4dDogZ2VuZXJhdGVUZXh0U3RyaW5nLFxuICAgIGZvcmNlV3JpdGU6IGZ1bmN0aW9uKCkgeyB9XG59O1xuXG5mdW5jdGlvbiBnZW5lcmF0ZUVsZW1lbnRTdHJpbmcod3JpdGVyLCBub2RlKSB7XG4gICAgaWYgKGFzdC5pc1ZvaWRFbGVtZW50KG5vZGUpKSB7XG4gICAgICAgIHdyaXRlci5zZWxmQ2xvc2luZyhub2RlLnRhZy50YWdOYW1lLCBub2RlLnRhZy5hdHRyaWJ1dGVzKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICB3cml0ZXIub3Blbihub2RlLnRhZy50YWdOYW1lLCBub2RlLnRhZy5hdHRyaWJ1dGVzKTtcbiAgICAgICAgd3JpdGUod3JpdGVyLCBub2RlLmNoaWxkcmVuKTtcbiAgICAgICAgd3JpdGVyLmNsb3NlKG5vZGUudGFnLnRhZ05hbWUpO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gZ2VuZXJhdGVUZXh0U3RyaW5nKHdyaXRlciwgbm9kZSkge1xuICAgIHdyaXRlci50ZXh0KG5vZGUudmFsdWUpO1xufVxuXG5leHBvcnRzLndyaXRlID0gd3JpdGU7XG4iXSwibmFtZXMiOlsiYXN0IiwicmVxdWlyZSIsImV4cG9ydHMiLCJmcmVzaEVsZW1lbnQiLCJub25GcmVzaEVsZW1lbnQiLCJlbGVtZW50V2l0aFRhZyIsInRleHQiLCJmb3JjZVdyaXRlIiwic2ltcGxpZnkiLCJ3cml0ZSIsIndyaXRlciIsIm5vZGVzIiwiZm9yRWFjaCIsIm5vZGUiLCJ3cml0ZU5vZGUiLCJ0b1N0cmluZ3MiLCJ0eXBlIiwiZWxlbWVudCIsImdlbmVyYXRlRWxlbWVudFN0cmluZyIsImdlbmVyYXRlVGV4dFN0cmluZyIsImlzVm9pZEVsZW1lbnQiLCJzZWxmQ2xvc2luZyIsInRhZyIsInRhZ05hbWUiLCJhdHRyaWJ1dGVzIiwib3BlbiIsImNoaWxkcmVuIiwiY2xvc2UiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mammoth/lib/html/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mammoth/lib/html/simplify.js":
/*!***************************************************!*\
  !*** ./node_modules/mammoth/lib/html/simplify.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var _ = __webpack_require__(/*! underscore */ \"(rsc)/./node_modules/underscore/modules/index-all.js\");\nvar ast = __webpack_require__(/*! ./ast */ \"(rsc)/./node_modules/mammoth/lib/html/ast.js\");\nfunction simplify(nodes) {\n    return collapse(removeEmpty(nodes));\n}\nfunction collapse(nodes) {\n    var children = [];\n    nodes.map(collapseNode).forEach(function(child) {\n        appendChild(children, child);\n    });\n    return children;\n}\nfunction collapseNode(node) {\n    return collapsers[node.type](node);\n}\nvar collapsers = {\n    element: collapseElement,\n    text: identity,\n    forceWrite: identity\n};\nfunction collapseElement(node) {\n    return ast.elementWithTag(node.tag, collapse(node.children));\n}\nfunction identity(value) {\n    return value;\n}\nfunction appendChild(children, child) {\n    var lastChild = children[children.length - 1];\n    if (child.type === \"element\" && !child.tag.fresh && lastChild && lastChild.type === \"element\" && child.tag.matchesElement(lastChild.tag)) {\n        if (child.tag.separator) {\n            appendChild(lastChild.children, ast.text(child.tag.separator));\n        }\n        child.children.forEach(function(grandChild) {\n            // Mutation is fine since simplifying elements create a copy of the children.\n            appendChild(lastChild.children, grandChild);\n        });\n    } else {\n        children.push(child);\n    }\n}\nfunction removeEmpty(nodes) {\n    return flatMap(nodes, function(node) {\n        return emptiers[node.type](node);\n    });\n}\nfunction flatMap(values, func) {\n    return _.flatten(_.map(values, func), true);\n}\nvar emptiers = {\n    element: elementEmptier,\n    text: textEmptier,\n    forceWrite: neverEmpty\n};\nfunction neverEmpty(node) {\n    return [\n        node\n    ];\n}\nfunction elementEmptier(element) {\n    var children = removeEmpty(element.children);\n    if (children.length === 0 && !ast.isVoidElement(element)) {\n        return [];\n    } else {\n        return [\n            ast.elementWithTag(element.tag, children)\n        ];\n    }\n}\nfunction textEmptier(node) {\n    if (node.value.length === 0) {\n        return [];\n    } else {\n        return [\n            node\n        ];\n    }\n}\nmodule.exports = simplify;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvaHRtbC9zaW1wbGlmeS5qcyIsIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxJQUFJQyxtQkFBT0EsQ0FBQyx3RUFBWTtBQUU1QixJQUFJQyxNQUFNRCxtQkFBT0EsQ0FBQywyREFBTztBQUV6QixTQUFTRSxTQUFTQyxLQUFLO0lBQ25CLE9BQU9DLFNBQVNDLFlBQVlGO0FBQ2hDO0FBRUEsU0FBU0MsU0FBU0QsS0FBSztJQUNuQixJQUFJRyxXQUFXLEVBQUU7SUFFakJILE1BQU1JLEdBQUcsQ0FBQ0MsY0FBY0MsT0FBTyxDQUFDLFNBQVNDLEtBQUs7UUFDMUNDLFlBQVlMLFVBQVVJO0lBQzFCO0lBQ0EsT0FBT0o7QUFDWDtBQUVBLFNBQVNFLGFBQWFJLElBQUk7SUFDdEIsT0FBT0MsVUFBVSxDQUFDRCxLQUFLRSxJQUFJLENBQUMsQ0FBQ0Y7QUFDakM7QUFFQSxJQUFJQyxhQUFhO0lBQ2JFLFNBQVNDO0lBQ1RDLE1BQU1DO0lBQ05DLFlBQVlEO0FBQ2hCO0FBRUEsU0FBU0YsZ0JBQWdCSixJQUFJO0lBQ3pCLE9BQU9YLElBQUltQixjQUFjLENBQUNSLEtBQUtTLEdBQUcsRUFBRWpCLFNBQVNRLEtBQUtOLFFBQVE7QUFDOUQ7QUFFQSxTQUFTWSxTQUFTSSxLQUFLO0lBQ25CLE9BQU9BO0FBQ1g7QUFFQSxTQUFTWCxZQUFZTCxRQUFRLEVBQUVJLEtBQUs7SUFDaEMsSUFBSWEsWUFBWWpCLFFBQVEsQ0FBQ0EsU0FBU2tCLE1BQU0sR0FBRyxFQUFFO0lBQzdDLElBQUlkLE1BQU1JLElBQUksS0FBSyxhQUFhLENBQUNKLE1BQU1XLEdBQUcsQ0FBQ0ksS0FBSyxJQUFJRixhQUFhQSxVQUFVVCxJQUFJLEtBQUssYUFBYUosTUFBTVcsR0FBRyxDQUFDSyxjQUFjLENBQUNILFVBQVVGLEdBQUcsR0FBRztRQUN0SSxJQUFJWCxNQUFNVyxHQUFHLENBQUNNLFNBQVMsRUFBRTtZQUNyQmhCLFlBQVlZLFVBQVVqQixRQUFRLEVBQUVMLElBQUlnQixJQUFJLENBQUNQLE1BQU1XLEdBQUcsQ0FBQ00sU0FBUztRQUNoRTtRQUNBakIsTUFBTUosUUFBUSxDQUFDRyxPQUFPLENBQUMsU0FBU21CLFVBQVU7WUFDdEMsNkVBQTZFO1lBQzdFakIsWUFBWVksVUFBVWpCLFFBQVEsRUFBRXNCO1FBQ3BDO0lBQ0osT0FBTztRQUNIdEIsU0FBU3VCLElBQUksQ0FBQ25CO0lBQ2xCO0FBQ0o7QUFFQSxTQUFTTCxZQUFZRixLQUFLO0lBQ3RCLE9BQU8yQixRQUFRM0IsT0FBTyxTQUFTUyxJQUFJO1FBQy9CLE9BQU9tQixRQUFRLENBQUNuQixLQUFLRSxJQUFJLENBQUMsQ0FBQ0Y7SUFDL0I7QUFDSjtBQUVBLFNBQVNrQixRQUFRRSxNQUFNLEVBQUVDLElBQUk7SUFDekIsT0FBT2xDLEVBQUVtQyxPQUFPLENBQUNuQyxFQUFFUSxHQUFHLENBQUN5QixRQUFRQyxPQUFPO0FBQzFDO0FBRUEsSUFBSUYsV0FBVztJQUNYaEIsU0FBU29CO0lBQ1RsQixNQUFNbUI7SUFDTmpCLFlBQVlrQjtBQUNoQjtBQUVBLFNBQVNBLFdBQVd6QixJQUFJO0lBQ3BCLE9BQU87UUFBQ0E7S0FBSztBQUNqQjtBQUVBLFNBQVN1QixlQUFlcEIsT0FBTztJQUMzQixJQUFJVCxXQUFXRCxZQUFZVSxRQUFRVCxRQUFRO0lBQzNDLElBQUlBLFNBQVNrQixNQUFNLEtBQUssS0FBSyxDQUFDdkIsSUFBSXFDLGFBQWEsQ0FBQ3ZCLFVBQVU7UUFDdEQsT0FBTyxFQUFFO0lBQ2IsT0FBTztRQUNILE9BQU87WUFBQ2QsSUFBSW1CLGNBQWMsQ0FBQ0wsUUFBUU0sR0FBRyxFQUFFZjtTQUFVO0lBQ3REO0FBQ0o7QUFFQSxTQUFTOEIsWUFBWXhCLElBQUk7SUFDckIsSUFBSUEsS0FBS1UsS0FBSyxDQUFDRSxNQUFNLEtBQUssR0FBRztRQUN6QixPQUFPLEVBQUU7SUFDYixPQUFPO1FBQ0gsT0FBTztZQUFDWjtTQUFLO0lBQ2pCO0FBQ0o7QUFFQTJCLE9BQU9DLE9BQU8sR0FBR3RDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdW1lYnVpbGRlci1haS8uL25vZGVfbW9kdWxlcy9tYW1tb3RoL2xpYi9odG1sL3NpbXBsaWZ5LmpzPzRhMGEiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF8gPSByZXF1aXJlKFwidW5kZXJzY29yZVwiKTtcblxudmFyIGFzdCA9IHJlcXVpcmUoXCIuL2FzdFwiKTtcblxuZnVuY3Rpb24gc2ltcGxpZnkobm9kZXMpIHtcbiAgICByZXR1cm4gY29sbGFwc2UocmVtb3ZlRW1wdHkobm9kZXMpKTtcbn1cblxuZnVuY3Rpb24gY29sbGFwc2Uobm9kZXMpIHtcbiAgICB2YXIgY2hpbGRyZW4gPSBbXTtcbiAgICBcbiAgICBub2Rlcy5tYXAoY29sbGFwc2VOb2RlKS5mb3JFYWNoKGZ1bmN0aW9uKGNoaWxkKSB7XG4gICAgICAgIGFwcGVuZENoaWxkKGNoaWxkcmVuLCBjaGlsZCk7XG4gICAgfSk7XG4gICAgcmV0dXJuIGNoaWxkcmVuO1xufVxuXG5mdW5jdGlvbiBjb2xsYXBzZU5vZGUobm9kZSkge1xuICAgIHJldHVybiBjb2xsYXBzZXJzW25vZGUudHlwZV0obm9kZSk7XG59XG5cbnZhciBjb2xsYXBzZXJzID0ge1xuICAgIGVsZW1lbnQ6IGNvbGxhcHNlRWxlbWVudCxcbiAgICB0ZXh0OiBpZGVudGl0eSxcbiAgICBmb3JjZVdyaXRlOiBpZGVudGl0eVxufTtcblxuZnVuY3Rpb24gY29sbGFwc2VFbGVtZW50KG5vZGUpIHtcbiAgICByZXR1cm4gYXN0LmVsZW1lbnRXaXRoVGFnKG5vZGUudGFnLCBjb2xsYXBzZShub2RlLmNoaWxkcmVuKSk7XG59XG5cbmZ1bmN0aW9uIGlkZW50aXR5KHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlO1xufVxuXG5mdW5jdGlvbiBhcHBlbmRDaGlsZChjaGlsZHJlbiwgY2hpbGQpIHtcbiAgICB2YXIgbGFzdENoaWxkID0gY2hpbGRyZW5bY2hpbGRyZW4ubGVuZ3RoIC0gMV07XG4gICAgaWYgKGNoaWxkLnR5cGUgPT09IFwiZWxlbWVudFwiICYmICFjaGlsZC50YWcuZnJlc2ggJiYgbGFzdENoaWxkICYmIGxhc3RDaGlsZC50eXBlID09PSBcImVsZW1lbnRcIiAmJiBjaGlsZC50YWcubWF0Y2hlc0VsZW1lbnQobGFzdENoaWxkLnRhZykpIHtcbiAgICAgICAgaWYgKGNoaWxkLnRhZy5zZXBhcmF0b3IpIHtcbiAgICAgICAgICAgIGFwcGVuZENoaWxkKGxhc3RDaGlsZC5jaGlsZHJlbiwgYXN0LnRleHQoY2hpbGQudGFnLnNlcGFyYXRvcikpO1xuICAgICAgICB9XG4gICAgICAgIGNoaWxkLmNoaWxkcmVuLmZvckVhY2goZnVuY3Rpb24oZ3JhbmRDaGlsZCkge1xuICAgICAgICAgICAgLy8gTXV0YXRpb24gaXMgZmluZSBzaW5jZSBzaW1wbGlmeWluZyBlbGVtZW50cyBjcmVhdGUgYSBjb3B5IG9mIHRoZSBjaGlsZHJlbi5cbiAgICAgICAgICAgIGFwcGVuZENoaWxkKGxhc3RDaGlsZC5jaGlsZHJlbiwgZ3JhbmRDaGlsZCk7XG4gICAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGNoaWxkcmVuLnB1c2goY2hpbGQpO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gcmVtb3ZlRW1wdHkobm9kZXMpIHtcbiAgICByZXR1cm4gZmxhdE1hcChub2RlcywgZnVuY3Rpb24obm9kZSkge1xuICAgICAgICByZXR1cm4gZW1wdGllcnNbbm9kZS50eXBlXShub2RlKTtcbiAgICB9KTtcbn1cblxuZnVuY3Rpb24gZmxhdE1hcCh2YWx1ZXMsIGZ1bmMpIHtcbiAgICByZXR1cm4gXy5mbGF0dGVuKF8ubWFwKHZhbHVlcywgZnVuYyksIHRydWUpO1xufVxuXG52YXIgZW1wdGllcnMgPSB7XG4gICAgZWxlbWVudDogZWxlbWVudEVtcHRpZXIsXG4gICAgdGV4dDogdGV4dEVtcHRpZXIsXG4gICAgZm9yY2VXcml0ZTogbmV2ZXJFbXB0eVxufTtcblxuZnVuY3Rpb24gbmV2ZXJFbXB0eShub2RlKSB7XG4gICAgcmV0dXJuIFtub2RlXTtcbn1cblxuZnVuY3Rpb24gZWxlbWVudEVtcHRpZXIoZWxlbWVudCkge1xuICAgIHZhciBjaGlsZHJlbiA9IHJlbW92ZUVtcHR5KGVsZW1lbnQuY2hpbGRyZW4pO1xuICAgIGlmIChjaGlsZHJlbi5sZW5ndGggPT09IDAgJiYgIWFzdC5pc1ZvaWRFbGVtZW50KGVsZW1lbnQpKSB7XG4gICAgICAgIHJldHVybiBbXTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gW2FzdC5lbGVtZW50V2l0aFRhZyhlbGVtZW50LnRhZywgY2hpbGRyZW4pXTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIHRleHRFbXB0aWVyKG5vZGUpIHtcbiAgICBpZiAobm9kZS52YWx1ZS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgcmV0dXJuIFtdO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBbbm9kZV07XG4gICAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNpbXBsaWZ5O1xuIl0sIm5hbWVzIjpbIl8iLCJyZXF1aXJlIiwiYXN0Iiwic2ltcGxpZnkiLCJub2RlcyIsImNvbGxhcHNlIiwicmVtb3ZlRW1wdHkiLCJjaGlsZHJlbiIsIm1hcCIsImNvbGxhcHNlTm9kZSIsImZvckVhY2giLCJjaGlsZCIsImFwcGVuZENoaWxkIiwibm9kZSIsImNvbGxhcHNlcnMiLCJ0eXBlIiwiZWxlbWVudCIsImNvbGxhcHNlRWxlbWVudCIsInRleHQiLCJpZGVudGl0eSIsImZvcmNlV3JpdGUiLCJlbGVtZW50V2l0aFRhZyIsInRhZyIsInZhbHVlIiwibGFzdENoaWxkIiwibGVuZ3RoIiwiZnJlc2giLCJtYXRjaGVzRWxlbWVudCIsInNlcGFyYXRvciIsImdyYW5kQ2hpbGQiLCJwdXNoIiwiZmxhdE1hcCIsImVtcHRpZXJzIiwidmFsdWVzIiwiZnVuYyIsImZsYXR0ZW4iLCJlbGVtZW50RW1wdGllciIsInRleHRFbXB0aWVyIiwibmV2ZXJFbXB0eSIsImlzVm9pZEVsZW1lbnQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mammoth/lib/html/simplify.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mammoth/lib/images.js":
/*!********************************************!*\
  !*** ./node_modules/mammoth/lib/images.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var _ = __webpack_require__(/*! underscore */ \"(rsc)/./node_modules/underscore/modules/index-all.js\");\nvar promises = __webpack_require__(/*! ./promises */ \"(rsc)/./node_modules/mammoth/lib/promises.js\");\nvar Html = __webpack_require__(/*! ./html */ \"(rsc)/./node_modules/mammoth/lib/html/index.js\");\nexports.imgElement = imgElement;\nfunction imgElement(func) {\n    return function(element, messages) {\n        return promises.when(func(element)).then(function(result) {\n            var attributes = {};\n            if (element.altText) {\n                attributes.alt = element.altText;\n            }\n            _.extend(attributes, result);\n            return [\n                Html.freshElement(\"img\", attributes)\n            ];\n        });\n    };\n}\n// Undocumented, but retained for backwards-compatibility with 0.3.x\nexports.inline = exports.imgElement;\nexports.dataUri = imgElement(function(element) {\n    return element.readAsBase64String().then(function(imageBuffer) {\n        return {\n            src: \"data:\" + element.contentType + \";base64,\" + imageBuffer\n        };\n    });\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvaW1hZ2VzLmpzIiwibWFwcGluZ3MiOiJBQUFBLElBQUlBLElBQUlDLG1CQUFPQSxDQUFDLHdFQUFZO0FBRTVCLElBQUlDLFdBQVdELG1CQUFPQSxDQUFDLGdFQUFZO0FBQ25DLElBQUlFLE9BQU9GLG1CQUFPQSxDQUFDLDhEQUFRO0FBRTNCRyxrQkFBa0IsR0FBR0M7QUFFckIsU0FBU0EsV0FBV0MsSUFBSTtJQUNwQixPQUFPLFNBQVNDLE9BQU8sRUFBRUMsUUFBUTtRQUM3QixPQUFPTixTQUFTTyxJQUFJLENBQUNILEtBQUtDLFVBQVVHLElBQUksQ0FBQyxTQUFTQyxNQUFNO1lBQ3BELElBQUlDLGFBQWEsQ0FBQztZQUNsQixJQUFJTCxRQUFRTSxPQUFPLEVBQUU7Z0JBQ2pCRCxXQUFXRSxHQUFHLEdBQUdQLFFBQVFNLE9BQU87WUFDcEM7WUFDQWIsRUFBRWUsTUFBTSxDQUFDSCxZQUFZRDtZQUVyQixPQUFPO2dCQUFDUixLQUFLYSxZQUFZLENBQUMsT0FBT0o7YUFBWTtRQUNqRDtJQUNKO0FBQ0o7QUFFQSxvRUFBb0U7QUFDcEVSLGNBQWMsR0FBR0EsUUFBUUMsVUFBVTtBQUVuQ0QsZUFBZSxHQUFHQyxXQUFXLFNBQVNFLE9BQU87SUFDekMsT0FBT0EsUUFBUVksa0JBQWtCLEdBQUdULElBQUksQ0FBQyxTQUFTVSxXQUFXO1FBQ3pELE9BQU87WUFDSEMsS0FBSyxVQUFVZCxRQUFRZSxXQUFXLEdBQUcsYUFBYUY7UUFDdEQ7SUFDSjtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdW1lYnVpbGRlci1haS8uL25vZGVfbW9kdWxlcy9tYW1tb3RoL2xpYi9pbWFnZXMuanM/MzM1OCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgXyA9IHJlcXVpcmUoXCJ1bmRlcnNjb3JlXCIpO1xuXG52YXIgcHJvbWlzZXMgPSByZXF1aXJlKFwiLi9wcm9taXNlc1wiKTtcbnZhciBIdG1sID0gcmVxdWlyZShcIi4vaHRtbFwiKTtcblxuZXhwb3J0cy5pbWdFbGVtZW50ID0gaW1nRWxlbWVudDtcblxuZnVuY3Rpb24gaW1nRWxlbWVudChmdW5jKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKGVsZW1lbnQsIG1lc3NhZ2VzKSB7XG4gICAgICAgIHJldHVybiBwcm9taXNlcy53aGVuKGZ1bmMoZWxlbWVudCkpLnRoZW4oZnVuY3Rpb24ocmVzdWx0KSB7XG4gICAgICAgICAgICB2YXIgYXR0cmlidXRlcyA9IHt9O1xuICAgICAgICAgICAgaWYgKGVsZW1lbnQuYWx0VGV4dCkge1xuICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXMuYWx0ID0gZWxlbWVudC5hbHRUZXh0O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXy5leHRlbmQoYXR0cmlidXRlcywgcmVzdWx0KTtcblxuICAgICAgICAgICAgcmV0dXJuIFtIdG1sLmZyZXNoRWxlbWVudChcImltZ1wiLCBhdHRyaWJ1dGVzKV07XG4gICAgICAgIH0pO1xuICAgIH07XG59XG5cbi8vIFVuZG9jdW1lbnRlZCwgYnV0IHJldGFpbmVkIGZvciBiYWNrd2FyZHMtY29tcGF0aWJpbGl0eSB3aXRoIDAuMy54XG5leHBvcnRzLmlubGluZSA9IGV4cG9ydHMuaW1nRWxlbWVudDtcblxuZXhwb3J0cy5kYXRhVXJpID0gaW1nRWxlbWVudChmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgcmV0dXJuIGVsZW1lbnQucmVhZEFzQmFzZTY0U3RyaW5nKCkudGhlbihmdW5jdGlvbihpbWFnZUJ1ZmZlcikge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgc3JjOiBcImRhdGE6XCIgKyBlbGVtZW50LmNvbnRlbnRUeXBlICsgXCI7YmFzZTY0LFwiICsgaW1hZ2VCdWZmZXJcbiAgICAgICAgfTtcbiAgICB9KTtcbn0pO1xuIl0sIm5hbWVzIjpbIl8iLCJyZXF1aXJlIiwicHJvbWlzZXMiLCJIdG1sIiwiZXhwb3J0cyIsImltZ0VsZW1lbnQiLCJmdW5jIiwiZWxlbWVudCIsIm1lc3NhZ2VzIiwid2hlbiIsInRoZW4iLCJyZXN1bHQiLCJhdHRyaWJ1dGVzIiwiYWx0VGV4dCIsImFsdCIsImV4dGVuZCIsImZyZXNoRWxlbWVudCIsImlubGluZSIsImRhdGFVcmkiLCJyZWFkQXNCYXNlNjRTdHJpbmciLCJpbWFnZUJ1ZmZlciIsInNyYyIsImNvbnRlbnRUeXBlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mammoth/lib/images.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mammoth/lib/index.js":
/*!*******************************************!*\
  !*** ./node_modules/mammoth/lib/index.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var _ = __webpack_require__(/*! underscore */ \"(rsc)/./node_modules/underscore/modules/index-all.js\");\nvar docxReader = __webpack_require__(/*! ./docx/docx-reader */ \"(rsc)/./node_modules/mammoth/lib/docx/docx-reader.js\");\nvar docxStyleMap = __webpack_require__(/*! ./docx/style-map */ \"(rsc)/./node_modules/mammoth/lib/docx/style-map.js\");\nvar DocumentConverter = (__webpack_require__(/*! ./document-to-html */ \"(rsc)/./node_modules/mammoth/lib/document-to-html.js\").DocumentConverter);\nvar convertElementToRawText = (__webpack_require__(/*! ./raw-text */ \"(rsc)/./node_modules/mammoth/lib/raw-text.js\").convertElementToRawText);\nvar readStyle = (__webpack_require__(/*! ./style-reader */ \"(rsc)/./node_modules/mammoth/lib/style-reader.js\").readStyle);\nvar readOptions = (__webpack_require__(/*! ./options-reader */ \"(rsc)/./node_modules/mammoth/lib/options-reader.js\").readOptions);\nvar unzip = __webpack_require__(/*! ./unzip */ \"(rsc)/./node_modules/mammoth/lib/unzip.js\");\nvar Result = (__webpack_require__(/*! ./results */ \"(rsc)/./node_modules/mammoth/lib/results.js\").Result);\nexports.convertToHtml = convertToHtml;\nexports.convertToMarkdown = convertToMarkdown;\nexports.convert = convert;\nexports.extractRawText = extractRawText;\nexports.images = __webpack_require__(/*! ./images */ \"(rsc)/./node_modules/mammoth/lib/images.js\");\nexports.transforms = __webpack_require__(/*! ./transforms */ \"(rsc)/./node_modules/mammoth/lib/transforms.js\");\nexports.underline = __webpack_require__(/*! ./underline */ \"(rsc)/./node_modules/mammoth/lib/underline.js\");\nexports.embedStyleMap = embedStyleMap;\nexports.readEmbeddedStyleMap = readEmbeddedStyleMap;\nfunction convertToHtml(input, options) {\n    return convert(input, options);\n}\nfunction convertToMarkdown(input, options) {\n    var markdownOptions = Object.create(options || {});\n    markdownOptions.outputFormat = \"markdown\";\n    return convert(input, markdownOptions);\n}\nfunction convert(input, options) {\n    options = readOptions(options);\n    return unzip.openZip(input).tap(function(docxFile) {\n        return docxStyleMap.readStyleMap(docxFile).then(function(styleMap) {\n            options.embeddedStyleMap = styleMap;\n        });\n    }).then(function(docxFile) {\n        return docxReader.read(docxFile, input).then(function(documentResult) {\n            return documentResult.map(options.transformDocument);\n        }).then(function(documentResult) {\n            return convertDocumentToHtml(documentResult, options);\n        });\n    });\n}\nfunction readEmbeddedStyleMap(input) {\n    return unzip.openZip(input).then(docxStyleMap.readStyleMap);\n}\nfunction convertDocumentToHtml(documentResult, options) {\n    var styleMapResult = parseStyleMap(options.readStyleMap());\n    var parsedOptions = _.extend({}, options, {\n        styleMap: styleMapResult.value\n    });\n    var documentConverter = new DocumentConverter(parsedOptions);\n    return documentResult.flatMapThen(function(document) {\n        return styleMapResult.flatMapThen(function(styleMap) {\n            return documentConverter.convertToHtml(document);\n        });\n    });\n}\nfunction parseStyleMap(styleMap) {\n    return Result.combine((styleMap || []).map(readStyle)).map(function(styleMap) {\n        return styleMap.filter(function(styleMapping) {\n            return !!styleMapping;\n        });\n    });\n}\nfunction extractRawText(input) {\n    return unzip.openZip(input).then(docxReader.read).then(function(documentResult) {\n        return documentResult.map(convertElementToRawText);\n    });\n}\nfunction embedStyleMap(input, styleMap) {\n    return unzip.openZip(input).tap(function(docxFile) {\n        return docxStyleMap.writeStyleMap(docxFile, styleMap);\n    }).then(function(docxFile) {\n        return docxFile.toArrayBuffer();\n    }).then(function(arrayBuffer) {\n        return {\n            toArrayBuffer: function() {\n                return arrayBuffer;\n            },\n            toBuffer: function() {\n                return Buffer.from(arrayBuffer);\n            }\n        };\n    });\n}\nexports.styleMapping = function() {\n    throw new Error(\"Use a raw string instead of mammoth.styleMapping e.g. \\\"p[style-name='Title'] => h1\\\" instead of mammoth.styleMapping(\\\"p[style-name='Title'] => h1\\\")\");\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mammoth/lib/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mammoth/lib/options-reader.js":
/*!****************************************************!*\
  !*** ./node_modules/mammoth/lib/options-reader.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("exports.readOptions = readOptions;\nvar _ = __webpack_require__(/*! underscore */ \"(rsc)/./node_modules/underscore/modules/index-all.js\");\nvar defaultStyleMap = exports._defaultStyleMap = [\n    \"p.Heading1 => h1:fresh\",\n    \"p.Heading2 => h2:fresh\",\n    \"p.Heading3 => h3:fresh\",\n    \"p.Heading4 => h4:fresh\",\n    \"p.Heading5 => h5:fresh\",\n    \"p.Heading6 => h6:fresh\",\n    \"p[style-name='Heading 1'] => h1:fresh\",\n    \"p[style-name='Heading 2'] => h2:fresh\",\n    \"p[style-name='Heading 3'] => h3:fresh\",\n    \"p[style-name='Heading 4'] => h4:fresh\",\n    \"p[style-name='Heading 5'] => h5:fresh\",\n    \"p[style-name='Heading 6'] => h6:fresh\",\n    \"p[style-name='heading 1'] => h1:fresh\",\n    \"p[style-name='heading 2'] => h2:fresh\",\n    \"p[style-name='heading 3'] => h3:fresh\",\n    \"p[style-name='heading 4'] => h4:fresh\",\n    \"p[style-name='heading 5'] => h5:fresh\",\n    \"p[style-name='heading 6'] => h6:fresh\",\n    \"r[style-name='Strong'] => strong\",\n    \"p[style-name='footnote text'] => p:fresh\",\n    \"r[style-name='footnote reference'] =>\",\n    \"p[style-name='endnote text'] => p:fresh\",\n    \"r[style-name='endnote reference'] =>\",\n    \"p[style-name='annotation text'] => p:fresh\",\n    \"r[style-name='annotation reference'] =>\",\n    // LibreOffice\n    \"p[style-name='Footnote'] => p:fresh\",\n    \"r[style-name='Footnote anchor'] =>\",\n    \"p[style-name='Endnote'] => p:fresh\",\n    \"r[style-name='Endnote anchor'] =>\",\n    \"p:unordered-list(1) => ul > li:fresh\",\n    \"p:unordered-list(2) => ul|ol > li > ul > li:fresh\",\n    \"p:unordered-list(3) => ul|ol > li > ul|ol > li > ul > li:fresh\",\n    \"p:unordered-list(4) => ul|ol > li > ul|ol > li > ul|ol > li > ul > li:fresh\",\n    \"p:unordered-list(5) => ul|ol > li > ul|ol > li > ul|ol > li > ul|ol > li > ul > li:fresh\",\n    \"p:ordered-list(1) => ol > li:fresh\",\n    \"p:ordered-list(2) => ul|ol > li > ol > li:fresh\",\n    \"p:ordered-list(3) => ul|ol > li > ul|ol > li > ol > li:fresh\",\n    \"p:ordered-list(4) => ul|ol > li > ul|ol > li > ul|ol > li > ol > li:fresh\",\n    \"p:ordered-list(5) => ul|ol > li > ul|ol > li > ul|ol > li > ul|ol > li > ol > li:fresh\",\n    \"r[style-name='Hyperlink'] =>\",\n    \"p[style-name='Normal'] => p:fresh\"\n];\nvar standardOptions = exports._standardOptions = {\n    transformDocument: identity,\n    includeDefaultStyleMap: true,\n    includeEmbeddedStyleMap: true\n};\nfunction readOptions(options) {\n    options = options || {};\n    return _.extend({}, standardOptions, options, {\n        customStyleMap: readStyleMap(options.styleMap),\n        readStyleMap: function() {\n            var styleMap = this.customStyleMap;\n            if (this.includeEmbeddedStyleMap) {\n                styleMap = styleMap.concat(readStyleMap(this.embeddedStyleMap));\n            }\n            if (this.includeDefaultStyleMap) {\n                styleMap = styleMap.concat(defaultStyleMap);\n            }\n            return styleMap;\n        }\n    });\n}\nfunction readStyleMap(styleMap) {\n    if (!styleMap) {\n        return [];\n    } else if (_.isString(styleMap)) {\n        return styleMap.split(\"\\n\").map(function(line) {\n            return line.trim();\n        }).filter(function(line) {\n            return line !== \"\" && line.charAt(0) !== \"#\";\n        });\n    } else {\n        return styleMap;\n    }\n}\nfunction identity(value) {\n    return value;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvb3B0aW9ucy1yZWFkZXIuanMiLCJtYXBwaW5ncyI6IkFBQUFBLG1CQUFtQixHQUFHQztBQUd0QixJQUFJQyxJQUFJQyxtQkFBT0EsQ0FBQyx3RUFBWTtBQUU1QixJQUFJQyxrQkFBa0JKLHdCQUF3QixHQUFHO0lBQzdDO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUVBO0lBRUE7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBRUEsY0FBYztJQUNkO0lBQ0E7SUFDQTtJQUNBO0lBRUE7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFFQTtJQUVBO0NBQ0g7QUFFRCxJQUFJTSxrQkFBa0JOLHdCQUF3QixHQUFHO0lBQzdDUSxtQkFBbUJDO0lBQ25CQyx3QkFBd0I7SUFDeEJDLHlCQUF5QjtBQUM3QjtBQUVBLFNBQVNWLFlBQVlXLE9BQU87SUFDeEJBLFVBQVVBLFdBQVcsQ0FBQztJQUN0QixPQUFPVixFQUFFVyxNQUFNLENBQUMsQ0FBQyxHQUFHUCxpQkFBaUJNLFNBQVM7UUFDMUNFLGdCQUFnQkMsYUFBYUgsUUFBUUksUUFBUTtRQUM3Q0QsY0FBYztZQUNWLElBQUlDLFdBQVcsSUFBSSxDQUFDRixjQUFjO1lBQ2xDLElBQUksSUFBSSxDQUFDSCx1QkFBdUIsRUFBRTtnQkFDOUJLLFdBQVdBLFNBQVNDLE1BQU0sQ0FBQ0YsYUFBYSxJQUFJLENBQUNHLGdCQUFnQjtZQUNqRTtZQUNBLElBQUksSUFBSSxDQUFDUixzQkFBc0IsRUFBRTtnQkFDN0JNLFdBQVdBLFNBQVNDLE1BQU0sQ0FBQ2I7WUFDL0I7WUFDQSxPQUFPWTtRQUNYO0lBQ0o7QUFDSjtBQUVBLFNBQVNELGFBQWFDLFFBQVE7SUFDMUIsSUFBSSxDQUFDQSxVQUFVO1FBQ1gsT0FBTyxFQUFFO0lBQ2IsT0FBTyxJQUFJZCxFQUFFaUIsUUFBUSxDQUFDSCxXQUFXO1FBQzdCLE9BQU9BLFNBQVNJLEtBQUssQ0FBQyxNQUNqQkMsR0FBRyxDQUFDLFNBQVNDLElBQUk7WUFDZCxPQUFPQSxLQUFLQyxJQUFJO1FBQ3BCLEdBQ0NDLE1BQU0sQ0FBQyxTQUFTRixJQUFJO1lBQ2pCLE9BQU9BLFNBQVMsTUFBTUEsS0FBS0csTUFBTSxDQUFDLE9BQU87UUFDN0M7SUFDUixPQUFPO1FBQ0gsT0FBT1Q7SUFDWDtBQUNKO0FBRUEsU0FBU1AsU0FBU2lCLEtBQUs7SUFDbkIsT0FBT0E7QUFDWCIsInNvdXJjZXMiOlsid2VicGFjazovL3Jlc3VtZWJ1aWxkZXItYWkvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvb3B0aW9ucy1yZWFkZXIuanM/ZGFmOCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzLnJlYWRPcHRpb25zID0gcmVhZE9wdGlvbnM7XG5cblxudmFyIF8gPSByZXF1aXJlKFwidW5kZXJzY29yZVwiKTtcblxudmFyIGRlZmF1bHRTdHlsZU1hcCA9IGV4cG9ydHMuX2RlZmF1bHRTdHlsZU1hcCA9IFtcbiAgICBcInAuSGVhZGluZzEgPT4gaDE6ZnJlc2hcIixcbiAgICBcInAuSGVhZGluZzIgPT4gaDI6ZnJlc2hcIixcbiAgICBcInAuSGVhZGluZzMgPT4gaDM6ZnJlc2hcIixcbiAgICBcInAuSGVhZGluZzQgPT4gaDQ6ZnJlc2hcIixcbiAgICBcInAuSGVhZGluZzUgPT4gaDU6ZnJlc2hcIixcbiAgICBcInAuSGVhZGluZzYgPT4gaDY6ZnJlc2hcIixcbiAgICBcInBbc3R5bGUtbmFtZT0nSGVhZGluZyAxJ10gPT4gaDE6ZnJlc2hcIixcbiAgICBcInBbc3R5bGUtbmFtZT0nSGVhZGluZyAyJ10gPT4gaDI6ZnJlc2hcIixcbiAgICBcInBbc3R5bGUtbmFtZT0nSGVhZGluZyAzJ10gPT4gaDM6ZnJlc2hcIixcbiAgICBcInBbc3R5bGUtbmFtZT0nSGVhZGluZyA0J10gPT4gaDQ6ZnJlc2hcIixcbiAgICBcInBbc3R5bGUtbmFtZT0nSGVhZGluZyA1J10gPT4gaDU6ZnJlc2hcIixcbiAgICBcInBbc3R5bGUtbmFtZT0nSGVhZGluZyA2J10gPT4gaDY6ZnJlc2hcIixcbiAgICBcInBbc3R5bGUtbmFtZT0naGVhZGluZyAxJ10gPT4gaDE6ZnJlc2hcIixcbiAgICBcInBbc3R5bGUtbmFtZT0naGVhZGluZyAyJ10gPT4gaDI6ZnJlc2hcIixcbiAgICBcInBbc3R5bGUtbmFtZT0naGVhZGluZyAzJ10gPT4gaDM6ZnJlc2hcIixcbiAgICBcInBbc3R5bGUtbmFtZT0naGVhZGluZyA0J10gPT4gaDQ6ZnJlc2hcIixcbiAgICBcInBbc3R5bGUtbmFtZT0naGVhZGluZyA1J10gPT4gaDU6ZnJlc2hcIixcbiAgICBcInBbc3R5bGUtbmFtZT0naGVhZGluZyA2J10gPT4gaDY6ZnJlc2hcIixcbiAgICBcbiAgICBcInJbc3R5bGUtbmFtZT0nU3Ryb25nJ10gPT4gc3Ryb25nXCIsXG4gICAgXG4gICAgXCJwW3N0eWxlLW5hbWU9J2Zvb3Rub3RlIHRleHQnXSA9PiBwOmZyZXNoXCIsXG4gICAgXCJyW3N0eWxlLW5hbWU9J2Zvb3Rub3RlIHJlZmVyZW5jZSddID0+XCIsXG4gICAgXCJwW3N0eWxlLW5hbWU9J2VuZG5vdGUgdGV4dCddID0+IHA6ZnJlc2hcIixcbiAgICBcInJbc3R5bGUtbmFtZT0nZW5kbm90ZSByZWZlcmVuY2UnXSA9PlwiLFxuICAgIFwicFtzdHlsZS1uYW1lPSdhbm5vdGF0aW9uIHRleHQnXSA9PiBwOmZyZXNoXCIsXG4gICAgXCJyW3N0eWxlLW5hbWU9J2Fubm90YXRpb24gcmVmZXJlbmNlJ10gPT5cIixcbiAgICBcbiAgICAvLyBMaWJyZU9mZmljZVxuICAgIFwicFtzdHlsZS1uYW1lPSdGb290bm90ZSddID0+IHA6ZnJlc2hcIixcbiAgICBcInJbc3R5bGUtbmFtZT0nRm9vdG5vdGUgYW5jaG9yJ10gPT5cIixcbiAgICBcInBbc3R5bGUtbmFtZT0nRW5kbm90ZSddID0+IHA6ZnJlc2hcIixcbiAgICBcInJbc3R5bGUtbmFtZT0nRW5kbm90ZSBhbmNob3InXSA9PlwiLFxuICAgIFxuICAgIFwicDp1bm9yZGVyZWQtbGlzdCgxKSA9PiB1bCA+IGxpOmZyZXNoXCIsXG4gICAgXCJwOnVub3JkZXJlZC1saXN0KDIpID0+IHVsfG9sID4gbGkgPiB1bCA+IGxpOmZyZXNoXCIsXG4gICAgXCJwOnVub3JkZXJlZC1saXN0KDMpID0+IHVsfG9sID4gbGkgPiB1bHxvbCA+IGxpID4gdWwgPiBsaTpmcmVzaFwiLFxuICAgIFwicDp1bm9yZGVyZWQtbGlzdCg0KSA9PiB1bHxvbCA+IGxpID4gdWx8b2wgPiBsaSA+IHVsfG9sID4gbGkgPiB1bCA+IGxpOmZyZXNoXCIsXG4gICAgXCJwOnVub3JkZXJlZC1saXN0KDUpID0+IHVsfG9sID4gbGkgPiB1bHxvbCA+IGxpID4gdWx8b2wgPiBsaSA+IHVsfG9sID4gbGkgPiB1bCA+IGxpOmZyZXNoXCIsXG4gICAgXCJwOm9yZGVyZWQtbGlzdCgxKSA9PiBvbCA+IGxpOmZyZXNoXCIsXG4gICAgXCJwOm9yZGVyZWQtbGlzdCgyKSA9PiB1bHxvbCA+IGxpID4gb2wgPiBsaTpmcmVzaFwiLFxuICAgIFwicDpvcmRlcmVkLWxpc3QoMykgPT4gdWx8b2wgPiBsaSA+IHVsfG9sID4gbGkgPiBvbCA+IGxpOmZyZXNoXCIsXG4gICAgXCJwOm9yZGVyZWQtbGlzdCg0KSA9PiB1bHxvbCA+IGxpID4gdWx8b2wgPiBsaSA+IHVsfG9sID4gbGkgPiBvbCA+IGxpOmZyZXNoXCIsXG4gICAgXCJwOm9yZGVyZWQtbGlzdCg1KSA9PiB1bHxvbCA+IGxpID4gdWx8b2wgPiBsaSA+IHVsfG9sID4gbGkgPiB1bHxvbCA+IGxpID4gb2wgPiBsaTpmcmVzaFwiLFxuICAgIFxuICAgIFwicltzdHlsZS1uYW1lPSdIeXBlcmxpbmsnXSA9PlwiLFxuICAgIFxuICAgIFwicFtzdHlsZS1uYW1lPSdOb3JtYWwnXSA9PiBwOmZyZXNoXCJcbl07XG5cbnZhciBzdGFuZGFyZE9wdGlvbnMgPSBleHBvcnRzLl9zdGFuZGFyZE9wdGlvbnMgPSB7XG4gICAgdHJhbnNmb3JtRG9jdW1lbnQ6IGlkZW50aXR5LFxuICAgIGluY2x1ZGVEZWZhdWx0U3R5bGVNYXA6IHRydWUsXG4gICAgaW5jbHVkZUVtYmVkZGVkU3R5bGVNYXA6IHRydWVcbn07XG5cbmZ1bmN0aW9uIHJlYWRPcHRpb25zKG9wdGlvbnMpIHtcbiAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgICByZXR1cm4gXy5leHRlbmQoe30sIHN0YW5kYXJkT3B0aW9ucywgb3B0aW9ucywge1xuICAgICAgICBjdXN0b21TdHlsZU1hcDogcmVhZFN0eWxlTWFwKG9wdGlvbnMuc3R5bGVNYXApLFxuICAgICAgICByZWFkU3R5bGVNYXA6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmFyIHN0eWxlTWFwID0gdGhpcy5jdXN0b21TdHlsZU1hcDtcbiAgICAgICAgICAgIGlmICh0aGlzLmluY2x1ZGVFbWJlZGRlZFN0eWxlTWFwKSB7XG4gICAgICAgICAgICAgICAgc3R5bGVNYXAgPSBzdHlsZU1hcC5jb25jYXQocmVhZFN0eWxlTWFwKHRoaXMuZW1iZWRkZWRTdHlsZU1hcCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMuaW5jbHVkZURlZmF1bHRTdHlsZU1hcCkge1xuICAgICAgICAgICAgICAgIHN0eWxlTWFwID0gc3R5bGVNYXAuY29uY2F0KGRlZmF1bHRTdHlsZU1hcCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gc3R5bGVNYXA7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cblxuZnVuY3Rpb24gcmVhZFN0eWxlTWFwKHN0eWxlTWFwKSB7XG4gICAgaWYgKCFzdHlsZU1hcCkge1xuICAgICAgICByZXR1cm4gW107XG4gICAgfSBlbHNlIGlmIChfLmlzU3RyaW5nKHN0eWxlTWFwKSkge1xuICAgICAgICByZXR1cm4gc3R5bGVNYXAuc3BsaXQoXCJcXG5cIilcbiAgICAgICAgICAgIC5tYXAoZnVuY3Rpb24obGluZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBsaW5lLnRyaW0oKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uKGxpbmUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbGluZSAhPT0gXCJcIiAmJiBsaW5lLmNoYXJBdCgwKSAhPT0gXCIjXCI7XG4gICAgICAgICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gc3R5bGVNYXA7XG4gICAgfVxufVxuXG5mdW5jdGlvbiBpZGVudGl0eSh2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZTtcbn1cbiJdLCJuYW1lcyI6WyJleHBvcnRzIiwicmVhZE9wdGlvbnMiLCJfIiwicmVxdWlyZSIsImRlZmF1bHRTdHlsZU1hcCIsIl9kZWZhdWx0U3R5bGVNYXAiLCJzdGFuZGFyZE9wdGlvbnMiLCJfc3RhbmRhcmRPcHRpb25zIiwidHJhbnNmb3JtRG9jdW1lbnQiLCJpZGVudGl0eSIsImluY2x1ZGVEZWZhdWx0U3R5bGVNYXAiLCJpbmNsdWRlRW1iZWRkZWRTdHlsZU1hcCIsIm9wdGlvbnMiLCJleHRlbmQiLCJjdXN0b21TdHlsZU1hcCIsInJlYWRTdHlsZU1hcCIsInN0eWxlTWFwIiwiY29uY2F0IiwiZW1iZWRkZWRTdHlsZU1hcCIsImlzU3RyaW5nIiwic3BsaXQiLCJtYXAiLCJsaW5lIiwidHJpbSIsImZpbHRlciIsImNoYXJBdCIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mammoth/lib/options-reader.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mammoth/lib/promises.js":
/*!**********************************************!*\
  !*** ./node_modules/mammoth/lib/promises.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var _ = __webpack_require__(/*! underscore */ \"(rsc)/./node_modules/underscore/modules/index-all.js\");\nvar bluebird = __webpack_require__(/*! bluebird/js/release/promise */ \"(rsc)/./node_modules/bluebird/js/release/promise.js\")();\nexports.defer = defer;\nexports.when = bluebird.resolve;\nexports.resolve = bluebird.resolve;\nexports.all = bluebird.all;\nexports.props = bluebird.props;\nexports.reject = bluebird.reject;\nexports.promisify = bluebird.promisify;\nexports.mapSeries = bluebird.mapSeries;\nexports.attempt = bluebird.attempt;\nexports.nfcall = function(func) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    var promisedFunc = bluebird.promisify(func);\n    return promisedFunc.apply(null, args);\n};\nbluebird.prototype.fail = bluebird.prototype.caught;\nbluebird.prototype.also = function(func) {\n    return this.then(function(value) {\n        var returnValue = _.extend({}, value, func(value));\n        return bluebird.props(returnValue);\n    });\n};\nfunction defer() {\n    var resolve;\n    var reject;\n    var promise = new bluebird.Promise(function(resolveArg, rejectArg) {\n        resolve = resolveArg;\n        reject = rejectArg;\n    });\n    return {\n        resolve: resolve,\n        reject: reject,\n        promise: promise\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvcHJvbWlzZXMuanMiLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsSUFBSUMsbUJBQU9BLENBQUMsd0VBQVk7QUFDNUIsSUFBSUMsV0FBV0QsbUJBQU9BLENBQUMsd0ZBQTZCO0FBRXBERSxhQUFhLEdBQUdDO0FBQ2hCRCxZQUFZLEdBQUdELFNBQVNJLE9BQU87QUFDL0JILGVBQWUsR0FBR0QsU0FBU0ksT0FBTztBQUNsQ0gsV0FBVyxHQUFHRCxTQUFTSyxHQUFHO0FBQzFCSixhQUFhLEdBQUdELFNBQVNNLEtBQUs7QUFDOUJMLGNBQWMsR0FBR0QsU0FBU08sTUFBTTtBQUNoQ04saUJBQWlCLEdBQUdELFNBQVNRLFNBQVM7QUFDdENQLGlCQUFpQixHQUFHRCxTQUFTUyxTQUFTO0FBQ3RDUixlQUFlLEdBQUdELFNBQVNVLE9BQU87QUFFbENULGNBQWMsR0FBRyxTQUFTVyxJQUFJO0lBQzFCLElBQUlDLE9BQU9DLE1BQU1DLFNBQVMsQ0FBQ0MsS0FBSyxDQUFDQyxJQUFJLENBQUNDLFdBQVc7SUFDakQsSUFBSUMsZUFBZW5CLFNBQVNRLFNBQVMsQ0FBQ0k7SUFDdEMsT0FBT08sYUFBYUMsS0FBSyxDQUFDLE1BQU1QO0FBQ3BDO0FBRUFiLFNBQVNlLFNBQVMsQ0FBQ00sSUFBSSxHQUFHckIsU0FBU2UsU0FBUyxDQUFDTyxNQUFNO0FBRW5EdEIsU0FBU2UsU0FBUyxDQUFDUSxJQUFJLEdBQUcsU0FBU1gsSUFBSTtJQUNuQyxPQUFPLElBQUksQ0FBQ1ksSUFBSSxDQUFDLFNBQVNDLEtBQUs7UUFDM0IsSUFBSUMsY0FBYzVCLEVBQUU2QixNQUFNLENBQUMsQ0FBQyxHQUFHRixPQUFPYixLQUFLYTtRQUMzQyxPQUFPekIsU0FBU00sS0FBSyxDQUFDb0I7SUFDMUI7QUFDSjtBQUVBLFNBQVN4QjtJQUNMLElBQUlFO0lBQ0osSUFBSUc7SUFDSixJQUFJcUIsVUFBVSxJQUFJNUIsU0FBUzZCLE9BQU8sQ0FBQyxTQUFTQyxVQUFVLEVBQUVDLFNBQVM7UUFDN0QzQixVQUFVMEI7UUFDVnZCLFNBQVN3QjtJQUNiO0lBRUEsT0FBTztRQUNIM0IsU0FBU0E7UUFDVEcsUUFBUUE7UUFDUnFCLFNBQVNBO0lBQ2I7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL3Jlc3VtZWJ1aWxkZXItYWkvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvcHJvbWlzZXMuanM/MzI2ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgXyA9IHJlcXVpcmUoXCJ1bmRlcnNjb3JlXCIpO1xudmFyIGJsdWViaXJkID0gcmVxdWlyZShcImJsdWViaXJkL2pzL3JlbGVhc2UvcHJvbWlzZVwiKSgpO1xuXG5leHBvcnRzLmRlZmVyID0gZGVmZXI7XG5leHBvcnRzLndoZW4gPSBibHVlYmlyZC5yZXNvbHZlO1xuZXhwb3J0cy5yZXNvbHZlID0gYmx1ZWJpcmQucmVzb2x2ZTtcbmV4cG9ydHMuYWxsID0gYmx1ZWJpcmQuYWxsO1xuZXhwb3J0cy5wcm9wcyA9IGJsdWViaXJkLnByb3BzO1xuZXhwb3J0cy5yZWplY3QgPSBibHVlYmlyZC5yZWplY3Q7XG5leHBvcnRzLnByb21pc2lmeSA9IGJsdWViaXJkLnByb21pc2lmeTtcbmV4cG9ydHMubWFwU2VyaWVzID0gYmx1ZWJpcmQubWFwU2VyaWVzO1xuZXhwb3J0cy5hdHRlbXB0ID0gYmx1ZWJpcmQuYXR0ZW1wdDtcblxuZXhwb3J0cy5uZmNhbGwgPSBmdW5jdGlvbihmdW5jKSB7XG4gICAgdmFyIGFyZ3MgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpO1xuICAgIHZhciBwcm9taXNlZEZ1bmMgPSBibHVlYmlyZC5wcm9taXNpZnkoZnVuYyk7XG4gICAgcmV0dXJuIHByb21pc2VkRnVuYy5hcHBseShudWxsLCBhcmdzKTtcbn07XG5cbmJsdWViaXJkLnByb3RvdHlwZS5mYWlsID0gYmx1ZWJpcmQucHJvdG90eXBlLmNhdWdodDtcblxuYmx1ZWJpcmQucHJvdG90eXBlLmFsc28gPSBmdW5jdGlvbihmdW5jKSB7XG4gICAgcmV0dXJuIHRoaXMudGhlbihmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgICB2YXIgcmV0dXJuVmFsdWUgPSBfLmV4dGVuZCh7fSwgdmFsdWUsIGZ1bmModmFsdWUpKTtcbiAgICAgICAgcmV0dXJuIGJsdWViaXJkLnByb3BzKHJldHVyblZhbHVlKTtcbiAgICB9KTtcbn07XG5cbmZ1bmN0aW9uIGRlZmVyKCkge1xuICAgIHZhciByZXNvbHZlO1xuICAgIHZhciByZWplY3Q7XG4gICAgdmFyIHByb21pc2UgPSBuZXcgYmx1ZWJpcmQuUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlQXJnLCByZWplY3RBcmcpIHtcbiAgICAgICAgcmVzb2x2ZSA9IHJlc29sdmVBcmc7XG4gICAgICAgIHJlamVjdCA9IHJlamVjdEFyZztcbiAgICB9KTtcblxuICAgIHJldHVybiB7XG4gICAgICAgIHJlc29sdmU6IHJlc29sdmUsXG4gICAgICAgIHJlamVjdDogcmVqZWN0LFxuICAgICAgICBwcm9taXNlOiBwcm9taXNlXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6WyJfIiwicmVxdWlyZSIsImJsdWViaXJkIiwiZXhwb3J0cyIsImRlZmVyIiwid2hlbiIsInJlc29sdmUiLCJhbGwiLCJwcm9wcyIsInJlamVjdCIsInByb21pc2lmeSIsIm1hcFNlcmllcyIsImF0dGVtcHQiLCJuZmNhbGwiLCJmdW5jIiwiYXJncyIsIkFycmF5IiwicHJvdG90eXBlIiwic2xpY2UiLCJjYWxsIiwiYXJndW1lbnRzIiwicHJvbWlzZWRGdW5jIiwiYXBwbHkiLCJmYWlsIiwiY2F1Z2h0IiwiYWxzbyIsInRoZW4iLCJ2YWx1ZSIsInJldHVyblZhbHVlIiwiZXh0ZW5kIiwicHJvbWlzZSIsIlByb21pc2UiLCJyZXNvbHZlQXJnIiwicmVqZWN0QXJnIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mammoth/lib/promises.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mammoth/lib/raw-text.js":
/*!**********************************************!*\
  !*** ./node_modules/mammoth/lib/raw-text.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var documents = __webpack_require__(/*! ./documents */ \"(rsc)/./node_modules/mammoth/lib/documents.js\");\nfunction convertElementToRawText(element) {\n    if (element.type === \"text\") {\n        return element.value;\n    } else if (element.type === documents.types.tab) {\n        return \"\t\";\n    } else {\n        var tail = element.type === \"paragraph\" ? \"\\n\\n\" : \"\";\n        return (element.children || []).map(convertElementToRawText).join(\"\") + tail;\n    }\n}\nexports.convertElementToRawText = convertElementToRawText;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvcmF3LXRleHQuanMiLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsWUFBWUMsbUJBQU9BLENBQUMsa0VBQWE7QUFFckMsU0FBU0Msd0JBQXdCQyxPQUFPO0lBQ3BDLElBQUlBLFFBQVFDLElBQUksS0FBSyxRQUFRO1FBQ3pCLE9BQU9ELFFBQVFFLEtBQUs7SUFDeEIsT0FBTyxJQUFJRixRQUFRQyxJQUFJLEtBQUtKLFVBQVVNLEtBQUssQ0FBQ0MsR0FBRyxFQUFFO1FBQzdDLE9BQU87SUFDWCxPQUFPO1FBQ0gsSUFBSUMsT0FBT0wsUUFBUUMsSUFBSSxLQUFLLGNBQWMsU0FBUztRQUNuRCxPQUFPLENBQUNELFFBQVFNLFFBQVEsSUFBSSxFQUFFLEVBQUVDLEdBQUcsQ0FBQ1IseUJBQXlCUyxJQUFJLENBQUMsTUFBTUg7SUFDNUU7QUFDSjtBQUVBSSwrQkFBK0IsR0FBR1YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN1bWVidWlsZGVyLWFpLy4vbm9kZV9tb2R1bGVzL21hbW1vdGgvbGliL3Jhdy10ZXh0LmpzP2NmYTAiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGRvY3VtZW50cyA9IHJlcXVpcmUoXCIuL2RvY3VtZW50c1wiKTtcblxuZnVuY3Rpb24gY29udmVydEVsZW1lbnRUb1Jhd1RleHQoZWxlbWVudCkge1xuICAgIGlmIChlbGVtZW50LnR5cGUgPT09IFwidGV4dFwiKSB7XG4gICAgICAgIHJldHVybiBlbGVtZW50LnZhbHVlO1xuICAgIH0gZWxzZSBpZiAoZWxlbWVudC50eXBlID09PSBkb2N1bWVudHMudHlwZXMudGFiKSB7XG4gICAgICAgIHJldHVybiBcIlxcdFwiO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHZhciB0YWlsID0gZWxlbWVudC50eXBlID09PSBcInBhcmFncmFwaFwiID8gXCJcXG5cXG5cIiA6IFwiXCI7XG4gICAgICAgIHJldHVybiAoZWxlbWVudC5jaGlsZHJlbiB8fCBbXSkubWFwKGNvbnZlcnRFbGVtZW50VG9SYXdUZXh0KS5qb2luKFwiXCIpICsgdGFpbDtcbiAgICB9XG59XG5cbmV4cG9ydHMuY29udmVydEVsZW1lbnRUb1Jhd1RleHQgPSBjb252ZXJ0RWxlbWVudFRvUmF3VGV4dDtcbiJdLCJuYW1lcyI6WyJkb2N1bWVudHMiLCJyZXF1aXJlIiwiY29udmVydEVsZW1lbnRUb1Jhd1RleHQiLCJlbGVtZW50IiwidHlwZSIsInZhbHVlIiwidHlwZXMiLCJ0YWIiLCJ0YWlsIiwiY2hpbGRyZW4iLCJtYXAiLCJqb2luIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mammoth/lib/raw-text.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mammoth/lib/results.js":
/*!*********************************************!*\
  !*** ./node_modules/mammoth/lib/results.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var _ = __webpack_require__(/*! underscore */ \"(rsc)/./node_modules/underscore/modules/index-all.js\");\nexports.Result = Result;\nexports.success = success;\nexports.warning = warning;\nexports.error = error;\nfunction Result(value, messages) {\n    this.value = value;\n    this.messages = messages || [];\n}\nResult.prototype.map = function(func) {\n    return new Result(func(this.value), this.messages);\n};\nResult.prototype.flatMap = function(func) {\n    var funcResult = func(this.value);\n    return new Result(funcResult.value, combineMessages([\n        this,\n        funcResult\n    ]));\n};\nResult.prototype.flatMapThen = function(func) {\n    var that = this;\n    return func(this.value).then(function(otherResult) {\n        return new Result(otherResult.value, combineMessages([\n            that,\n            otherResult\n        ]));\n    });\n};\nResult.combine = function(results) {\n    var values = _.flatten(_.pluck(results, \"value\"));\n    var messages = combineMessages(results);\n    return new Result(values, messages);\n};\nfunction success(value) {\n    return new Result(value, []);\n}\nfunction warning(message) {\n    return {\n        type: \"warning\",\n        message: message\n    };\n}\nfunction error(exception) {\n    return {\n        type: \"error\",\n        message: exception.message,\n        error: exception\n    };\n}\nfunction combineMessages(results) {\n    var messages = [];\n    _.flatten(_.pluck(results, \"messages\"), true).forEach(function(message) {\n        if (!containsMessage(messages, message)) {\n            messages.push(message);\n        }\n    });\n    return messages;\n}\nfunction containsMessage(messages, message) {\n    return _.find(messages, isSameMessage.bind(null, message)) !== undefined;\n}\nfunction isSameMessage(first, second) {\n    return first.type === second.type && first.message === second.message;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvcmVzdWx0cy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxJQUFJQyxtQkFBT0EsQ0FBQyx3RUFBWTtBQUc1QkMsY0FBYyxHQUFHQztBQUNqQkQsZUFBZSxHQUFHRTtBQUNsQkYsZUFBZSxHQUFHRztBQUNsQkgsYUFBYSxHQUFHSTtBQUdoQixTQUFTSCxPQUFPSSxLQUFLLEVBQUVDLFFBQVE7SUFDM0IsSUFBSSxDQUFDRCxLQUFLLEdBQUdBO0lBQ2IsSUFBSSxDQUFDQyxRQUFRLEdBQUdBLFlBQVksRUFBRTtBQUNsQztBQUVBTCxPQUFPTSxTQUFTLENBQUNDLEdBQUcsR0FBRyxTQUFTQyxJQUFJO0lBQ2hDLE9BQU8sSUFBSVIsT0FBT1EsS0FBSyxJQUFJLENBQUNKLEtBQUssR0FBRyxJQUFJLENBQUNDLFFBQVE7QUFDckQ7QUFFQUwsT0FBT00sU0FBUyxDQUFDRyxPQUFPLEdBQUcsU0FBU0QsSUFBSTtJQUNwQyxJQUFJRSxhQUFhRixLQUFLLElBQUksQ0FBQ0osS0FBSztJQUNoQyxPQUFPLElBQUlKLE9BQU9VLFdBQVdOLEtBQUssRUFBRU8sZ0JBQWdCO1FBQUMsSUFBSTtRQUFFRDtLQUFXO0FBQzFFO0FBRUFWLE9BQU9NLFNBQVMsQ0FBQ00sV0FBVyxHQUFHLFNBQVNKLElBQUk7SUFDeEMsSUFBSUssT0FBTyxJQUFJO0lBQ2YsT0FBT0wsS0FBSyxJQUFJLENBQUNKLEtBQUssRUFBRVUsSUFBSSxDQUFDLFNBQVNDLFdBQVc7UUFDN0MsT0FBTyxJQUFJZixPQUFPZSxZQUFZWCxLQUFLLEVBQUVPLGdCQUFnQjtZQUFDRTtZQUFNRTtTQUFZO0lBQzVFO0FBQ0o7QUFFQWYsT0FBT2dCLE9BQU8sR0FBRyxTQUFTQyxPQUFPO0lBQzdCLElBQUlDLFNBQVNyQixFQUFFc0IsT0FBTyxDQUFDdEIsRUFBRXVCLEtBQUssQ0FBQ0gsU0FBUztJQUN4QyxJQUFJWixXQUFXTSxnQkFBZ0JNO0lBQy9CLE9BQU8sSUFBSWpCLE9BQU9rQixRQUFRYjtBQUM5QjtBQUVBLFNBQVNKLFFBQVFHLEtBQUs7SUFDbEIsT0FBTyxJQUFJSixPQUFPSSxPQUFPLEVBQUU7QUFDL0I7QUFFQSxTQUFTRixRQUFRbUIsT0FBTztJQUNwQixPQUFPO1FBQ0hDLE1BQU07UUFDTkQsU0FBU0E7SUFDYjtBQUNKO0FBRUEsU0FBU2xCLE1BQU1vQixTQUFTO0lBQ3BCLE9BQU87UUFDSEQsTUFBTTtRQUNORCxTQUFTRSxVQUFVRixPQUFPO1FBQzFCbEIsT0FBT29CO0lBQ1g7QUFDSjtBQUVBLFNBQVNaLGdCQUFnQk0sT0FBTztJQUM1QixJQUFJWixXQUFXLEVBQUU7SUFDakJSLEVBQUVzQixPQUFPLENBQUN0QixFQUFFdUIsS0FBSyxDQUFDSCxTQUFTLGFBQWEsTUFBTU8sT0FBTyxDQUFDLFNBQVNILE9BQU87UUFDbEUsSUFBSSxDQUFDSSxnQkFBZ0JwQixVQUFVZ0IsVUFBVTtZQUNyQ2hCLFNBQVNxQixJQUFJLENBQUNMO1FBQ2xCO0lBQ0o7SUFDQSxPQUFPaEI7QUFDWDtBQUVBLFNBQVNvQixnQkFBZ0JwQixRQUFRLEVBQUVnQixPQUFPO0lBQ3RDLE9BQU94QixFQUFFOEIsSUFBSSxDQUFDdEIsVUFBVXVCLGNBQWNDLElBQUksQ0FBQyxNQUFNUixjQUFjUztBQUNuRTtBQUVBLFNBQVNGLGNBQWNHLEtBQUssRUFBRUMsTUFBTTtJQUNoQyxPQUFPRCxNQUFNVCxJQUFJLEtBQUtVLE9BQU9WLElBQUksSUFBSVMsTUFBTVYsT0FBTyxLQUFLVyxPQUFPWCxPQUFPO0FBQ3pFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdW1lYnVpbGRlci1haS8uL25vZGVfbW9kdWxlcy9tYW1tb3RoL2xpYi9yZXN1bHRzLmpzP2YwZGYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF8gPSByZXF1aXJlKFwidW5kZXJzY29yZVwiKTtcblxuXG5leHBvcnRzLlJlc3VsdCA9IFJlc3VsdDtcbmV4cG9ydHMuc3VjY2VzcyA9IHN1Y2Nlc3M7XG5leHBvcnRzLndhcm5pbmcgPSB3YXJuaW5nO1xuZXhwb3J0cy5lcnJvciA9IGVycm9yO1xuXG5cbmZ1bmN0aW9uIFJlc3VsdCh2YWx1ZSwgbWVzc2FnZXMpIHtcbiAgICB0aGlzLnZhbHVlID0gdmFsdWU7XG4gICAgdGhpcy5tZXNzYWdlcyA9IG1lc3NhZ2VzIHx8IFtdO1xufVxuXG5SZXN1bHQucHJvdG90eXBlLm1hcCA9IGZ1bmN0aW9uKGZ1bmMpIHtcbiAgICByZXR1cm4gbmV3IFJlc3VsdChmdW5jKHRoaXMudmFsdWUpLCB0aGlzLm1lc3NhZ2VzKTtcbn07XG5cblJlc3VsdC5wcm90b3R5cGUuZmxhdE1hcCA9IGZ1bmN0aW9uKGZ1bmMpIHtcbiAgICB2YXIgZnVuY1Jlc3VsdCA9IGZ1bmModGhpcy52YWx1ZSk7XG4gICAgcmV0dXJuIG5ldyBSZXN1bHQoZnVuY1Jlc3VsdC52YWx1ZSwgY29tYmluZU1lc3NhZ2VzKFt0aGlzLCBmdW5jUmVzdWx0XSkpO1xufTtcblxuUmVzdWx0LnByb3RvdHlwZS5mbGF0TWFwVGhlbiA9IGZ1bmN0aW9uKGZ1bmMpIHtcbiAgICB2YXIgdGhhdCA9IHRoaXM7XG4gICAgcmV0dXJuIGZ1bmModGhpcy52YWx1ZSkudGhlbihmdW5jdGlvbihvdGhlclJlc3VsdCkge1xuICAgICAgICByZXR1cm4gbmV3IFJlc3VsdChvdGhlclJlc3VsdC52YWx1ZSwgY29tYmluZU1lc3NhZ2VzKFt0aGF0LCBvdGhlclJlc3VsdF0pKTtcbiAgICB9KTtcbn07XG5cblJlc3VsdC5jb21iaW5lID0gZnVuY3Rpb24ocmVzdWx0cykge1xuICAgIHZhciB2YWx1ZXMgPSBfLmZsYXR0ZW4oXy5wbHVjayhyZXN1bHRzLCBcInZhbHVlXCIpKTtcbiAgICB2YXIgbWVzc2FnZXMgPSBjb21iaW5lTWVzc2FnZXMocmVzdWx0cyk7XG4gICAgcmV0dXJuIG5ldyBSZXN1bHQodmFsdWVzLCBtZXNzYWdlcyk7XG59O1xuXG5mdW5jdGlvbiBzdWNjZXNzKHZhbHVlKSB7XG4gICAgcmV0dXJuIG5ldyBSZXN1bHQodmFsdWUsIFtdKTtcbn1cblxuZnVuY3Rpb24gd2FybmluZyhtZXNzYWdlKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogXCJ3YXJuaW5nXCIsXG4gICAgICAgIG1lc3NhZ2U6IG1lc3NhZ2VcbiAgICB9O1xufVxuXG5mdW5jdGlvbiBlcnJvcihleGNlcHRpb24pIHtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiBcImVycm9yXCIsXG4gICAgICAgIG1lc3NhZ2U6IGV4Y2VwdGlvbi5tZXNzYWdlLFxuICAgICAgICBlcnJvcjogZXhjZXB0aW9uXG4gICAgfTtcbn1cblxuZnVuY3Rpb24gY29tYmluZU1lc3NhZ2VzKHJlc3VsdHMpIHtcbiAgICB2YXIgbWVzc2FnZXMgPSBbXTtcbiAgICBfLmZsYXR0ZW4oXy5wbHVjayhyZXN1bHRzLCBcIm1lc3NhZ2VzXCIpLCB0cnVlKS5mb3JFYWNoKGZ1bmN0aW9uKG1lc3NhZ2UpIHtcbiAgICAgICAgaWYgKCFjb250YWluc01lc3NhZ2UobWVzc2FnZXMsIG1lc3NhZ2UpKSB7XG4gICAgICAgICAgICBtZXNzYWdlcy5wdXNoKG1lc3NhZ2UpO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIG1lc3NhZ2VzO1xufVxuXG5mdW5jdGlvbiBjb250YWluc01lc3NhZ2UobWVzc2FnZXMsIG1lc3NhZ2UpIHtcbiAgICByZXR1cm4gXy5maW5kKG1lc3NhZ2VzLCBpc1NhbWVNZXNzYWdlLmJpbmQobnVsbCwgbWVzc2FnZSkpICE9PSB1bmRlZmluZWQ7XG59XG5cbmZ1bmN0aW9uIGlzU2FtZU1lc3NhZ2UoZmlyc3QsIHNlY29uZCkge1xuICAgIHJldHVybiBmaXJzdC50eXBlID09PSBzZWNvbmQudHlwZSAmJiBmaXJzdC5tZXNzYWdlID09PSBzZWNvbmQubWVzc2FnZTtcbn1cbiJdLCJuYW1lcyI6WyJfIiwicmVxdWlyZSIsImV4cG9ydHMiLCJSZXN1bHQiLCJzdWNjZXNzIiwid2FybmluZyIsImVycm9yIiwidmFsdWUiLCJtZXNzYWdlcyIsInByb3RvdHlwZSIsIm1hcCIsImZ1bmMiLCJmbGF0TWFwIiwiZnVuY1Jlc3VsdCIsImNvbWJpbmVNZXNzYWdlcyIsImZsYXRNYXBUaGVuIiwidGhhdCIsInRoZW4iLCJvdGhlclJlc3VsdCIsImNvbWJpbmUiLCJyZXN1bHRzIiwidmFsdWVzIiwiZmxhdHRlbiIsInBsdWNrIiwibWVzc2FnZSIsInR5cGUiLCJleGNlcHRpb24iLCJmb3JFYWNoIiwiY29udGFpbnNNZXNzYWdlIiwicHVzaCIsImZpbmQiLCJpc1NhbWVNZXNzYWdlIiwiYmluZCIsInVuZGVmaW5lZCIsImZpcnN0Iiwic2Vjb25kIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mammoth/lib/results.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mammoth/lib/style-reader.js":
/*!**************************************************!*\
  !*** ./node_modules/mammoth/lib/style-reader.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var _ = __webpack_require__(/*! underscore */ \"(rsc)/./node_modules/underscore/modules/index-all.js\");\nvar lop = __webpack_require__(/*! lop */ \"(rsc)/./node_modules/lop/index.js\");\nvar documentMatchers = __webpack_require__(/*! ./styles/document-matchers */ \"(rsc)/./node_modules/mammoth/lib/styles/document-matchers.js\");\nvar htmlPaths = __webpack_require__(/*! ./styles/html-paths */ \"(rsc)/./node_modules/mammoth/lib/styles/html-paths.js\");\nvar tokenise = (__webpack_require__(/*! ./styles/parser/tokeniser */ \"(rsc)/./node_modules/mammoth/lib/styles/parser/tokeniser.js\").tokenise);\nvar results = __webpack_require__(/*! ./results */ \"(rsc)/./node_modules/mammoth/lib/results.js\");\nexports.readHtmlPath = readHtmlPath;\nexports.readDocumentMatcher = readDocumentMatcher;\nexports.readStyle = readStyle;\nfunction readStyle(string) {\n    return parseString(styleRule, string);\n}\nfunction createStyleRule() {\n    return lop.rules.sequence(lop.rules.sequence.capture(documentMatcherRule()), lop.rules.tokenOfType(\"whitespace\"), lop.rules.tokenOfType(\"arrow\"), lop.rules.sequence.capture(lop.rules.optional(lop.rules.sequence(lop.rules.tokenOfType(\"whitespace\"), lop.rules.sequence.capture(htmlPathRule())).head())), lop.rules.tokenOfType(\"end\")).map(function(documentMatcher, htmlPath) {\n        return {\n            from: documentMatcher,\n            to: htmlPath.valueOrElse(htmlPaths.empty)\n        };\n    });\n}\nfunction readDocumentMatcher(string) {\n    return parseString(documentMatcherRule(), string);\n}\nfunction documentMatcherRule() {\n    var sequence = lop.rules.sequence;\n    var identifierToConstant = function(identifier, constant) {\n        return lop.rules.then(lop.rules.token(\"identifier\", identifier), function() {\n            return constant;\n        });\n    };\n    var paragraphRule = identifierToConstant(\"p\", documentMatchers.paragraph);\n    var runRule = identifierToConstant(\"r\", documentMatchers.run);\n    var elementTypeRule = lop.rules.firstOf(\"p or r or table\", paragraphRule, runRule);\n    var styleIdRule = lop.rules.sequence(lop.rules.tokenOfType(\"dot\"), lop.rules.sequence.cut(), lop.rules.sequence.capture(identifierRule)).map(function(styleId) {\n        return {\n            styleId: styleId\n        };\n    });\n    var styleNameMatcherRule = lop.rules.firstOf(\"style name matcher\", lop.rules.then(lop.rules.sequence(lop.rules.tokenOfType(\"equals\"), lop.rules.sequence.cut(), lop.rules.sequence.capture(stringRule)).head(), function(styleName) {\n        return {\n            styleName: documentMatchers.equalTo(styleName)\n        };\n    }), lop.rules.then(lop.rules.sequence(lop.rules.tokenOfType(\"startsWith\"), lop.rules.sequence.cut(), lop.rules.sequence.capture(stringRule)).head(), function(styleName) {\n        return {\n            styleName: documentMatchers.startsWith(styleName)\n        };\n    }));\n    var styleNameRule = lop.rules.sequence(lop.rules.tokenOfType(\"open-square-bracket\"), lop.rules.sequence.cut(), lop.rules.token(\"identifier\", \"style-name\"), lop.rules.sequence.capture(styleNameMatcherRule), lop.rules.tokenOfType(\"close-square-bracket\")).head();\n    var listTypeRule = lop.rules.firstOf(\"list type\", identifierToConstant(\"ordered-list\", {\n        isOrdered: true\n    }), identifierToConstant(\"unordered-list\", {\n        isOrdered: false\n    }));\n    var listRule = sequence(lop.rules.tokenOfType(\"colon\"), sequence.capture(listTypeRule), sequence.cut(), lop.rules.tokenOfType(\"open-paren\"), sequence.capture(integerRule), lop.rules.tokenOfType(\"close-paren\")).map(function(listType, levelNumber) {\n        return {\n            list: {\n                isOrdered: listType.isOrdered,\n                levelIndex: levelNumber - 1\n            }\n        };\n    });\n    function createMatcherSuffixesRule(rules) {\n        var matcherSuffix = lop.rules.firstOf.apply(lop.rules.firstOf, [\n            \"matcher suffix\"\n        ].concat(rules));\n        var matcherSuffixes = lop.rules.zeroOrMore(matcherSuffix);\n        return lop.rules.then(matcherSuffixes, function(suffixes) {\n            var matcherOptions = {};\n            suffixes.forEach(function(suffix) {\n                _.extend(matcherOptions, suffix);\n            });\n            return matcherOptions;\n        });\n    }\n    var paragraphOrRun = sequence(sequence.capture(elementTypeRule), sequence.capture(createMatcherSuffixesRule([\n        styleIdRule,\n        styleNameRule,\n        listRule\n    ]))).map(function(createMatcher, matcherOptions) {\n        return createMatcher(matcherOptions);\n    });\n    var table = sequence(lop.rules.token(\"identifier\", \"table\"), sequence.capture(createMatcherSuffixesRule([\n        styleIdRule,\n        styleNameRule\n    ]))).map(function(options) {\n        return documentMatchers.table(options);\n    });\n    var bold = identifierToConstant(\"b\", documentMatchers.bold);\n    var italic = identifierToConstant(\"i\", documentMatchers.italic);\n    var underline = identifierToConstant(\"u\", documentMatchers.underline);\n    var strikethrough = identifierToConstant(\"strike\", documentMatchers.strikethrough);\n    var allCaps = identifierToConstant(\"all-caps\", documentMatchers.allCaps);\n    var smallCaps = identifierToConstant(\"small-caps\", documentMatchers.smallCaps);\n    var highlight = sequence(lop.rules.token(\"identifier\", \"highlight\"), lop.rules.sequence.capture(lop.rules.optional(lop.rules.sequence(lop.rules.tokenOfType(\"open-square-bracket\"), lop.rules.sequence.cut(), lop.rules.token(\"identifier\", \"color\"), lop.rules.tokenOfType(\"equals\"), lop.rules.sequence.capture(stringRule), lop.rules.tokenOfType(\"close-square-bracket\")).head()))).map(function(color) {\n        return documentMatchers.highlight({\n            color: color.valueOrElse(undefined)\n        });\n    });\n    var commentReference = identifierToConstant(\"comment-reference\", documentMatchers.commentReference);\n    var breakMatcher = sequence(lop.rules.token(\"identifier\", \"br\"), sequence.cut(), lop.rules.tokenOfType(\"open-square-bracket\"), lop.rules.token(\"identifier\", \"type\"), lop.rules.tokenOfType(\"equals\"), sequence.capture(stringRule), lop.rules.tokenOfType(\"close-square-bracket\")).map(function(breakType) {\n        switch(breakType){\n            case \"line\":\n                return documentMatchers.lineBreak;\n            case \"page\":\n                return documentMatchers.pageBreak;\n            case \"column\":\n                return documentMatchers.columnBreak;\n            default:\n        }\n    });\n    return lop.rules.firstOf(\"element type\", paragraphOrRun, table, bold, italic, underline, strikethrough, allCaps, smallCaps, highlight, commentReference, breakMatcher);\n}\nfunction readHtmlPath(string) {\n    return parseString(htmlPathRule(), string);\n}\nfunction htmlPathRule() {\n    var capture = lop.rules.sequence.capture;\n    var whitespaceRule = lop.rules.tokenOfType(\"whitespace\");\n    var freshRule = lop.rules.then(lop.rules.optional(lop.rules.sequence(lop.rules.tokenOfType(\"colon\"), lop.rules.token(\"identifier\", \"fresh\"))), function(option) {\n        return option.map(function() {\n            return true;\n        }).valueOrElse(false);\n    });\n    var separatorRule = lop.rules.then(lop.rules.optional(lop.rules.sequence(lop.rules.tokenOfType(\"colon\"), lop.rules.token(\"identifier\", \"separator\"), lop.rules.tokenOfType(\"open-paren\"), capture(stringRule), lop.rules.tokenOfType(\"close-paren\")).head()), function(option) {\n        return option.valueOrElse(\"\");\n    });\n    var tagNamesRule = lop.rules.oneOrMoreWithSeparator(identifierRule, lop.rules.tokenOfType(\"choice\"));\n    var styleElementRule = lop.rules.sequence(capture(tagNamesRule), capture(lop.rules.zeroOrMore(attributeOrClassRule)), capture(freshRule), capture(separatorRule)).map(function(tagName, attributesList, fresh, separator) {\n        var attributes = {};\n        var options = {};\n        attributesList.forEach(function(attribute) {\n            if (attribute.append && attributes[attribute.name]) {\n                attributes[attribute.name] += \" \" + attribute.value;\n            } else {\n                attributes[attribute.name] = attribute.value;\n            }\n        });\n        if (fresh) {\n            options.fresh = true;\n        }\n        if (separator) {\n            options.separator = separator;\n        }\n        return htmlPaths.element(tagName, attributes, options);\n    });\n    return lop.rules.firstOf(\"html path\", lop.rules.then(lop.rules.tokenOfType(\"bang\"), function() {\n        return htmlPaths.ignore;\n    }), lop.rules.then(lop.rules.zeroOrMoreWithSeparator(styleElementRule, lop.rules.sequence(whitespaceRule, lop.rules.tokenOfType(\"gt\"), whitespaceRule)), htmlPaths.elements));\n}\nvar identifierRule = lop.rules.then(lop.rules.tokenOfType(\"identifier\"), decodeEscapeSequences);\nvar integerRule = lop.rules.tokenOfType(\"integer\");\nvar stringRule = lop.rules.then(lop.rules.tokenOfType(\"string\"), decodeEscapeSequences);\nvar escapeSequences = {\n    \"n\": \"\\n\",\n    \"r\": \"\\r\",\n    \"t\": \"\t\"\n};\nfunction decodeEscapeSequences(value) {\n    return value.replace(/\\\\(.)/g, function(match, code) {\n        return escapeSequences[code] || code;\n    });\n}\nvar attributeRule = lop.rules.sequence(lop.rules.tokenOfType(\"open-square-bracket\"), lop.rules.sequence.cut(), lop.rules.sequence.capture(identifierRule), lop.rules.tokenOfType(\"equals\"), lop.rules.sequence.capture(stringRule), lop.rules.tokenOfType(\"close-square-bracket\")).map(function(name, value) {\n    return {\n        name: name,\n        value: value,\n        append: false\n    };\n});\nvar classRule = lop.rules.sequence(lop.rules.tokenOfType(\"dot\"), lop.rules.sequence.cut(), lop.rules.sequence.capture(identifierRule)).map(function(className) {\n    return {\n        name: \"class\",\n        value: className,\n        append: true\n    };\n});\nvar attributeOrClassRule = lop.rules.firstOf(\"attribute or class\", attributeRule, classRule);\nfunction parseString(rule, string) {\n    var tokens = tokenise(string);\n    var parser = lop.Parser();\n    var parseResult = parser.parseTokens(rule, tokens);\n    if (parseResult.isSuccess()) {\n        return results.success(parseResult.value());\n    } else {\n        return new results.Result(null, [\n            results.warning(describeFailure(string, parseResult))\n        ]);\n    }\n}\nfunction describeFailure(input, parseResult) {\n    return \"Did not understand this style mapping, so ignored it: \" + input + \"\\n\" + parseResult.errors().map(describeError).join(\"\\n\");\n}\nfunction describeError(error) {\n    return \"Error was at character number \" + error.characterNumber() + \": \" + \"Expected \" + error.expected + \" but got \" + error.actual;\n}\nvar styleRule = createStyleRule();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mammoth/lib/style-reader.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mammoth/lib/styles/document-matchers.js":
/*!**************************************************************!*\
  !*** ./node_modules/mammoth/lib/styles/document-matchers.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("exports.paragraph = paragraph;\nexports.run = run;\nexports.table = table;\nexports.bold = new Matcher(\"bold\");\nexports.italic = new Matcher(\"italic\");\nexports.underline = new Matcher(\"underline\");\nexports.strikethrough = new Matcher(\"strikethrough\");\nexports.allCaps = new Matcher(\"allCaps\");\nexports.smallCaps = new Matcher(\"smallCaps\");\nexports.highlight = highlight;\nexports.commentReference = new Matcher(\"commentReference\");\nexports.lineBreak = new BreakMatcher({\n    breakType: \"line\"\n});\nexports.pageBreak = new BreakMatcher({\n    breakType: \"page\"\n});\nexports.columnBreak = new BreakMatcher({\n    breakType: \"column\"\n});\nexports.equalTo = equalTo;\nexports.startsWith = startsWith;\nfunction paragraph(options) {\n    return new Matcher(\"paragraph\", options);\n}\nfunction run(options) {\n    return new Matcher(\"run\", options);\n}\nfunction table(options) {\n    return new Matcher(\"table\", options);\n}\nfunction highlight(options) {\n    return new HighlightMatcher(options);\n}\nfunction Matcher(elementType, options) {\n    options = options || {};\n    this._elementType = elementType;\n    this._styleId = options.styleId;\n    this._styleName = options.styleName;\n    if (options.list) {\n        this._listIndex = options.list.levelIndex;\n        this._listIsOrdered = options.list.isOrdered;\n    }\n}\nMatcher.prototype.matches = function(element) {\n    return element.type === this._elementType && (this._styleId === undefined || element.styleId === this._styleId) && (this._styleName === undefined || element.styleName && this._styleName.operator(this._styleName.operand, element.styleName)) && (this._listIndex === undefined || isList(element, this._listIndex, this._listIsOrdered)) && (this._breakType === undefined || this._breakType === element.breakType);\n};\nfunction HighlightMatcher(options) {\n    options = options || {};\n    this._color = options.color;\n}\nHighlightMatcher.prototype.matches = function(element) {\n    return element.type === \"highlight\" && (this._color === undefined || element.color === this._color);\n};\nfunction BreakMatcher(options) {\n    options = options || {};\n    this._breakType = options.breakType;\n}\nBreakMatcher.prototype.matches = function(element) {\n    return element.type === \"break\" && (this._breakType === undefined || element.breakType === this._breakType);\n};\nfunction isList(element, levelIndex, isOrdered) {\n    return element.numbering && element.numbering.level == levelIndex && element.numbering.isOrdered == isOrdered;\n}\nfunction equalTo(value) {\n    return {\n        operator: operatorEqualTo,\n        operand: value\n    };\n}\nfunction startsWith(value) {\n    return {\n        operator: operatorStartsWith,\n        operand: value\n    };\n}\nfunction operatorEqualTo(first, second) {\n    return first.toUpperCase() === second.toUpperCase();\n}\nfunction operatorStartsWith(first, second) {\n    return second.toUpperCase().indexOf(first.toUpperCase()) === 0;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mammoth/lib/styles/document-matchers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mammoth/lib/styles/html-paths.js":
/*!*******************************************************!*\
  !*** ./node_modules/mammoth/lib/styles/html-paths.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var _ = __webpack_require__(/*! underscore */ \"(rsc)/./node_modules/underscore/modules/index-all.js\");\nvar html = __webpack_require__(/*! ../html */ \"(rsc)/./node_modules/mammoth/lib/html/index.js\");\nexports.topLevelElement = topLevelElement;\nexports.elements = elements;\nexports.element = element;\nfunction topLevelElement(tagName, attributes) {\n    return elements([\n        element(tagName, attributes, {\n            fresh: true\n        })\n    ]);\n}\nfunction elements(elementStyles) {\n    return new HtmlPath(elementStyles.map(function(elementStyle) {\n        if (_.isString(elementStyle)) {\n            return element(elementStyle);\n        } else {\n            return elementStyle;\n        }\n    }));\n}\nfunction HtmlPath(elements) {\n    this._elements = elements;\n}\nHtmlPath.prototype.wrap = function wrap(children) {\n    var result = children();\n    for(var index = this._elements.length - 1; index >= 0; index--){\n        result = this._elements[index].wrapNodes(result);\n    }\n    return result;\n};\nfunction element(tagName, attributes, options) {\n    options = options || {};\n    return new Element(tagName, attributes, options);\n}\nfunction Element(tagName, attributes, options) {\n    var tagNames = {};\n    if (_.isArray(tagName)) {\n        tagName.forEach(function(tagName) {\n            tagNames[tagName] = true;\n        });\n        tagName = tagName[0];\n    } else {\n        tagNames[tagName] = true;\n    }\n    this.tagName = tagName;\n    this.tagNames = tagNames;\n    this.attributes = attributes || {};\n    this.fresh = options.fresh;\n    this.separator = options.separator;\n}\nElement.prototype.matchesElement = function(element) {\n    return this.tagNames[element.tagName] && _.isEqual(this.attributes || {}, element.attributes || {});\n};\nElement.prototype.wrap = function wrap(generateNodes) {\n    return this.wrapNodes(generateNodes());\n};\nElement.prototype.wrapNodes = function wrapNodes(nodes) {\n    return [\n        html.elementWithTag(this, nodes)\n    ];\n};\nexports.empty = elements([]);\nexports.ignore = {\n    wrap: function() {\n        return [];\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvc3R5bGVzL2h0bWwtcGF0aHMuanMiLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsSUFBSUMsbUJBQU9BLENBQUMsd0VBQVk7QUFFNUIsSUFBSUMsT0FBT0QsbUJBQU9BLENBQUMsK0RBQVM7QUFFNUJFLHVCQUF1QixHQUFHQztBQUMxQkQsZ0JBQWdCLEdBQUdFO0FBQ25CRixlQUFlLEdBQUdHO0FBRWxCLFNBQVNGLGdCQUFnQkcsT0FBTyxFQUFFQyxVQUFVO0lBQ3hDLE9BQU9ILFNBQVM7UUFBQ0MsUUFBUUMsU0FBU0MsWUFBWTtZQUFDQyxPQUFPO1FBQUk7S0FBRztBQUNqRTtBQUVBLFNBQVNKLFNBQVNLLGFBQWE7SUFDM0IsT0FBTyxJQUFJQyxTQUFTRCxjQUFjRSxHQUFHLENBQUMsU0FBU0MsWUFBWTtRQUN2RCxJQUFJYixFQUFFYyxRQUFRLENBQUNELGVBQWU7WUFDMUIsT0FBT1AsUUFBUU87UUFDbkIsT0FBTztZQUNILE9BQU9BO1FBQ1g7SUFDSjtBQUNKO0FBRUEsU0FBU0YsU0FBU04sUUFBUTtJQUN0QixJQUFJLENBQUNVLFNBQVMsR0FBR1Y7QUFDckI7QUFFQU0sU0FBU0ssU0FBUyxDQUFDQyxJQUFJLEdBQUcsU0FBU0EsS0FBS0MsUUFBUTtJQUM1QyxJQUFJQyxTQUFTRDtJQUNiLElBQUssSUFBSUUsUUFBUSxJQUFJLENBQUNMLFNBQVMsQ0FBQ00sTUFBTSxHQUFHLEdBQUdELFNBQVMsR0FBR0EsUUFBUztRQUM3REQsU0FBUyxJQUFJLENBQUNKLFNBQVMsQ0FBQ0ssTUFBTSxDQUFDRSxTQUFTLENBQUNIO0lBQzdDO0lBQ0EsT0FBT0E7QUFDWDtBQUVBLFNBQVNiLFFBQVFDLE9BQU8sRUFBRUMsVUFBVSxFQUFFZSxPQUFPO0lBQ3pDQSxVQUFVQSxXQUFXLENBQUM7SUFDdEIsT0FBTyxJQUFJQyxRQUFRakIsU0FBU0MsWUFBWWU7QUFDNUM7QUFFQSxTQUFTQyxRQUFRakIsT0FBTyxFQUFFQyxVQUFVLEVBQUVlLE9BQU87SUFDekMsSUFBSUUsV0FBVyxDQUFDO0lBQ2hCLElBQUl6QixFQUFFMEIsT0FBTyxDQUFDbkIsVUFBVTtRQUNwQkEsUUFBUW9CLE9BQU8sQ0FBQyxTQUFTcEIsT0FBTztZQUM1QmtCLFFBQVEsQ0FBQ2xCLFFBQVEsR0FBRztRQUN4QjtRQUNBQSxVQUFVQSxPQUFPLENBQUMsRUFBRTtJQUN4QixPQUFPO1FBQ0hrQixRQUFRLENBQUNsQixRQUFRLEdBQUc7SUFDeEI7SUFFQSxJQUFJLENBQUNBLE9BQU8sR0FBR0E7SUFDZixJQUFJLENBQUNrQixRQUFRLEdBQUdBO0lBQ2hCLElBQUksQ0FBQ2pCLFVBQVUsR0FBR0EsY0FBYyxDQUFDO0lBQ2pDLElBQUksQ0FBQ0MsS0FBSyxHQUFHYyxRQUFRZCxLQUFLO0lBQzFCLElBQUksQ0FBQ21CLFNBQVMsR0FBR0wsUUFBUUssU0FBUztBQUN0QztBQUVBSixRQUFRUixTQUFTLENBQUNhLGNBQWMsR0FBRyxTQUFTdkIsT0FBTztJQUMvQyxPQUFPLElBQUksQ0FBQ21CLFFBQVEsQ0FBQ25CLFFBQVFDLE9BQU8sQ0FBQyxJQUFJUCxFQUFFOEIsT0FBTyxDQUFDLElBQUksQ0FBQ3RCLFVBQVUsSUFBSSxDQUFDLEdBQUdGLFFBQVFFLFVBQVUsSUFBSSxDQUFDO0FBQ3JHO0FBRUFnQixRQUFRUixTQUFTLENBQUNDLElBQUksR0FBRyxTQUFTQSxLQUFLYyxhQUFhO0lBQ2hELE9BQU8sSUFBSSxDQUFDVCxTQUFTLENBQUNTO0FBQzFCO0FBRUFQLFFBQVFSLFNBQVMsQ0FBQ00sU0FBUyxHQUFHLFNBQVNBLFVBQVVVLEtBQUs7SUFDbEQsT0FBTztRQUFDOUIsS0FBSytCLGNBQWMsQ0FBQyxJQUFJLEVBQUVEO0tBQU87QUFDN0M7QUFFQTdCLGFBQWEsR0FBR0UsU0FBUyxFQUFFO0FBQzNCRixjQUFjLEdBQUc7SUFDYmMsTUFBTTtRQUNGLE9BQU8sRUFBRTtJQUNiO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN1bWVidWlsZGVyLWFpLy4vbm9kZV9tb2R1bGVzL21hbW1vdGgvbGliL3N0eWxlcy9odG1sLXBhdGhzLmpzPzZlZDkiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF8gPSByZXF1aXJlKFwidW5kZXJzY29yZVwiKTtcblxudmFyIGh0bWwgPSByZXF1aXJlKFwiLi4vaHRtbFwiKTtcblxuZXhwb3J0cy50b3BMZXZlbEVsZW1lbnQgPSB0b3BMZXZlbEVsZW1lbnQ7XG5leHBvcnRzLmVsZW1lbnRzID0gZWxlbWVudHM7XG5leHBvcnRzLmVsZW1lbnQgPSBlbGVtZW50O1xuXG5mdW5jdGlvbiB0b3BMZXZlbEVsZW1lbnQodGFnTmFtZSwgYXR0cmlidXRlcykge1xuICAgIHJldHVybiBlbGVtZW50cyhbZWxlbWVudCh0YWdOYW1lLCBhdHRyaWJ1dGVzLCB7ZnJlc2g6IHRydWV9KV0pO1xufVxuXG5mdW5jdGlvbiBlbGVtZW50cyhlbGVtZW50U3R5bGVzKSB7XG4gICAgcmV0dXJuIG5ldyBIdG1sUGF0aChlbGVtZW50U3R5bGVzLm1hcChmdW5jdGlvbihlbGVtZW50U3R5bGUpIHtcbiAgICAgICAgaWYgKF8uaXNTdHJpbmcoZWxlbWVudFN0eWxlKSkge1xuICAgICAgICAgICAgcmV0dXJuIGVsZW1lbnQoZWxlbWVudFN0eWxlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBlbGVtZW50U3R5bGU7XG4gICAgICAgIH1cbiAgICB9KSk7XG59XG5cbmZ1bmN0aW9uIEh0bWxQYXRoKGVsZW1lbnRzKSB7XG4gICAgdGhpcy5fZWxlbWVudHMgPSBlbGVtZW50cztcbn1cblxuSHRtbFBhdGgucHJvdG90eXBlLndyYXAgPSBmdW5jdGlvbiB3cmFwKGNoaWxkcmVuKSB7XG4gICAgdmFyIHJlc3VsdCA9IGNoaWxkcmVuKCk7XG4gICAgZm9yICh2YXIgaW5kZXggPSB0aGlzLl9lbGVtZW50cy5sZW5ndGggLSAxOyBpbmRleCA+PSAwOyBpbmRleC0tKSB7XG4gICAgICAgIHJlc3VsdCA9IHRoaXMuX2VsZW1lbnRzW2luZGV4XS53cmFwTm9kZXMocmVzdWx0KTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG5cbmZ1bmN0aW9uIGVsZW1lbnQodGFnTmFtZSwgYXR0cmlidXRlcywgb3B0aW9ucykge1xuICAgIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICAgIHJldHVybiBuZXcgRWxlbWVudCh0YWdOYW1lLCBhdHRyaWJ1dGVzLCBvcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gRWxlbWVudCh0YWdOYW1lLCBhdHRyaWJ1dGVzLCBvcHRpb25zKSB7XG4gICAgdmFyIHRhZ05hbWVzID0ge307XG4gICAgaWYgKF8uaXNBcnJheSh0YWdOYW1lKSkge1xuICAgICAgICB0YWdOYW1lLmZvckVhY2goZnVuY3Rpb24odGFnTmFtZSkge1xuICAgICAgICAgICAgdGFnTmFtZXNbdGFnTmFtZV0gPSB0cnVlO1xuICAgICAgICB9KTtcbiAgICAgICAgdGFnTmFtZSA9IHRhZ05hbWVbMF07XG4gICAgfSBlbHNlIHtcbiAgICAgICAgdGFnTmFtZXNbdGFnTmFtZV0gPSB0cnVlO1xuICAgIH1cbiAgICBcbiAgICB0aGlzLnRhZ05hbWUgPSB0YWdOYW1lO1xuICAgIHRoaXMudGFnTmFtZXMgPSB0YWdOYW1lcztcbiAgICB0aGlzLmF0dHJpYnV0ZXMgPSBhdHRyaWJ1dGVzIHx8IHt9O1xuICAgIHRoaXMuZnJlc2ggPSBvcHRpb25zLmZyZXNoO1xuICAgIHRoaXMuc2VwYXJhdG9yID0gb3B0aW9ucy5zZXBhcmF0b3I7XG59XG5cbkVsZW1lbnQucHJvdG90eXBlLm1hdGNoZXNFbGVtZW50ID0gZnVuY3Rpb24oZWxlbWVudCkge1xuICAgIHJldHVybiB0aGlzLnRhZ05hbWVzW2VsZW1lbnQudGFnTmFtZV0gJiYgXy5pc0VxdWFsKHRoaXMuYXR0cmlidXRlcyB8fCB7fSwgZWxlbWVudC5hdHRyaWJ1dGVzIHx8IHt9KTtcbn07XG5cbkVsZW1lbnQucHJvdG90eXBlLndyYXAgPSBmdW5jdGlvbiB3cmFwKGdlbmVyYXRlTm9kZXMpIHtcbiAgICByZXR1cm4gdGhpcy53cmFwTm9kZXMoZ2VuZXJhdGVOb2RlcygpKTtcbn07XG5cbkVsZW1lbnQucHJvdG90eXBlLndyYXBOb2RlcyA9IGZ1bmN0aW9uIHdyYXBOb2Rlcyhub2Rlcykge1xuICAgIHJldHVybiBbaHRtbC5lbGVtZW50V2l0aFRhZyh0aGlzLCBub2RlcyldO1xufTtcblxuZXhwb3J0cy5lbXB0eSA9IGVsZW1lbnRzKFtdKTtcbmV4cG9ydHMuaWdub3JlID0ge1xuICAgIHdyYXA6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gW107XG4gICAgfVxufTtcbiJdLCJuYW1lcyI6WyJfIiwicmVxdWlyZSIsImh0bWwiLCJleHBvcnRzIiwidG9wTGV2ZWxFbGVtZW50IiwiZWxlbWVudHMiLCJlbGVtZW50IiwidGFnTmFtZSIsImF0dHJpYnV0ZXMiLCJmcmVzaCIsImVsZW1lbnRTdHlsZXMiLCJIdG1sUGF0aCIsIm1hcCIsImVsZW1lbnRTdHlsZSIsImlzU3RyaW5nIiwiX2VsZW1lbnRzIiwicHJvdG90eXBlIiwid3JhcCIsImNoaWxkcmVuIiwicmVzdWx0IiwiaW5kZXgiLCJsZW5ndGgiLCJ3cmFwTm9kZXMiLCJvcHRpb25zIiwiRWxlbWVudCIsInRhZ05hbWVzIiwiaXNBcnJheSIsImZvckVhY2giLCJzZXBhcmF0b3IiLCJtYXRjaGVzRWxlbWVudCIsImlzRXF1YWwiLCJnZW5lcmF0ZU5vZGVzIiwibm9kZXMiLCJlbGVtZW50V2l0aFRhZyIsImVtcHR5IiwiaWdub3JlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mammoth/lib/styles/html-paths.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mammoth/lib/styles/parser/tokeniser.js":
/*!*************************************************************!*\
  !*** ./node_modules/mammoth/lib/styles/parser/tokeniser.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var lop = __webpack_require__(/*! lop */ \"(rsc)/./node_modules/lop/index.js\");\nvar RegexTokeniser = lop.RegexTokeniser;\nexports.tokenise = tokenise;\nvar stringPrefix = \"'((?:\\\\\\\\.|[^'])*)\";\nfunction tokenise(string) {\n    var identifierCharacter = \"(?:[a-zA-Z\\\\-_]|\\\\\\\\.)\";\n    var tokeniser = new RegexTokeniser([\n        {\n            name: \"identifier\",\n            regex: new RegExp(\"(\" + identifierCharacter + \"(?:\" + identifierCharacter + \"|[0-9])*)\")\n        },\n        {\n            name: \"dot\",\n            regex: /\\./\n        },\n        {\n            name: \"colon\",\n            regex: /:/\n        },\n        {\n            name: \"gt\",\n            regex: />/\n        },\n        {\n            name: \"whitespace\",\n            regex: /\\s+/\n        },\n        {\n            name: \"arrow\",\n            regex: /=>/\n        },\n        {\n            name: \"equals\",\n            regex: /=/\n        },\n        {\n            name: \"startsWith\",\n            regex: /\\^=/\n        },\n        {\n            name: \"open-paren\",\n            regex: /\\(/\n        },\n        {\n            name: \"close-paren\",\n            regex: /\\)/\n        },\n        {\n            name: \"open-square-bracket\",\n            regex: /\\[/\n        },\n        {\n            name: \"close-square-bracket\",\n            regex: /\\]/\n        },\n        {\n            name: \"string\",\n            regex: new RegExp(stringPrefix + \"'\")\n        },\n        {\n            name: \"unterminated-string\",\n            regex: new RegExp(stringPrefix)\n        },\n        {\n            name: \"integer\",\n            regex: /([0-9]+)/\n        },\n        {\n            name: \"choice\",\n            regex: /\\|/\n        },\n        {\n            name: \"bang\",\n            regex: /(!)/\n        }\n    ]);\n    return tokeniser.tokenise(string);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvc3R5bGVzL3BhcnNlci90b2tlbmlzZXIuanMiLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsTUFBTUMsbUJBQU9BLENBQUMsOENBQUs7QUFDdkIsSUFBSUMsaUJBQWlCRixJQUFJRSxjQUFjO0FBRXZDQyxnQkFBZ0IsR0FBR0M7QUFFbkIsSUFBSUMsZUFBZTtBQUVuQixTQUFTRCxTQUFTRSxNQUFNO0lBQ3BCLElBQUlDLHNCQUFzQjtJQUMxQixJQUFJQyxZQUFZLElBQUlOLGVBQWU7UUFDL0I7WUFBQ08sTUFBTTtZQUFjQyxPQUFPLElBQUlDLE9BQU8sTUFBTUosc0JBQXNCLFFBQVFBLHNCQUFzQjtRQUFZO1FBQzdHO1lBQUNFLE1BQU07WUFBT0MsT0FBTztRQUFJO1FBQ3pCO1lBQUNELE1BQU07WUFBU0MsT0FBTztRQUFHO1FBQzFCO1lBQUNELE1BQU07WUFBTUMsT0FBTztRQUFHO1FBQ3ZCO1lBQUNELE1BQU07WUFBY0MsT0FBTztRQUFLO1FBQ2pDO1lBQUNELE1BQU07WUFBU0MsT0FBTztRQUFJO1FBQzNCO1lBQUNELE1BQU07WUFBVUMsT0FBTztRQUFHO1FBQzNCO1lBQUNELE1BQU07WUFBY0MsT0FBTztRQUFLO1FBQ2pDO1lBQUNELE1BQU07WUFBY0MsT0FBTztRQUFJO1FBQ2hDO1lBQUNELE1BQU07WUFBZUMsT0FBTztRQUFJO1FBQ2pDO1lBQUNELE1BQU07WUFBdUJDLE9BQU87UUFBSTtRQUN6QztZQUFDRCxNQUFNO1lBQXdCQyxPQUFPO1FBQUk7UUFDMUM7WUFBQ0QsTUFBTTtZQUFVQyxPQUFPLElBQUlDLE9BQU9OLGVBQWU7UUFBSTtRQUN0RDtZQUFDSSxNQUFNO1lBQXVCQyxPQUFPLElBQUlDLE9BQU9OO1FBQWE7UUFDN0Q7WUFBQ0ksTUFBTTtZQUFXQyxPQUFPO1FBQVU7UUFDbkM7WUFBQ0QsTUFBTTtZQUFVQyxPQUFPO1FBQUk7UUFDNUI7WUFBQ0QsTUFBTTtZQUFRQyxPQUFPO1FBQUs7S0FDOUI7SUFDRCxPQUFPRixVQUFVSixRQUFRLENBQUNFO0FBQzlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdW1lYnVpbGRlci1haS8uL25vZGVfbW9kdWxlcy9tYW1tb3RoL2xpYi9zdHlsZXMvcGFyc2VyL3Rva2VuaXNlci5qcz8yMzA2Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBsb3AgPSByZXF1aXJlKFwibG9wXCIpO1xudmFyIFJlZ2V4VG9rZW5pc2VyID0gbG9wLlJlZ2V4VG9rZW5pc2VyO1xuXG5leHBvcnRzLnRva2VuaXNlID0gdG9rZW5pc2U7XG5cbnZhciBzdHJpbmdQcmVmaXggPSBcIicoKD86XFxcXFxcXFwufFteJ10pKilcIjtcblxuZnVuY3Rpb24gdG9rZW5pc2Uoc3RyaW5nKSB7XG4gICAgdmFyIGlkZW50aWZpZXJDaGFyYWN0ZXIgPSBcIig/OlthLXpBLVpcXFxcLV9dfFxcXFxcXFxcLilcIjtcbiAgICB2YXIgdG9rZW5pc2VyID0gbmV3IFJlZ2V4VG9rZW5pc2VyKFtcbiAgICAgICAge25hbWU6IFwiaWRlbnRpZmllclwiLCByZWdleDogbmV3IFJlZ0V4cChcIihcIiArIGlkZW50aWZpZXJDaGFyYWN0ZXIgKyBcIig/OlwiICsgaWRlbnRpZmllckNoYXJhY3RlciArIFwifFswLTldKSopXCIpfSxcbiAgICAgICAge25hbWU6IFwiZG90XCIsIHJlZ2V4OiAvXFwuL30sXG4gICAgICAgIHtuYW1lOiBcImNvbG9uXCIsIHJlZ2V4OiAvOi99LFxuICAgICAgICB7bmFtZTogXCJndFwiLCByZWdleDogLz4vfSxcbiAgICAgICAge25hbWU6IFwid2hpdGVzcGFjZVwiLCByZWdleDogL1xccysvfSxcbiAgICAgICAge25hbWU6IFwiYXJyb3dcIiwgcmVnZXg6IC89Pi99LFxuICAgICAgICB7bmFtZTogXCJlcXVhbHNcIiwgcmVnZXg6IC89L30sXG4gICAgICAgIHtuYW1lOiBcInN0YXJ0c1dpdGhcIiwgcmVnZXg6IC9cXF49L30sXG4gICAgICAgIHtuYW1lOiBcIm9wZW4tcGFyZW5cIiwgcmVnZXg6IC9cXCgvfSxcbiAgICAgICAge25hbWU6IFwiY2xvc2UtcGFyZW5cIiwgcmVnZXg6IC9cXCkvfSxcbiAgICAgICAge25hbWU6IFwib3Blbi1zcXVhcmUtYnJhY2tldFwiLCByZWdleDogL1xcWy99LFxuICAgICAgICB7bmFtZTogXCJjbG9zZS1zcXVhcmUtYnJhY2tldFwiLCByZWdleDogL1xcXS99LFxuICAgICAgICB7bmFtZTogXCJzdHJpbmdcIiwgcmVnZXg6IG5ldyBSZWdFeHAoc3RyaW5nUHJlZml4ICsgXCInXCIpfSxcbiAgICAgICAge25hbWU6IFwidW50ZXJtaW5hdGVkLXN0cmluZ1wiLCByZWdleDogbmV3IFJlZ0V4cChzdHJpbmdQcmVmaXgpfSxcbiAgICAgICAge25hbWU6IFwiaW50ZWdlclwiLCByZWdleDogLyhbMC05XSspL30sXG4gICAgICAgIHtuYW1lOiBcImNob2ljZVwiLCByZWdleDogL1xcfC99LFxuICAgICAgICB7bmFtZTogXCJiYW5nXCIsIHJlZ2V4OiAvKCEpL31cbiAgICBdKTtcbiAgICByZXR1cm4gdG9rZW5pc2VyLnRva2VuaXNlKHN0cmluZyk7XG59XG4iXSwibmFtZXMiOlsibG9wIiwicmVxdWlyZSIsIlJlZ2V4VG9rZW5pc2VyIiwiZXhwb3J0cyIsInRva2VuaXNlIiwic3RyaW5nUHJlZml4Iiwic3RyaW5nIiwiaWRlbnRpZmllckNoYXJhY3RlciIsInRva2VuaXNlciIsIm5hbWUiLCJyZWdleCIsIlJlZ0V4cCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mammoth/lib/styles/parser/tokeniser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mammoth/lib/transforms.js":
/*!************************************************!*\
  !*** ./node_modules/mammoth/lib/transforms.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var _ = __webpack_require__(/*! underscore */ \"(rsc)/./node_modules/underscore/modules/index-all.js\");\nexports.paragraph = paragraph;\nexports.run = run;\nexports._elements = elements;\nexports.getDescendantsOfType = getDescendantsOfType;\nexports.getDescendants = getDescendants;\nfunction paragraph(transform) {\n    return elementsOfType(\"paragraph\", transform);\n}\nfunction run(transform) {\n    return elementsOfType(\"run\", transform);\n}\nfunction elementsOfType(elementType, transform) {\n    return elements(function(element) {\n        if (element.type === elementType) {\n            return transform(element);\n        } else {\n            return element;\n        }\n    });\n}\nfunction elements(transform) {\n    return function transformElement(element) {\n        if (element.children) {\n            var children = _.map(element.children, transformElement);\n            element = _.extend(element, {\n                children: children\n            });\n        }\n        return transform(element);\n    };\n}\nfunction getDescendantsOfType(element, type) {\n    return getDescendants(element).filter(function(descendant) {\n        return descendant.type === type;\n    });\n}\nfunction getDescendants(element) {\n    var descendants = [];\n    visitDescendants(element, function(descendant) {\n        descendants.push(descendant);\n    });\n    return descendants;\n}\nfunction visitDescendants(element, visit) {\n    if (element.children) {\n        element.children.forEach(function(child) {\n            visitDescendants(child, visit);\n            visit(child);\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvdHJhbnNmb3Jtcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxJQUFJQyxtQkFBT0EsQ0FBQyx3RUFBWTtBQUU1QkMsaUJBQWlCLEdBQUdDO0FBQ3BCRCxXQUFXLEdBQUdFO0FBQ2RGLGlCQUFpQixHQUFHSTtBQUNwQkosNEJBQTRCLEdBQUdLO0FBQy9CTCxzQkFBc0IsR0FBR007QUFFekIsU0FBU0wsVUFBVU0sU0FBUztJQUN4QixPQUFPQyxlQUFlLGFBQWFEO0FBQ3ZDO0FBRUEsU0FBU0wsSUFBSUssU0FBUztJQUNsQixPQUFPQyxlQUFlLE9BQU9EO0FBQ2pDO0FBRUEsU0FBU0MsZUFBZUMsV0FBVyxFQUFFRixTQUFTO0lBQzFDLE9BQU9ILFNBQVMsU0FBU00sT0FBTztRQUM1QixJQUFJQSxRQUFRQyxJQUFJLEtBQUtGLGFBQWE7WUFDOUIsT0FBT0YsVUFBVUc7UUFDckIsT0FBTztZQUNILE9BQU9BO1FBQ1g7SUFDSjtBQUNKO0FBRUEsU0FBU04sU0FBU0csU0FBUztJQUN2QixPQUFPLFNBQVNLLGlCQUFpQkYsT0FBTztRQUNwQyxJQUFJQSxRQUFRRyxRQUFRLEVBQUU7WUFDbEIsSUFBSUEsV0FBV2YsRUFBRWdCLEdBQUcsQ0FBQ0osUUFBUUcsUUFBUSxFQUFFRDtZQUN2Q0YsVUFBVVosRUFBRWlCLE1BQU0sQ0FBQ0wsU0FBUztnQkFBQ0csVUFBVUE7WUFBUTtRQUNuRDtRQUNBLE9BQU9OLFVBQVVHO0lBQ3JCO0FBQ0o7QUFHQSxTQUFTTCxxQkFBcUJLLE9BQU8sRUFBRUMsSUFBSTtJQUN2QyxPQUFPTCxlQUFlSSxTQUFTTSxNQUFNLENBQUMsU0FBU0MsVUFBVTtRQUNyRCxPQUFPQSxXQUFXTixJQUFJLEtBQUtBO0lBQy9CO0FBQ0o7QUFFQSxTQUFTTCxlQUFlSSxPQUFPO0lBQzNCLElBQUlRLGNBQWMsRUFBRTtJQUVwQkMsaUJBQWlCVCxTQUFTLFNBQVNPLFVBQVU7UUFDekNDLFlBQVlFLElBQUksQ0FBQ0g7SUFDckI7SUFFQSxPQUFPQztBQUNYO0FBRUEsU0FBU0MsaUJBQWlCVCxPQUFPLEVBQUVXLEtBQUs7SUFDcEMsSUFBSVgsUUFBUUcsUUFBUSxFQUFFO1FBQ2xCSCxRQUFRRyxRQUFRLENBQUNTLE9BQU8sQ0FBQyxTQUFTQyxLQUFLO1lBQ25DSixpQkFBaUJJLE9BQU9GO1lBQ3hCQSxNQUFNRTtRQUNWO0lBQ0o7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL3Jlc3VtZWJ1aWxkZXItYWkvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvdHJhbnNmb3Jtcy5qcz85NDYzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfID0gcmVxdWlyZShcInVuZGVyc2NvcmVcIik7XG5cbmV4cG9ydHMucGFyYWdyYXBoID0gcGFyYWdyYXBoO1xuZXhwb3J0cy5ydW4gPSBydW47XG5leHBvcnRzLl9lbGVtZW50cyA9IGVsZW1lbnRzO1xuZXhwb3J0cy5nZXREZXNjZW5kYW50c09mVHlwZSA9IGdldERlc2NlbmRhbnRzT2ZUeXBlO1xuZXhwb3J0cy5nZXREZXNjZW5kYW50cyA9IGdldERlc2NlbmRhbnRzO1xuXG5mdW5jdGlvbiBwYXJhZ3JhcGgodHJhbnNmb3JtKSB7XG4gICAgcmV0dXJuIGVsZW1lbnRzT2ZUeXBlKFwicGFyYWdyYXBoXCIsIHRyYW5zZm9ybSk7XG59XG5cbmZ1bmN0aW9uIHJ1bih0cmFuc2Zvcm0pIHtcbiAgICByZXR1cm4gZWxlbWVudHNPZlR5cGUoXCJydW5cIiwgdHJhbnNmb3JtKTtcbn1cblxuZnVuY3Rpb24gZWxlbWVudHNPZlR5cGUoZWxlbWVudFR5cGUsIHRyYW5zZm9ybSkge1xuICAgIHJldHVybiBlbGVtZW50cyhmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgICAgIGlmIChlbGVtZW50LnR5cGUgPT09IGVsZW1lbnRUeXBlKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJhbnNmb3JtKGVsZW1lbnQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIGVsZW1lbnQ7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cblxuZnVuY3Rpb24gZWxlbWVudHModHJhbnNmb3JtKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIHRyYW5zZm9ybUVsZW1lbnQoZWxlbWVudCkge1xuICAgICAgICBpZiAoZWxlbWVudC5jaGlsZHJlbikge1xuICAgICAgICAgICAgdmFyIGNoaWxkcmVuID0gXy5tYXAoZWxlbWVudC5jaGlsZHJlbiwgdHJhbnNmb3JtRWxlbWVudCk7XG4gICAgICAgICAgICBlbGVtZW50ID0gXy5leHRlbmQoZWxlbWVudCwge2NoaWxkcmVuOiBjaGlsZHJlbn0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0cmFuc2Zvcm0oZWxlbWVudCk7XG4gICAgfTtcbn1cblxuXG5mdW5jdGlvbiBnZXREZXNjZW5kYW50c09mVHlwZShlbGVtZW50LCB0eXBlKSB7XG4gICAgcmV0dXJuIGdldERlc2NlbmRhbnRzKGVsZW1lbnQpLmZpbHRlcihmdW5jdGlvbihkZXNjZW5kYW50KSB7XG4gICAgICAgIHJldHVybiBkZXNjZW5kYW50LnR5cGUgPT09IHR5cGU7XG4gICAgfSk7XG59XG5cbmZ1bmN0aW9uIGdldERlc2NlbmRhbnRzKGVsZW1lbnQpIHtcbiAgICB2YXIgZGVzY2VuZGFudHMgPSBbXTtcblxuICAgIHZpc2l0RGVzY2VuZGFudHMoZWxlbWVudCwgZnVuY3Rpb24oZGVzY2VuZGFudCkge1xuICAgICAgICBkZXNjZW5kYW50cy5wdXNoKGRlc2NlbmRhbnQpO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIGRlc2NlbmRhbnRzO1xufVxuXG5mdW5jdGlvbiB2aXNpdERlc2NlbmRhbnRzKGVsZW1lbnQsIHZpc2l0KSB7XG4gICAgaWYgKGVsZW1lbnQuY2hpbGRyZW4pIHtcbiAgICAgICAgZWxlbWVudC5jaGlsZHJlbi5mb3JFYWNoKGZ1bmN0aW9uKGNoaWxkKSB7XG4gICAgICAgICAgICB2aXNpdERlc2NlbmRhbnRzKGNoaWxkLCB2aXNpdCk7XG4gICAgICAgICAgICB2aXNpdChjaGlsZCk7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6WyJfIiwicmVxdWlyZSIsImV4cG9ydHMiLCJwYXJhZ3JhcGgiLCJydW4iLCJfZWxlbWVudHMiLCJlbGVtZW50cyIsImdldERlc2NlbmRhbnRzT2ZUeXBlIiwiZ2V0RGVzY2VuZGFudHMiLCJ0cmFuc2Zvcm0iLCJlbGVtZW50c09mVHlwZSIsImVsZW1lbnRUeXBlIiwiZWxlbWVudCIsInR5cGUiLCJ0cmFuc2Zvcm1FbGVtZW50IiwiY2hpbGRyZW4iLCJtYXAiLCJleHRlbmQiLCJmaWx0ZXIiLCJkZXNjZW5kYW50IiwiZGVzY2VuZGFudHMiLCJ2aXNpdERlc2NlbmRhbnRzIiwicHVzaCIsInZpc2l0IiwiZm9yRWFjaCIsImNoaWxkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mammoth/lib/transforms.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mammoth/lib/underline.js":
/*!***********************************************!*\
  !*** ./node_modules/mammoth/lib/underline.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var htmlPaths = __webpack_require__(/*! ./styles/html-paths */ \"(rsc)/./node_modules/mammoth/lib/styles/html-paths.js\");\nvar Html = __webpack_require__(/*! ./html */ \"(rsc)/./node_modules/mammoth/lib/html/index.js\");\nexports.element = element;\nfunction element(name) {\n    return function(html) {\n        return Html.elementWithTag(htmlPaths.element(name), [\n            html\n        ]);\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvdW5kZXJsaW5lLmpzIiwibWFwcGluZ3MiOiJBQUFBLElBQUlBLFlBQVlDLG1CQUFPQSxDQUFDLGtGQUFxQjtBQUM3QyxJQUFJQyxPQUFPRCxtQkFBT0EsQ0FBQyw4REFBUTtBQUczQkUsZUFBZSxHQUFHQztBQUVsQixTQUFTQSxRQUFRQyxJQUFJO0lBQ2pCLE9BQU8sU0FBU0MsSUFBSTtRQUNoQixPQUFPSixLQUFLSyxjQUFjLENBQUNQLFVBQVVJLE9BQU8sQ0FBQ0MsT0FBTztZQUFDQztTQUFLO0lBQzlEO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN1bWVidWlsZGVyLWFpLy4vbm9kZV9tb2R1bGVzL21hbW1vdGgvbGliL3VuZGVybGluZS5qcz8zNDg1Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBodG1sUGF0aHMgPSByZXF1aXJlKFwiLi9zdHlsZXMvaHRtbC1wYXRoc1wiKTtcbnZhciBIdG1sID0gcmVxdWlyZShcIi4vaHRtbFwiKTtcblxuXG5leHBvcnRzLmVsZW1lbnQgPSBlbGVtZW50O1xuXG5mdW5jdGlvbiBlbGVtZW50KG5hbWUpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24oaHRtbCkge1xuICAgICAgICByZXR1cm4gSHRtbC5lbGVtZW50V2l0aFRhZyhodG1sUGF0aHMuZWxlbWVudChuYW1lKSwgW2h0bWxdKTtcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbImh0bWxQYXRocyIsInJlcXVpcmUiLCJIdG1sIiwiZXhwb3J0cyIsImVsZW1lbnQiLCJuYW1lIiwiaHRtbCIsImVsZW1lbnRXaXRoVGFnIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mammoth/lib/underline.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mammoth/lib/unzip.js":
/*!*******************************************!*\
  !*** ./node_modules/mammoth/lib/unzip.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var fs = __webpack_require__(/*! fs */ \"fs\");\nvar promises = __webpack_require__(/*! ./promises */ \"(rsc)/./node_modules/mammoth/lib/promises.js\");\nvar zipfile = __webpack_require__(/*! ./zipfile */ \"(rsc)/./node_modules/mammoth/lib/zipfile.js\");\nexports.openZip = openZip;\nvar readFile = promises.promisify(fs.readFile);\nfunction openZip(options) {\n    if (options.path) {\n        return readFile(options.path).then(zipfile.openArrayBuffer);\n    } else if (options.buffer) {\n        return promises.resolve(zipfile.openArrayBuffer(options.buffer));\n    } else if (options.file) {\n        return promises.resolve(options.file);\n    } else {\n        return promises.reject(new Error(\"Could not find file in options\"));\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvdW56aXAuanMiLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsS0FBS0MsbUJBQU9BLENBQUMsY0FBSTtBQUVyQixJQUFJQyxXQUFXRCxtQkFBT0EsQ0FBQyxnRUFBWTtBQUNuQyxJQUFJRSxVQUFVRixtQkFBT0EsQ0FBQyw4REFBVztBQUVqQ0csZUFBZSxHQUFHQztBQUVsQixJQUFJQyxXQUFXSixTQUFTSyxTQUFTLENBQUNQLEdBQUdNLFFBQVE7QUFFN0MsU0FBU0QsUUFBUUcsT0FBTztJQUNwQixJQUFJQSxRQUFRQyxJQUFJLEVBQUU7UUFDZCxPQUFPSCxTQUFTRSxRQUFRQyxJQUFJLEVBQUVDLElBQUksQ0FBQ1AsUUFBUVEsZUFBZTtJQUM5RCxPQUFPLElBQUlILFFBQVFJLE1BQU0sRUFBRTtRQUN2QixPQUFPVixTQUFTVyxPQUFPLENBQUNWLFFBQVFRLGVBQWUsQ0FBQ0gsUUFBUUksTUFBTTtJQUNsRSxPQUFPLElBQUlKLFFBQVFNLElBQUksRUFBRTtRQUNyQixPQUFPWixTQUFTVyxPQUFPLENBQUNMLFFBQVFNLElBQUk7SUFDeEMsT0FBTztRQUNILE9BQU9aLFNBQVNhLE1BQU0sQ0FBQyxJQUFJQyxNQUFNO0lBQ3JDO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN1bWVidWlsZGVyLWFpLy4vbm9kZV9tb2R1bGVzL21hbW1vdGgvbGliL3VuemlwLmpzPzNjZTciXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGZzID0gcmVxdWlyZShcImZzXCIpO1xuXG52YXIgcHJvbWlzZXMgPSByZXF1aXJlKFwiLi9wcm9taXNlc1wiKTtcbnZhciB6aXBmaWxlID0gcmVxdWlyZShcIi4vemlwZmlsZVwiKTtcblxuZXhwb3J0cy5vcGVuWmlwID0gb3BlblppcDtcblxudmFyIHJlYWRGaWxlID0gcHJvbWlzZXMucHJvbWlzaWZ5KGZzLnJlYWRGaWxlKTtcblxuZnVuY3Rpb24gb3BlblppcChvcHRpb25zKSB7XG4gICAgaWYgKG9wdGlvbnMucGF0aCkge1xuICAgICAgICByZXR1cm4gcmVhZEZpbGUob3B0aW9ucy5wYXRoKS50aGVuKHppcGZpbGUub3BlbkFycmF5QnVmZmVyKTtcbiAgICB9IGVsc2UgaWYgKG9wdGlvbnMuYnVmZmVyKSB7XG4gICAgICAgIHJldHVybiBwcm9taXNlcy5yZXNvbHZlKHppcGZpbGUub3BlbkFycmF5QnVmZmVyKG9wdGlvbnMuYnVmZmVyKSk7XG4gICAgfSBlbHNlIGlmIChvcHRpb25zLmZpbGUpIHtcbiAgICAgICAgcmV0dXJuIHByb21pc2VzLnJlc29sdmUob3B0aW9ucy5maWxlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gcHJvbWlzZXMucmVqZWN0KG5ldyBFcnJvcihcIkNvdWxkIG5vdCBmaW5kIGZpbGUgaW4gb3B0aW9uc1wiKSk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbImZzIiwicmVxdWlyZSIsInByb21pc2VzIiwiemlwZmlsZSIsImV4cG9ydHMiLCJvcGVuWmlwIiwicmVhZEZpbGUiLCJwcm9taXNpZnkiLCJvcHRpb25zIiwicGF0aCIsInRoZW4iLCJvcGVuQXJyYXlCdWZmZXIiLCJidWZmZXIiLCJyZXNvbHZlIiwiZmlsZSIsInJlamVjdCIsIkVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mammoth/lib/unzip.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mammoth/lib/writers/html-writer.js":
/*!*********************************************************!*\
  !*** ./node_modules/mammoth/lib/writers/html-writer.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var _ = __webpack_require__(/*! underscore */ \"(rsc)/./node_modules/underscore/modules/index-all.js\");\nexports.writer = writer;\nfunction writer(options) {\n    options = options || {};\n    if (options.prettyPrint) {\n        return prettyWriter();\n    } else {\n        return simpleWriter();\n    }\n}\nvar indentedElements = {\n    div: true,\n    p: true,\n    ul: true,\n    li: true\n};\nfunction prettyWriter() {\n    var indentationLevel = 0;\n    var indentation = \"  \";\n    var stack = [];\n    var start = true;\n    var inText = false;\n    var writer = simpleWriter();\n    function open(tagName, attributes) {\n        if (indentedElements[tagName]) {\n            indent();\n        }\n        stack.push(tagName);\n        writer.open(tagName, attributes);\n        if (indentedElements[tagName]) {\n            indentationLevel++;\n        }\n        start = false;\n    }\n    function close(tagName) {\n        if (indentedElements[tagName]) {\n            indentationLevel--;\n            indent();\n        }\n        stack.pop();\n        writer.close(tagName);\n    }\n    function text(value) {\n        startText();\n        var text = isInPre() ? value : value.replace(\"\\n\", \"\\n\" + indentation);\n        writer.text(text);\n    }\n    function selfClosing(tagName, attributes) {\n        indent();\n        writer.selfClosing(tagName, attributes);\n    }\n    function insideIndentedElement() {\n        return stack.length === 0 || indentedElements[stack[stack.length - 1]];\n    }\n    function startText() {\n        if (!inText) {\n            indent();\n            inText = true;\n        }\n    }\n    function indent() {\n        inText = false;\n        if (!start && insideIndentedElement() && !isInPre()) {\n            writer._append(\"\\n\");\n            for(var i = 0; i < indentationLevel; i++){\n                writer._append(indentation);\n            }\n        }\n    }\n    function isInPre() {\n        return _.some(stack, function(tagName) {\n            return tagName === \"pre\";\n        });\n    }\n    return {\n        asString: writer.asString,\n        open: open,\n        close: close,\n        text: text,\n        selfClosing: selfClosing\n    };\n}\nfunction simpleWriter() {\n    var fragments = [];\n    function open(tagName, attributes) {\n        var attributeString = generateAttributeString(attributes);\n        fragments.push(\"<\" + tagName + attributeString + \">\");\n    }\n    function close(tagName) {\n        fragments.push(\"</\" + tagName + \">\");\n    }\n    function selfClosing(tagName, attributes) {\n        var attributeString = generateAttributeString(attributes);\n        fragments.push(\"<\" + tagName + attributeString + \" />\");\n    }\n    function generateAttributeString(attributes) {\n        return _.map(attributes, function(value, key) {\n            return \" \" + key + '=\"' + escapeHtmlAttribute(value) + '\"';\n        }).join(\"\");\n    }\n    function text(value) {\n        fragments.push(escapeHtmlText(value));\n    }\n    function append(html) {\n        fragments.push(html);\n    }\n    function asString() {\n        return fragments.join(\"\");\n    }\n    return {\n        asString: asString,\n        open: open,\n        close: close,\n        text: text,\n        selfClosing: selfClosing,\n        _append: append\n    };\n}\nfunction escapeHtmlText(value) {\n    return value.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n}\nfunction escapeHtmlAttribute(value) {\n    return value.replace(/&/g, \"&amp;\").replace(/\"/g, \"&quot;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mammoth/lib/writers/html-writer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mammoth/lib/writers/index.js":
/*!***************************************************!*\
  !*** ./node_modules/mammoth/lib/writers/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var htmlWriter = __webpack_require__(/*! ./html-writer */ \"(rsc)/./node_modules/mammoth/lib/writers/html-writer.js\");\nvar markdownWriter = __webpack_require__(/*! ./markdown-writer */ \"(rsc)/./node_modules/mammoth/lib/writers/markdown-writer.js\");\nexports.writer = writer;\nfunction writer(options) {\n    options = options || {};\n    if (options.outputFormat === \"markdown\") {\n        return markdownWriter.writer();\n    } else {\n        return htmlWriter.writer(options);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvd3JpdGVycy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxhQUFhQyxtQkFBT0EsQ0FBQyw4RUFBZTtBQUN4QyxJQUFJQyxpQkFBaUJELG1CQUFPQSxDQUFDLHNGQUFtQjtBQUVoREUsY0FBYyxHQUFHQztBQUdqQixTQUFTQSxPQUFPQyxPQUFPO0lBQ25CQSxVQUFVQSxXQUFXLENBQUM7SUFDdEIsSUFBSUEsUUFBUUMsWUFBWSxLQUFLLFlBQVk7UUFDckMsT0FBT0osZUFBZUUsTUFBTTtJQUNoQyxPQUFPO1FBQ0gsT0FBT0osV0FBV0ksTUFBTSxDQUFDQztJQUM3QjtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdW1lYnVpbGRlci1haS8uL25vZGVfbW9kdWxlcy9tYW1tb3RoL2xpYi93cml0ZXJzL2luZGV4LmpzPzEzYjIiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGh0bWxXcml0ZXIgPSByZXF1aXJlKFwiLi9odG1sLXdyaXRlclwiKTtcbnZhciBtYXJrZG93bldyaXRlciA9IHJlcXVpcmUoXCIuL21hcmtkb3duLXdyaXRlclwiKTtcblxuZXhwb3J0cy53cml0ZXIgPSB3cml0ZXI7XG5cblxuZnVuY3Rpb24gd3JpdGVyKG9wdGlvbnMpIHtcbiAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgICBpZiAob3B0aW9ucy5vdXRwdXRGb3JtYXQgPT09IFwibWFya2Rvd25cIikge1xuICAgICAgICByZXR1cm4gbWFya2Rvd25Xcml0ZXIud3JpdGVyKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGh0bWxXcml0ZXIud3JpdGVyKG9wdGlvbnMpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6WyJodG1sV3JpdGVyIiwicmVxdWlyZSIsIm1hcmtkb3duV3JpdGVyIiwiZXhwb3J0cyIsIndyaXRlciIsIm9wdGlvbnMiLCJvdXRwdXRGb3JtYXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mammoth/lib/writers/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mammoth/lib/writers/markdown-writer.js":
/*!*************************************************************!*\
  !*** ./node_modules/mammoth/lib/writers/markdown-writer.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var _ = __webpack_require__(/*! underscore */ \"(rsc)/./node_modules/underscore/modules/index-all.js\");\nfunction symmetricMarkdownElement(end) {\n    return markdownElement(end, end);\n}\nfunction markdownElement(start, end) {\n    return function() {\n        return {\n            start: start,\n            end: end\n        };\n    };\n}\nfunction markdownLink(attributes) {\n    var href = attributes.href || \"\";\n    if (href) {\n        return {\n            start: \"[\",\n            end: \"](\" + href + \")\",\n            anchorPosition: \"before\"\n        };\n    } else {\n        return {};\n    }\n}\nfunction markdownImage(attributes) {\n    var src = attributes.src || \"\";\n    var altText = attributes.alt || \"\";\n    if (src || altText) {\n        return {\n            start: \"![\" + altText + \"](\" + src + \")\"\n        };\n    } else {\n        return {};\n    }\n}\nfunction markdownList(options) {\n    return function(attributes, list) {\n        return {\n            start: list ? \"\\n\" : \"\",\n            end: list ? \"\" : \"\\n\",\n            list: {\n                isOrdered: options.isOrdered,\n                indent: list ? list.indent + 1 : 0,\n                count: 0\n            }\n        };\n    };\n}\nfunction markdownListItem(attributes, list, listItem) {\n    list = list || {\n        indent: 0,\n        isOrdered: false,\n        count: 0\n    };\n    list.count++;\n    listItem.hasClosed = false;\n    var bullet = list.isOrdered ? list.count + \".\" : \"-\";\n    var start = repeatString(\"\t\", list.indent) + bullet + \" \";\n    return {\n        start: start,\n        end: function() {\n            if (!listItem.hasClosed) {\n                listItem.hasClosed = true;\n                return \"\\n\";\n            }\n        }\n    };\n}\nvar htmlToMarkdown = {\n    \"p\": markdownElement(\"\", \"\\n\\n\"),\n    \"br\": markdownElement(\"\", \"  \\n\"),\n    \"ul\": markdownList({\n        isOrdered: false\n    }),\n    \"ol\": markdownList({\n        isOrdered: true\n    }),\n    \"li\": markdownListItem,\n    \"strong\": symmetricMarkdownElement(\"__\"),\n    \"em\": symmetricMarkdownElement(\"*\"),\n    \"a\": markdownLink,\n    \"img\": markdownImage\n};\n(function() {\n    for(var i = 1; i <= 6; i++){\n        htmlToMarkdown[\"h\" + i] = markdownElement(repeatString(\"#\", i) + \" \", \"\\n\\n\");\n    }\n})();\nfunction repeatString(value, count) {\n    return new Array(count + 1).join(value);\n}\nfunction markdownWriter() {\n    var fragments = [];\n    var elementStack = [];\n    var list = null;\n    var listItem = {};\n    function open(tagName, attributes) {\n        attributes = attributes || {};\n        var createElement = htmlToMarkdown[tagName] || function() {\n            return {};\n        };\n        var element = createElement(attributes, list, listItem);\n        elementStack.push({\n            end: element.end,\n            list: list\n        });\n        if (element.list) {\n            list = element.list;\n        }\n        var anchorBeforeStart = element.anchorPosition === \"before\";\n        if (anchorBeforeStart) {\n            writeAnchor(attributes);\n        }\n        fragments.push(element.start || \"\");\n        if (!anchorBeforeStart) {\n            writeAnchor(attributes);\n        }\n    }\n    function writeAnchor(attributes) {\n        if (attributes.id) {\n            fragments.push('<a id=\"' + attributes.id + '\"></a>');\n        }\n    }\n    function close(tagName) {\n        var element = elementStack.pop();\n        list = element.list;\n        var end = _.isFunction(element.end) ? element.end() : element.end;\n        fragments.push(end || \"\");\n    }\n    function selfClosing(tagName, attributes) {\n        open(tagName, attributes);\n        close(tagName);\n    }\n    function text(value) {\n        fragments.push(escapeMarkdown(value));\n    }\n    function asString() {\n        return fragments.join(\"\");\n    }\n    return {\n        asString: asString,\n        open: open,\n        close: close,\n        text: text,\n        selfClosing: selfClosing\n    };\n}\nexports.writer = markdownWriter;\nfunction escapeMarkdown(value) {\n    return value.replace(/\\\\/g, \"\\\\\\\\\").replace(/([\\`\\*_\\{\\}\\[\\]\\(\\)\\#\\+\\-\\.\\!])/g, \"\\\\$1\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mammoth/lib/writers/markdown-writer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mammoth/lib/xml/index.js":
/*!***********************************************!*\
  !*** ./node_modules/mammoth/lib/xml/index.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var nodes = __webpack_require__(/*! ./nodes */ \"(rsc)/./node_modules/mammoth/lib/xml/nodes.js\");\nexports.Element = nodes.Element;\nexports.element = nodes.element;\nexports.emptyElement = nodes.emptyElement;\nexports.text = nodes.text;\nexports.readString = __webpack_require__(/*! ./reader */ \"(rsc)/./node_modules/mammoth/lib/xml/reader.js\").readString;\nexports.writeString = __webpack_require__(/*! ./writer */ \"(rsc)/./node_modules/mammoth/lib/xml/writer.js\").writeString;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIveG1sL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBLElBQUlBLFFBQVFDLG1CQUFPQSxDQUFDLDhEQUFTO0FBRTdCQyxlQUFlLEdBQUdGLE1BQU1HLE9BQU87QUFDL0JELGVBQWUsR0FBR0YsTUFBTUksT0FBTztBQUMvQkYsb0JBQW9CLEdBQUdGLE1BQU1LLFlBQVk7QUFDekNILFlBQVksR0FBR0YsTUFBTU0sSUFBSTtBQUN6QkoscUhBQW1EO0FBQ25EQSx1SEFBcUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN1bWVidWlsZGVyLWFpLy4vbm9kZV9tb2R1bGVzL21hbW1vdGgvbGliL3htbC9pbmRleC5qcz83YzY0Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBub2RlcyA9IHJlcXVpcmUoXCIuL25vZGVzXCIpO1xuXG5leHBvcnRzLkVsZW1lbnQgPSBub2Rlcy5FbGVtZW50O1xuZXhwb3J0cy5lbGVtZW50ID0gbm9kZXMuZWxlbWVudDtcbmV4cG9ydHMuZW1wdHlFbGVtZW50ID0gbm9kZXMuZW1wdHlFbGVtZW50O1xuZXhwb3J0cy50ZXh0ID0gbm9kZXMudGV4dDtcbmV4cG9ydHMucmVhZFN0cmluZyA9IHJlcXVpcmUoXCIuL3JlYWRlclwiKS5yZWFkU3RyaW5nO1xuZXhwb3J0cy53cml0ZVN0cmluZyA9IHJlcXVpcmUoXCIuL3dyaXRlclwiKS53cml0ZVN0cmluZztcbiJdLCJuYW1lcyI6WyJub2RlcyIsInJlcXVpcmUiLCJleHBvcnRzIiwiRWxlbWVudCIsImVsZW1lbnQiLCJlbXB0eUVsZW1lbnQiLCJ0ZXh0IiwicmVhZFN0cmluZyIsIndyaXRlU3RyaW5nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mammoth/lib/xml/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mammoth/lib/xml/nodes.js":
/*!***********************************************!*\
  !*** ./node_modules/mammoth/lib/xml/nodes.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var _ = __webpack_require__(/*! underscore */ \"(rsc)/./node_modules/underscore/modules/index-all.js\");\nexports.Element = Element;\nexports.element = function(name, attributes, children) {\n    return new Element(name, attributes, children);\n};\nexports.text = function(value) {\n    return {\n        type: \"text\",\n        value: value\n    };\n};\nvar emptyElement = exports.emptyElement = {\n    first: function() {\n        return null;\n    },\n    firstOrEmpty: function() {\n        return emptyElement;\n    },\n    attributes: {},\n    children: []\n};\nfunction Element(name, attributes, children) {\n    this.type = \"element\";\n    this.name = name;\n    this.attributes = attributes || {};\n    this.children = children || [];\n}\nElement.prototype.first = function(name) {\n    return _.find(this.children, function(child) {\n        return child.name === name;\n    });\n};\nElement.prototype.firstOrEmpty = function(name) {\n    return this.first(name) || emptyElement;\n};\nElement.prototype.getElementsByTagName = function(name) {\n    var elements = _.filter(this.children, function(child) {\n        return child.name === name;\n    });\n    return toElementList(elements);\n};\nElement.prototype.text = function() {\n    if (this.children.length === 0) {\n        return \"\";\n    } else if (this.children.length !== 1 || this.children[0].type !== \"text\") {\n        throw new Error(\"Not implemented\");\n    }\n    return this.children[0].value;\n};\nvar elementListPrototype = {\n    getElementsByTagName: function(name) {\n        return toElementList(_.flatten(this.map(function(element) {\n            return element.getElementsByTagName(name);\n        }, true)));\n    }\n};\nfunction toElementList(array) {\n    return _.extend(array, elementListPrototype);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIveG1sL25vZGVzLmpzIiwibWFwcGluZ3MiOiJBQUFBLElBQUlBLElBQUlDLG1CQUFPQSxDQUFDLHdFQUFZO0FBRzVCQyxlQUFlLEdBQUdDO0FBQ2xCRCxlQUFlLEdBQUcsU0FBU0csSUFBSSxFQUFFQyxVQUFVLEVBQUVDLFFBQVE7SUFDakQsT0FBTyxJQUFJSixRQUFRRSxNQUFNQyxZQUFZQztBQUN6QztBQUNBTCxZQUFZLEdBQUcsU0FBU08sS0FBSztJQUN6QixPQUFPO1FBQ0hDLE1BQU07UUFDTkQsT0FBT0E7SUFDWDtBQUNKO0FBR0EsSUFBSUUsZUFBZVQsb0JBQW9CLEdBQUc7SUFDdENVLE9BQU87UUFDSCxPQUFPO0lBQ1g7SUFDQUMsY0FBYztRQUNWLE9BQU9GO0lBQ1g7SUFDQUwsWUFBWSxDQUFDO0lBQ2JDLFVBQVUsRUFBRTtBQUNoQjtBQUVBLFNBQVNKLFFBQVFFLElBQUksRUFBRUMsVUFBVSxFQUFFQyxRQUFRO0lBQ3ZDLElBQUksQ0FBQ0csSUFBSSxHQUFHO0lBQ1osSUFBSSxDQUFDTCxJQUFJLEdBQUdBO0lBQ1osSUFBSSxDQUFDQyxVQUFVLEdBQUdBLGNBQWMsQ0FBQztJQUNqQyxJQUFJLENBQUNDLFFBQVEsR0FBR0EsWUFBWSxFQUFFO0FBQ2xDO0FBRUFKLFFBQVFXLFNBQVMsQ0FBQ0YsS0FBSyxHQUFHLFNBQVNQLElBQUk7SUFDbkMsT0FBT0wsRUFBRWUsSUFBSSxDQUFDLElBQUksQ0FBQ1IsUUFBUSxFQUFFLFNBQVNTLEtBQUs7UUFDdkMsT0FBT0EsTUFBTVgsSUFBSSxLQUFLQTtJQUMxQjtBQUNKO0FBRUFGLFFBQVFXLFNBQVMsQ0FBQ0QsWUFBWSxHQUFHLFNBQVNSLElBQUk7SUFDMUMsT0FBTyxJQUFJLENBQUNPLEtBQUssQ0FBQ1AsU0FBU007QUFDL0I7QUFFQVIsUUFBUVcsU0FBUyxDQUFDRyxvQkFBb0IsR0FBRyxTQUFTWixJQUFJO0lBQ2xELElBQUlhLFdBQVdsQixFQUFFbUIsTUFBTSxDQUFDLElBQUksQ0FBQ1osUUFBUSxFQUFFLFNBQVNTLEtBQUs7UUFDakQsT0FBT0EsTUFBTVgsSUFBSSxLQUFLQTtJQUMxQjtJQUNBLE9BQU9lLGNBQWNGO0FBQ3pCO0FBRUFmLFFBQVFXLFNBQVMsQ0FBQ04sSUFBSSxHQUFHO0lBQ3JCLElBQUksSUFBSSxDQUFDRCxRQUFRLENBQUNjLE1BQU0sS0FBSyxHQUFHO1FBQzVCLE9BQU87SUFDWCxPQUFPLElBQUksSUFBSSxDQUFDZCxRQUFRLENBQUNjLE1BQU0sS0FBSyxLQUFLLElBQUksQ0FBQ2QsUUFBUSxDQUFDLEVBQUUsQ0FBQ0csSUFBSSxLQUFLLFFBQVE7UUFDdkUsTUFBTSxJQUFJWSxNQUFNO0lBQ3BCO0lBQ0EsT0FBTyxJQUFJLENBQUNmLFFBQVEsQ0FBQyxFQUFFLENBQUNFLEtBQUs7QUFDakM7QUFFQSxJQUFJYyx1QkFBdUI7SUFDdkJOLHNCQUFzQixTQUFTWixJQUFJO1FBQy9CLE9BQU9lLGNBQWNwQixFQUFFd0IsT0FBTyxDQUFDLElBQUksQ0FBQ0MsR0FBRyxDQUFDLFNBQVNyQixPQUFPO1lBQ3BELE9BQU9BLFFBQVFhLG9CQUFvQixDQUFDWjtRQUN4QyxHQUFHO0lBQ1A7QUFDSjtBQUVBLFNBQVNlLGNBQWNNLEtBQUs7SUFDeEIsT0FBTzFCLEVBQUUyQixNQUFNLENBQUNELE9BQU9IO0FBQzNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdW1lYnVpbGRlci1haS8uL25vZGVfbW9kdWxlcy9tYW1tb3RoL2xpYi94bWwvbm9kZXMuanM/OWI4MSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgXyA9IHJlcXVpcmUoXCJ1bmRlcnNjb3JlXCIpO1xuXG5cbmV4cG9ydHMuRWxlbWVudCA9IEVsZW1lbnQ7XG5leHBvcnRzLmVsZW1lbnQgPSBmdW5jdGlvbihuYW1lLCBhdHRyaWJ1dGVzLCBjaGlsZHJlbikge1xuICAgIHJldHVybiBuZXcgRWxlbWVudChuYW1lLCBhdHRyaWJ1dGVzLCBjaGlsZHJlbik7XG59O1xuZXhwb3J0cy50ZXh0ID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiBcInRleHRcIixcbiAgICAgICAgdmFsdWU6IHZhbHVlXG4gICAgfTtcbn07XG5cblxudmFyIGVtcHR5RWxlbWVudCA9IGV4cG9ydHMuZW1wdHlFbGVtZW50ID0ge1xuICAgIGZpcnN0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfSxcbiAgICBmaXJzdE9yRW1wdHk6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gZW1wdHlFbGVtZW50O1xuICAgIH0sXG4gICAgYXR0cmlidXRlczoge30sXG4gICAgY2hpbGRyZW46IFtdXG59O1xuXG5mdW5jdGlvbiBFbGVtZW50KG5hbWUsIGF0dHJpYnV0ZXMsIGNoaWxkcmVuKSB7XG4gICAgdGhpcy50eXBlID0gXCJlbGVtZW50XCI7XG4gICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICB0aGlzLmF0dHJpYnV0ZXMgPSBhdHRyaWJ1dGVzIHx8IHt9O1xuICAgIHRoaXMuY2hpbGRyZW4gPSBjaGlsZHJlbiB8fCBbXTtcbn1cblxuRWxlbWVudC5wcm90b3R5cGUuZmlyc3QgPSBmdW5jdGlvbihuYW1lKSB7XG4gICAgcmV0dXJuIF8uZmluZCh0aGlzLmNoaWxkcmVuLCBmdW5jdGlvbihjaGlsZCkge1xuICAgICAgICByZXR1cm4gY2hpbGQubmFtZSA9PT0gbmFtZTtcbiAgICB9KTtcbn07XG5cbkVsZW1lbnQucHJvdG90eXBlLmZpcnN0T3JFbXB0eSA9IGZ1bmN0aW9uKG5hbWUpIHtcbiAgICByZXR1cm4gdGhpcy5maXJzdChuYW1lKSB8fCBlbXB0eUVsZW1lbnQ7XG59O1xuXG5FbGVtZW50LnByb3RvdHlwZS5nZXRFbGVtZW50c0J5VGFnTmFtZSA9IGZ1bmN0aW9uKG5hbWUpIHtcbiAgICB2YXIgZWxlbWVudHMgPSBfLmZpbHRlcih0aGlzLmNoaWxkcmVuLCBmdW5jdGlvbihjaGlsZCkge1xuICAgICAgICByZXR1cm4gY2hpbGQubmFtZSA9PT0gbmFtZTtcbiAgICB9KTtcbiAgICByZXR1cm4gdG9FbGVtZW50TGlzdChlbGVtZW50cyk7XG59O1xuXG5FbGVtZW50LnByb3RvdHlwZS50ZXh0ID0gZnVuY3Rpb24oKSB7XG4gICAgaWYgKHRoaXMuY2hpbGRyZW4ubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHJldHVybiBcIlwiO1xuICAgIH0gZWxzZSBpZiAodGhpcy5jaGlsZHJlbi5sZW5ndGggIT09IDEgfHwgdGhpcy5jaGlsZHJlblswXS50eXBlICE9PSBcInRleHRcIikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJOb3QgaW1wbGVtZW50ZWRcIik7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLmNoaWxkcmVuWzBdLnZhbHVlO1xufTtcblxudmFyIGVsZW1lbnRMaXN0UHJvdG90eXBlID0ge1xuICAgIGdldEVsZW1lbnRzQnlUYWdOYW1lOiBmdW5jdGlvbihuYW1lKSB7XG4gICAgICAgIHJldHVybiB0b0VsZW1lbnRMaXN0KF8uZmxhdHRlbih0aGlzLm1hcChmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgICAgICAgICByZXR1cm4gZWxlbWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShuYW1lKTtcbiAgICAgICAgfSwgdHJ1ZSkpKTtcbiAgICB9XG59O1xuXG5mdW5jdGlvbiB0b0VsZW1lbnRMaXN0KGFycmF5KSB7XG4gICAgcmV0dXJuIF8uZXh0ZW5kKGFycmF5LCBlbGVtZW50TGlzdFByb3RvdHlwZSk7XG59XG4iXSwibmFtZXMiOlsiXyIsInJlcXVpcmUiLCJleHBvcnRzIiwiRWxlbWVudCIsImVsZW1lbnQiLCJuYW1lIiwiYXR0cmlidXRlcyIsImNoaWxkcmVuIiwidGV4dCIsInZhbHVlIiwidHlwZSIsImVtcHR5RWxlbWVudCIsImZpcnN0IiwiZmlyc3RPckVtcHR5IiwicHJvdG90eXBlIiwiZmluZCIsImNoaWxkIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJlbGVtZW50cyIsImZpbHRlciIsInRvRWxlbWVudExpc3QiLCJsZW5ndGgiLCJFcnJvciIsImVsZW1lbnRMaXN0UHJvdG90eXBlIiwiZmxhdHRlbiIsIm1hcCIsImFycmF5IiwiZXh0ZW5kIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mammoth/lib/xml/nodes.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mammoth/lib/xml/reader.js":
/*!************************************************!*\
  !*** ./node_modules/mammoth/lib/xml/reader.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var promises = __webpack_require__(/*! ../promises */ \"(rsc)/./node_modules/mammoth/lib/promises.js\");\nvar _ = __webpack_require__(/*! underscore */ \"(rsc)/./node_modules/underscore/modules/index-all.js\");\nvar xmldom = __webpack_require__(/*! ./xmldom */ \"(rsc)/./node_modules/mammoth/lib/xml/xmldom.js\");\nvar nodes = __webpack_require__(/*! ./nodes */ \"(rsc)/./node_modules/mammoth/lib/xml/nodes.js\");\nvar Element = nodes.Element;\nexports.readString = readString;\nvar Node = xmldom.Node;\nfunction readString(xmlString, namespaceMap) {\n    namespaceMap = namespaceMap || {};\n    try {\n        var document = xmldom.parseFromString(xmlString, \"text/xml\");\n    } catch (error) {\n        return promises.reject(error);\n    }\n    if (document.documentElement.tagName === \"parsererror\") {\n        return promises.resolve(new Error(document.documentElement.textContent));\n    }\n    function convertNode(node) {\n        switch(node.nodeType){\n            case Node.ELEMENT_NODE:\n                return convertElement(node);\n            case Node.TEXT_NODE:\n                return nodes.text(node.nodeValue);\n        }\n    }\n    function convertElement(element) {\n        var convertedName = convertName(element);\n        var convertedChildren = [];\n        _.forEach(element.childNodes, function(childNode) {\n            var convertedNode = convertNode(childNode);\n            if (convertedNode) {\n                convertedChildren.push(convertedNode);\n            }\n        });\n        var convertedAttributes = {};\n        _.forEach(element.attributes, function(attribute) {\n            convertedAttributes[convertName(attribute)] = attribute.value;\n        });\n        return new Element(convertedName, convertedAttributes, convertedChildren);\n    }\n    function convertName(node) {\n        if (node.namespaceURI) {\n            var mappedPrefix = namespaceMap[node.namespaceURI];\n            var prefix;\n            if (mappedPrefix) {\n                prefix = mappedPrefix + \":\";\n            } else {\n                prefix = \"{\" + node.namespaceURI + \"}\";\n            }\n            return prefix + node.localName;\n        } else {\n            return node.localName;\n        }\n    }\n    return promises.resolve(convertNode(document.documentElement));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIveG1sL3JlYWRlci5qcyIsIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxXQUFXQyxtQkFBT0EsQ0FBQyxpRUFBYTtBQUNwQyxJQUFJQyxJQUFJRCxtQkFBT0EsQ0FBQyx3RUFBWTtBQUU1QixJQUFJRSxTQUFTRixtQkFBT0EsQ0FBQyxnRUFBVTtBQUMvQixJQUFJRyxRQUFRSCxtQkFBT0EsQ0FBQyw4REFBUztBQUM3QixJQUFJSSxVQUFVRCxNQUFNQyxPQUFPO0FBRTNCQyxrQkFBa0IsR0FBR0M7QUFFckIsSUFBSUMsT0FBT0wsT0FBT0ssSUFBSTtBQUV0QixTQUFTRCxXQUFXRSxTQUFTLEVBQUVDLFlBQVk7SUFDdkNBLGVBQWVBLGdCQUFnQixDQUFDO0lBRWhDLElBQUk7UUFDQSxJQUFJQyxXQUFXUixPQUFPUyxlQUFlLENBQUNILFdBQVc7SUFDckQsRUFBRSxPQUFPSSxPQUFPO1FBQ1osT0FBT2IsU0FBU2MsTUFBTSxDQUFDRDtJQUMzQjtJQUVBLElBQUlGLFNBQVNJLGVBQWUsQ0FBQ0MsT0FBTyxLQUFLLGVBQWU7UUFDcEQsT0FBT2hCLFNBQVNpQixPQUFPLENBQUMsSUFBSUMsTUFBTVAsU0FBU0ksZUFBZSxDQUFDSSxXQUFXO0lBQzFFO0lBRUEsU0FBU0MsWUFBWUMsSUFBSTtRQUNyQixPQUFRQSxLQUFLQyxRQUFRO1lBQ3JCLEtBQUtkLEtBQUtlLFlBQVk7Z0JBQ2xCLE9BQU9DLGVBQWVIO1lBQzFCLEtBQUtiLEtBQUtpQixTQUFTO2dCQUNmLE9BQU9yQixNQUFNc0IsSUFBSSxDQUFDTCxLQUFLTSxTQUFTO1FBQ3BDO0lBQ0o7SUFFQSxTQUFTSCxlQUFlSSxPQUFPO1FBQzNCLElBQUlDLGdCQUFnQkMsWUFBWUY7UUFFaEMsSUFBSUcsb0JBQW9CLEVBQUU7UUFDMUI3QixFQUFFOEIsT0FBTyxDQUFDSixRQUFRSyxVQUFVLEVBQUUsU0FBU0MsU0FBUztZQUM1QyxJQUFJQyxnQkFBZ0JmLFlBQVljO1lBQ2hDLElBQUlDLGVBQWU7Z0JBQ2ZKLGtCQUFrQkssSUFBSSxDQUFDRDtZQUMzQjtRQUNKO1FBRUEsSUFBSUUsc0JBQXNCLENBQUM7UUFDM0JuQyxFQUFFOEIsT0FBTyxDQUFDSixRQUFRVSxVQUFVLEVBQUUsU0FBU0MsU0FBUztZQUM1Q0YsbUJBQW1CLENBQUNQLFlBQVlTLFdBQVcsR0FBR0EsVUFBVUMsS0FBSztRQUNqRTtRQUVBLE9BQU8sSUFBSW5DLFFBQVF3QixlQUFlUSxxQkFBcUJOO0lBQzNEO0lBRUEsU0FBU0QsWUFBWVQsSUFBSTtRQUNyQixJQUFJQSxLQUFLb0IsWUFBWSxFQUFFO1lBQ25CLElBQUlDLGVBQWVoQyxZQUFZLENBQUNXLEtBQUtvQixZQUFZLENBQUM7WUFDbEQsSUFBSUU7WUFDSixJQUFJRCxjQUFjO2dCQUNkQyxTQUFTRCxlQUFlO1lBQzVCLE9BQU87Z0JBQ0hDLFNBQVMsTUFBTXRCLEtBQUtvQixZQUFZLEdBQUc7WUFDdkM7WUFDQSxPQUFPRSxTQUFTdEIsS0FBS3VCLFNBQVM7UUFDbEMsT0FBTztZQUNILE9BQU92QixLQUFLdUIsU0FBUztRQUN6QjtJQUNKO0lBRUEsT0FBTzVDLFNBQVNpQixPQUFPLENBQUNHLFlBQVlULFNBQVNJLGVBQWU7QUFDaEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN1bWVidWlsZGVyLWFpLy4vbm9kZV9tb2R1bGVzL21hbW1vdGgvbGliL3htbC9yZWFkZXIuanM/NDg5ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcHJvbWlzZXMgPSByZXF1aXJlKFwiLi4vcHJvbWlzZXNcIik7XG52YXIgXyA9IHJlcXVpcmUoXCJ1bmRlcnNjb3JlXCIpO1xuXG52YXIgeG1sZG9tID0gcmVxdWlyZShcIi4veG1sZG9tXCIpO1xudmFyIG5vZGVzID0gcmVxdWlyZShcIi4vbm9kZXNcIik7XG52YXIgRWxlbWVudCA9IG5vZGVzLkVsZW1lbnQ7XG5cbmV4cG9ydHMucmVhZFN0cmluZyA9IHJlYWRTdHJpbmc7XG5cbnZhciBOb2RlID0geG1sZG9tLk5vZGU7XG5cbmZ1bmN0aW9uIHJlYWRTdHJpbmcoeG1sU3RyaW5nLCBuYW1lc3BhY2VNYXApIHtcbiAgICBuYW1lc3BhY2VNYXAgPSBuYW1lc3BhY2VNYXAgfHwge307XG5cbiAgICB0cnkge1xuICAgICAgICB2YXIgZG9jdW1lbnQgPSB4bWxkb20ucGFyc2VGcm9tU3RyaW5nKHhtbFN0cmluZywgXCJ0ZXh0L3htbFwiKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICByZXR1cm4gcHJvbWlzZXMucmVqZWN0KGVycm9yKTtcbiAgICB9XG5cbiAgICBpZiAoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnRhZ05hbWUgPT09IFwicGFyc2VyZXJyb3JcIikge1xuICAgICAgICByZXR1cm4gcHJvbWlzZXMucmVzb2x2ZShuZXcgRXJyb3IoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnRleHRDb250ZW50KSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY29udmVydE5vZGUobm9kZSkge1xuICAgICAgICBzd2l0Y2ggKG5vZGUubm9kZVR5cGUpIHtcbiAgICAgICAgY2FzZSBOb2RlLkVMRU1FTlRfTk9ERTpcbiAgICAgICAgICAgIHJldHVybiBjb252ZXJ0RWxlbWVudChub2RlKTtcbiAgICAgICAgY2FzZSBOb2RlLlRFWFRfTk9ERTpcbiAgICAgICAgICAgIHJldHVybiBub2Rlcy50ZXh0KG5vZGUubm9kZVZhbHVlKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNvbnZlcnRFbGVtZW50KGVsZW1lbnQpIHtcbiAgICAgICAgdmFyIGNvbnZlcnRlZE5hbWUgPSBjb252ZXJ0TmFtZShlbGVtZW50KTtcblxuICAgICAgICB2YXIgY29udmVydGVkQ2hpbGRyZW4gPSBbXTtcbiAgICAgICAgXy5mb3JFYWNoKGVsZW1lbnQuY2hpbGROb2RlcywgZnVuY3Rpb24oY2hpbGROb2RlKSB7XG4gICAgICAgICAgICB2YXIgY29udmVydGVkTm9kZSA9IGNvbnZlcnROb2RlKGNoaWxkTm9kZSk7XG4gICAgICAgICAgICBpZiAoY29udmVydGVkTm9kZSkge1xuICAgICAgICAgICAgICAgIGNvbnZlcnRlZENoaWxkcmVuLnB1c2goY29udmVydGVkTm9kZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHZhciBjb252ZXJ0ZWRBdHRyaWJ1dGVzID0ge307XG4gICAgICAgIF8uZm9yRWFjaChlbGVtZW50LmF0dHJpYnV0ZXMsIGZ1bmN0aW9uKGF0dHJpYnV0ZSkge1xuICAgICAgICAgICAgY29udmVydGVkQXR0cmlidXRlc1tjb252ZXJ0TmFtZShhdHRyaWJ1dGUpXSA9IGF0dHJpYnV0ZS52YWx1ZTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIG5ldyBFbGVtZW50KGNvbnZlcnRlZE5hbWUsIGNvbnZlcnRlZEF0dHJpYnV0ZXMsIGNvbnZlcnRlZENoaWxkcmVuKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjb252ZXJ0TmFtZShub2RlKSB7XG4gICAgICAgIGlmIChub2RlLm5hbWVzcGFjZVVSSSkge1xuICAgICAgICAgICAgdmFyIG1hcHBlZFByZWZpeCA9IG5hbWVzcGFjZU1hcFtub2RlLm5hbWVzcGFjZVVSSV07XG4gICAgICAgICAgICB2YXIgcHJlZml4O1xuICAgICAgICAgICAgaWYgKG1hcHBlZFByZWZpeCkge1xuICAgICAgICAgICAgICAgIHByZWZpeCA9IG1hcHBlZFByZWZpeCArIFwiOlwiO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBwcmVmaXggPSBcIntcIiArIG5vZGUubmFtZXNwYWNlVVJJICsgXCJ9XCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gcHJlZml4ICsgbm9kZS5sb2NhbE5hbWU7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gbm9kZS5sb2NhbE5hbWU7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gcHJvbWlzZXMucmVzb2x2ZShjb252ZXJ0Tm9kZShkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpKTtcbn1cbiJdLCJuYW1lcyI6WyJwcm9taXNlcyIsInJlcXVpcmUiLCJfIiwieG1sZG9tIiwibm9kZXMiLCJFbGVtZW50IiwiZXhwb3J0cyIsInJlYWRTdHJpbmciLCJOb2RlIiwieG1sU3RyaW5nIiwibmFtZXNwYWNlTWFwIiwiZG9jdW1lbnQiLCJwYXJzZUZyb21TdHJpbmciLCJlcnJvciIsInJlamVjdCIsImRvY3VtZW50RWxlbWVudCIsInRhZ05hbWUiLCJyZXNvbHZlIiwiRXJyb3IiLCJ0ZXh0Q29udGVudCIsImNvbnZlcnROb2RlIiwibm9kZSIsIm5vZGVUeXBlIiwiRUxFTUVOVF9OT0RFIiwiY29udmVydEVsZW1lbnQiLCJURVhUX05PREUiLCJ0ZXh0Iiwibm9kZVZhbHVlIiwiZWxlbWVudCIsImNvbnZlcnRlZE5hbWUiLCJjb252ZXJ0TmFtZSIsImNvbnZlcnRlZENoaWxkcmVuIiwiZm9yRWFjaCIsImNoaWxkTm9kZXMiLCJjaGlsZE5vZGUiLCJjb252ZXJ0ZWROb2RlIiwicHVzaCIsImNvbnZlcnRlZEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwiYXR0cmlidXRlIiwidmFsdWUiLCJuYW1lc3BhY2VVUkkiLCJtYXBwZWRQcmVmaXgiLCJwcmVmaXgiLCJsb2NhbE5hbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mammoth/lib/xml/reader.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mammoth/lib/xml/writer.js":
/*!************************************************!*\
  !*** ./node_modules/mammoth/lib/xml/writer.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var _ = __webpack_require__(/*! underscore */ \"(rsc)/./node_modules/underscore/modules/index-all.js\");\nvar xmlbuilder = __webpack_require__(/*! xmlbuilder */ \"(rsc)/./node_modules/xmlbuilder/lib/index.js\");\nexports.writeString = writeString;\nfunction writeString(root, namespaces) {\n    var uriToPrefix = _.invert(namespaces);\n    var nodeWriters = {\n        element: writeElement,\n        text: writeTextNode\n    };\n    function writeNode(builder, node) {\n        return nodeWriters[node.type](builder, node);\n    }\n    function writeElement(builder, element) {\n        var elementBuilder = builder.element(mapElementName(element.name), element.attributes);\n        element.children.forEach(function(child) {\n            writeNode(elementBuilder, child);\n        });\n    }\n    function mapElementName(name) {\n        var longFormMatch = /^\\{(.*)\\}(.*)$/.exec(name);\n        if (longFormMatch) {\n            var prefix = uriToPrefix[longFormMatch[1]];\n            return prefix + (prefix === \"\" ? \"\" : \":\") + longFormMatch[2];\n        } else {\n            return name;\n        }\n    }\n    function writeDocument(root) {\n        var builder = xmlbuilder.create(mapElementName(root.name), {\n            version: \"1.0\",\n            encoding: \"UTF-8\",\n            standalone: true\n        });\n        _.forEach(namespaces, function(uri, prefix) {\n            var key = \"xmlns\" + (prefix === \"\" ? \"\" : \":\" + prefix);\n            builder.attribute(key, uri);\n        });\n        root.children.forEach(function(child) {\n            writeNode(builder, child);\n        });\n        return builder.end();\n    }\n    return writeDocument(root);\n}\nfunction writeTextNode(builder, node) {\n    builder.text(node.value);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIveG1sL3dyaXRlci5qcyIsIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxJQUFJQyxtQkFBT0EsQ0FBQyx3RUFBWTtBQUM1QixJQUFJQyxhQUFhRCxtQkFBT0EsQ0FBQyxnRUFBWTtBQUdyQ0UsbUJBQW1CLEdBQUdDO0FBR3RCLFNBQVNBLFlBQVlDLElBQUksRUFBRUMsVUFBVTtJQUNqQyxJQUFJQyxjQUFjUCxFQUFFUSxNQUFNLENBQUNGO0lBRTNCLElBQUlHLGNBQWM7UUFDZEMsU0FBU0M7UUFDVEMsTUFBTUM7SUFDVjtJQUVBLFNBQVNDLFVBQVVDLE9BQU8sRUFBRUMsSUFBSTtRQUM1QixPQUFPUCxXQUFXLENBQUNPLEtBQUtDLElBQUksQ0FBQyxDQUFDRixTQUFTQztJQUMzQztJQUVBLFNBQVNMLGFBQWFJLE9BQU8sRUFBRUwsT0FBTztRQUNsQyxJQUFJUSxpQkFBaUJILFFBQVFMLE9BQU8sQ0FBQ1MsZUFBZVQsUUFBUVUsSUFBSSxHQUFHVixRQUFRVyxVQUFVO1FBQ3JGWCxRQUFRWSxRQUFRLENBQUNDLE9BQU8sQ0FBQyxTQUFTQyxLQUFLO1lBQ25DVixVQUFVSSxnQkFBZ0JNO1FBQzlCO0lBQ0o7SUFFQSxTQUFTTCxlQUFlQyxJQUFJO1FBQ3hCLElBQUlLLGdCQUFnQixpQkFBaUJDLElBQUksQ0FBQ047UUFDMUMsSUFBSUssZUFBZTtZQUNmLElBQUlFLFNBQVNwQixXQUFXLENBQUNrQixhQUFhLENBQUMsRUFBRSxDQUFDO1lBQzFDLE9BQU9FLFNBQVVBLENBQUFBLFdBQVcsS0FBSyxLQUFLLEdBQUUsSUFBS0YsYUFBYSxDQUFDLEVBQUU7UUFDakUsT0FBTztZQUNILE9BQU9MO1FBQ1g7SUFDSjtJQUVBLFNBQVNRLGNBQWN2QixJQUFJO1FBQ3ZCLElBQUlVLFVBQVViLFdBQ1QyQixNQUFNLENBQUNWLGVBQWVkLEtBQUtlLElBQUksR0FBRztZQUMvQlUsU0FBUztZQUNUQyxVQUFVO1lBQ1ZDLFlBQVk7UUFDaEI7UUFFSmhDLEVBQUV1QixPQUFPLENBQUNqQixZQUFZLFNBQVMyQixHQUFHLEVBQUVOLE1BQU07WUFDdEMsSUFBSU8sTUFBTSxVQUFXUCxDQUFBQSxXQUFXLEtBQUssS0FBSyxNQUFNQSxNQUFLO1lBQ3JEWixRQUFRb0IsU0FBUyxDQUFDRCxLQUFLRDtRQUMzQjtRQUVBNUIsS0FBS2lCLFFBQVEsQ0FBQ0MsT0FBTyxDQUFDLFNBQVNDLEtBQUs7WUFDaENWLFVBQVVDLFNBQVNTO1FBQ3ZCO1FBQ0EsT0FBT1QsUUFBUXFCLEdBQUc7SUFDdEI7SUFFQSxPQUFPUixjQUFjdkI7QUFDekI7QUFFQSxTQUFTUSxjQUFjRSxPQUFPLEVBQUVDLElBQUk7SUFDaENELFFBQVFILElBQUksQ0FBQ0ksS0FBS3FCLEtBQUs7QUFDM0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN1bWVidWlsZGVyLWFpLy4vbm9kZV9tb2R1bGVzL21hbW1vdGgvbGliL3htbC93cml0ZXIuanM/YjM2ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgXyA9IHJlcXVpcmUoXCJ1bmRlcnNjb3JlXCIpO1xudmFyIHhtbGJ1aWxkZXIgPSByZXF1aXJlKFwieG1sYnVpbGRlclwiKTtcblxuXG5leHBvcnRzLndyaXRlU3RyaW5nID0gd3JpdGVTdHJpbmc7XG5cblxuZnVuY3Rpb24gd3JpdGVTdHJpbmcocm9vdCwgbmFtZXNwYWNlcykge1xuICAgIHZhciB1cmlUb1ByZWZpeCA9IF8uaW52ZXJ0KG5hbWVzcGFjZXMpO1xuICAgIFxuICAgIHZhciBub2RlV3JpdGVycyA9IHtcbiAgICAgICAgZWxlbWVudDogd3JpdGVFbGVtZW50LFxuICAgICAgICB0ZXh0OiB3cml0ZVRleHROb2RlXG4gICAgfTtcblxuICAgIGZ1bmN0aW9uIHdyaXRlTm9kZShidWlsZGVyLCBub2RlKSB7XG4gICAgICAgIHJldHVybiBub2RlV3JpdGVyc1tub2RlLnR5cGVdKGJ1aWxkZXIsIG5vZGUpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHdyaXRlRWxlbWVudChidWlsZGVyLCBlbGVtZW50KSB7XG4gICAgICAgIHZhciBlbGVtZW50QnVpbGRlciA9IGJ1aWxkZXIuZWxlbWVudChtYXBFbGVtZW50TmFtZShlbGVtZW50Lm5hbWUpLCBlbGVtZW50LmF0dHJpYnV0ZXMpO1xuICAgICAgICBlbGVtZW50LmNoaWxkcmVuLmZvckVhY2goZnVuY3Rpb24oY2hpbGQpIHtcbiAgICAgICAgICAgIHdyaXRlTm9kZShlbGVtZW50QnVpbGRlciwgY2hpbGQpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgXG4gICAgZnVuY3Rpb24gbWFwRWxlbWVudE5hbWUobmFtZSkge1xuICAgICAgICB2YXIgbG9uZ0Zvcm1NYXRjaCA9IC9eXFx7KC4qKVxcfSguKikkLy5leGVjKG5hbWUpO1xuICAgICAgICBpZiAobG9uZ0Zvcm1NYXRjaCkge1xuICAgICAgICAgICAgdmFyIHByZWZpeCA9IHVyaVRvUHJlZml4W2xvbmdGb3JtTWF0Y2hbMV1dO1xuICAgICAgICAgICAgcmV0dXJuIHByZWZpeCArIChwcmVmaXggPT09IFwiXCIgPyBcIlwiIDogXCI6XCIpICsgbG9uZ0Zvcm1NYXRjaFsyXTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBuYW1lO1xuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIGZ1bmN0aW9uIHdyaXRlRG9jdW1lbnQocm9vdCkge1xuICAgICAgICB2YXIgYnVpbGRlciA9IHhtbGJ1aWxkZXJcbiAgICAgICAgICAgIC5jcmVhdGUobWFwRWxlbWVudE5hbWUocm9vdC5uYW1lKSwge1xuICAgICAgICAgICAgICAgIHZlcnNpb246ICcxLjAnLFxuICAgICAgICAgICAgICAgIGVuY29kaW5nOiAnVVRGLTgnLFxuICAgICAgICAgICAgICAgIHN0YW5kYWxvbmU6IHRydWVcbiAgICAgICAgICAgIH0pO1xuICAgICAgICBcbiAgICAgICAgXy5mb3JFYWNoKG5hbWVzcGFjZXMsIGZ1bmN0aW9uKHVyaSwgcHJlZml4KSB7XG4gICAgICAgICAgICB2YXIga2V5ID0gXCJ4bWxuc1wiICsgKHByZWZpeCA9PT0gXCJcIiA/IFwiXCIgOiBcIjpcIiArIHByZWZpeCk7XG4gICAgICAgICAgICBidWlsZGVyLmF0dHJpYnV0ZShrZXksIHVyaSk7XG4gICAgICAgIH0pO1xuICAgICAgICBcbiAgICAgICAgcm9vdC5jaGlsZHJlbi5mb3JFYWNoKGZ1bmN0aW9uKGNoaWxkKSB7XG4gICAgICAgICAgICB3cml0ZU5vZGUoYnVpbGRlciwgY2hpbGQpO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIGJ1aWxkZXIuZW5kKCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHdyaXRlRG9jdW1lbnQocm9vdCk7XG59XG5cbmZ1bmN0aW9uIHdyaXRlVGV4dE5vZGUoYnVpbGRlciwgbm9kZSkge1xuICAgIGJ1aWxkZXIudGV4dChub2RlLnZhbHVlKTtcbn1cbiJdLCJuYW1lcyI6WyJfIiwicmVxdWlyZSIsInhtbGJ1aWxkZXIiLCJleHBvcnRzIiwid3JpdGVTdHJpbmciLCJyb290IiwibmFtZXNwYWNlcyIsInVyaVRvUHJlZml4IiwiaW52ZXJ0Iiwibm9kZVdyaXRlcnMiLCJlbGVtZW50Iiwid3JpdGVFbGVtZW50IiwidGV4dCIsIndyaXRlVGV4dE5vZGUiLCJ3cml0ZU5vZGUiLCJidWlsZGVyIiwibm9kZSIsInR5cGUiLCJlbGVtZW50QnVpbGRlciIsIm1hcEVsZW1lbnROYW1lIiwibmFtZSIsImF0dHJpYnV0ZXMiLCJjaGlsZHJlbiIsImZvckVhY2giLCJjaGlsZCIsImxvbmdGb3JtTWF0Y2giLCJleGVjIiwicHJlZml4Iiwid3JpdGVEb2N1bWVudCIsImNyZWF0ZSIsInZlcnNpb24iLCJlbmNvZGluZyIsInN0YW5kYWxvbmUiLCJ1cmkiLCJrZXkiLCJhdHRyaWJ1dGUiLCJlbmQiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mammoth/lib/xml/writer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mammoth/lib/xml/xmldom.js":
/*!************************************************!*\
  !*** ./node_modules/mammoth/lib/xml/xmldom.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var xmldom = __webpack_require__(/*! @xmldom/xmldom */ \"(rsc)/./node_modules/@xmldom/xmldom/lib/index.js\");\nvar dom = __webpack_require__(/*! @xmldom/xmldom/lib/dom */ \"(rsc)/./node_modules/@xmldom/xmldom/lib/dom.js\");\nfunction parseFromString(string) {\n    var error = null;\n    var domParser = new xmldom.DOMParser({\n        errorHandler: function(level, message) {\n            error = {\n                level: level,\n                message: message\n            };\n        }\n    });\n    var document = domParser.parseFromString(string);\n    if (error === null) {\n        return document;\n    } else {\n        throw new Error(error.level + \": \" + error.message);\n    }\n}\nexports.parseFromString = parseFromString;\nexports.Node = dom.Node;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIveG1sL3htbGRvbS5qcyIsIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxTQUFTQyxtQkFBT0EsQ0FBQyx3RUFBZ0I7QUFDckMsSUFBSUMsTUFBTUQsbUJBQU9BLENBQUMsOEVBQXdCO0FBRTFDLFNBQVNFLGdCQUFnQkMsTUFBTTtJQUMzQixJQUFJQyxRQUFRO0lBRVosSUFBSUMsWUFBWSxJQUFJTixPQUFPTyxTQUFTLENBQUM7UUFDakNDLGNBQWMsU0FBU0MsS0FBSyxFQUFFQyxPQUFPO1lBQ2pDTCxRQUFRO2dCQUFDSSxPQUFPQTtnQkFBT0MsU0FBU0E7WUFBTztRQUMzQztJQUNKO0lBRUEsSUFBSUMsV0FBV0wsVUFBVUgsZUFBZSxDQUFDQztJQUV6QyxJQUFJQyxVQUFVLE1BQU07UUFDaEIsT0FBT007SUFDWCxPQUFPO1FBQ0gsTUFBTSxJQUFJQyxNQUFNUCxNQUFNSSxLQUFLLEdBQUcsT0FBT0osTUFBTUssT0FBTztJQUN0RDtBQUNKO0FBRUFHLHVCQUF1QixHQUFHVjtBQUMxQlUsWUFBWSxHQUFHWCxJQUFJWSxJQUFJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdW1lYnVpbGRlci1haS8uL25vZGVfbW9kdWxlcy9tYW1tb3RoL2xpYi94bWwveG1sZG9tLmpzP2ZlMTciXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHhtbGRvbSA9IHJlcXVpcmUoXCJAeG1sZG9tL3htbGRvbVwiKTtcbnZhciBkb20gPSByZXF1aXJlKFwiQHhtbGRvbS94bWxkb20vbGliL2RvbVwiKTtcblxuZnVuY3Rpb24gcGFyc2VGcm9tU3RyaW5nKHN0cmluZykge1xuICAgIHZhciBlcnJvciA9IG51bGw7XG5cbiAgICB2YXIgZG9tUGFyc2VyID0gbmV3IHhtbGRvbS5ET01QYXJzZXIoe1xuICAgICAgICBlcnJvckhhbmRsZXI6IGZ1bmN0aW9uKGxldmVsLCBtZXNzYWdlKSB7XG4gICAgICAgICAgICBlcnJvciA9IHtsZXZlbDogbGV2ZWwsIG1lc3NhZ2U6IG1lc3NhZ2V9O1xuICAgICAgICB9XG4gICAgfSk7XG5cbiAgICB2YXIgZG9jdW1lbnQgPSBkb21QYXJzZXIucGFyc2VGcm9tU3RyaW5nKHN0cmluZyk7XG5cbiAgICBpZiAoZXJyb3IgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIGRvY3VtZW50O1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihlcnJvci5sZXZlbCArIFwiOiBcIiArIGVycm9yLm1lc3NhZ2UpO1xuICAgIH1cbn1cblxuZXhwb3J0cy5wYXJzZUZyb21TdHJpbmcgPSBwYXJzZUZyb21TdHJpbmc7XG5leHBvcnRzLk5vZGUgPSBkb20uTm9kZTtcbiJdLCJuYW1lcyI6WyJ4bWxkb20iLCJyZXF1aXJlIiwiZG9tIiwicGFyc2VGcm9tU3RyaW5nIiwic3RyaW5nIiwiZXJyb3IiLCJkb21QYXJzZXIiLCJET01QYXJzZXIiLCJlcnJvckhhbmRsZXIiLCJsZXZlbCIsIm1lc3NhZ2UiLCJkb2N1bWVudCIsIkVycm9yIiwiZXhwb3J0cyIsIk5vZGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mammoth/lib/xml/xmldom.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mammoth/lib/zipfile.js":
/*!*********************************************!*\
  !*** ./node_modules/mammoth/lib/zipfile.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var base64js = __webpack_require__(/*! base64-js */ \"(rsc)/./node_modules/base64-js/index.js\");\nvar JSZip = __webpack_require__(/*! jszip */ \"(rsc)/./node_modules/jszip/lib/index.js\");\nexports.openArrayBuffer = openArrayBuffer;\nexports.splitPath = splitPath;\nexports.joinPath = joinPath;\nfunction openArrayBuffer(arrayBuffer) {\n    return JSZip.loadAsync(arrayBuffer).then(function(zipFile) {\n        function exists(name) {\n            return zipFile.file(name) !== null;\n        }\n        function read(name, encoding) {\n            return zipFile.file(name).async(\"uint8array\").then(function(array) {\n                if (encoding === \"base64\") {\n                    return base64js.fromByteArray(array);\n                } else if (encoding) {\n                    var decoder = new TextDecoder(encoding);\n                    return decoder.decode(array);\n                } else {\n                    return array;\n                }\n            });\n        }\n        function write(name, contents) {\n            zipFile.file(name, contents);\n        }\n        function toArrayBuffer() {\n            return zipFile.generateAsync({\n                type: \"arraybuffer\"\n            });\n        }\n        return {\n            exists: exists,\n            read: read,\n            write: write,\n            toArrayBuffer: toArrayBuffer\n        };\n    });\n}\nfunction splitPath(path) {\n    var lastIndex = path.lastIndexOf(\"/\");\n    if (lastIndex === -1) {\n        return {\n            dirname: \"\",\n            basename: path\n        };\n    } else {\n        return {\n            dirname: path.substring(0, lastIndex),\n            basename: path.substring(lastIndex + 1)\n        };\n    }\n}\nfunction joinPath() {\n    var nonEmptyPaths = Array.prototype.filter.call(arguments, function(path) {\n        return path;\n    });\n    var relevantPaths = [];\n    nonEmptyPaths.forEach(function(path) {\n        if (/^\\//.test(path)) {\n            relevantPaths = [\n                path\n            ];\n        } else {\n            relevantPaths.push(path);\n        }\n    });\n    return relevantPaths.join(\"/\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvemlwZmlsZS5qcyIsIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxXQUFXQyxtQkFBT0EsQ0FBQywwREFBVztBQUNsQyxJQUFJQyxRQUFRRCxtQkFBT0EsQ0FBQyxzREFBTztBQUUzQkUsdUJBQXVCLEdBQUdDO0FBQzFCRCxpQkFBaUIsR0FBR0U7QUFDcEJGLGdCQUFnQixHQUFHRztBQUVuQixTQUFTRixnQkFBZ0JHLFdBQVc7SUFDaEMsT0FBT0wsTUFBTU0sU0FBUyxDQUFDRCxhQUFhRSxJQUFJLENBQUMsU0FBU0MsT0FBTztRQUNyRCxTQUFTQyxPQUFPQyxJQUFJO1lBQ2hCLE9BQU9GLFFBQVFHLElBQUksQ0FBQ0QsVUFBVTtRQUNsQztRQUVBLFNBQVNFLEtBQUtGLElBQUksRUFBRUcsUUFBUTtZQUN4QixPQUFPTCxRQUFRRyxJQUFJLENBQUNELE1BQU1JLEtBQUssQ0FBQyxjQUFjUCxJQUFJLENBQUMsU0FBU1EsS0FBSztnQkFDN0QsSUFBSUYsYUFBYSxVQUFVO29CQUN2QixPQUFPZixTQUFTa0IsYUFBYSxDQUFDRDtnQkFDbEMsT0FBTyxJQUFJRixVQUFVO29CQUNqQixJQUFJSSxVQUFVLElBQUlDLFlBQVlMO29CQUM5QixPQUFPSSxRQUFRRSxNQUFNLENBQUNKO2dCQUMxQixPQUFPO29CQUNILE9BQU9BO2dCQUNYO1lBQ0o7UUFDSjtRQUVBLFNBQVNLLE1BQU1WLElBQUksRUFBRVcsUUFBUTtZQUN6QmIsUUFBUUcsSUFBSSxDQUFDRCxNQUFNVztRQUN2QjtRQUVBLFNBQVNDO1lBQ0wsT0FBT2QsUUFBUWUsYUFBYSxDQUFDO2dCQUFDQyxNQUFNO1lBQWE7UUFDckQ7UUFFQSxPQUFPO1lBQ0hmLFFBQVFBO1lBQ1JHLE1BQU1BO1lBQ05RLE9BQU9BO1lBQ1BFLGVBQWVBO1FBQ25CO0lBQ0o7QUFDSjtBQUVBLFNBQVNuQixVQUFVc0IsSUFBSTtJQUNuQixJQUFJQyxZQUFZRCxLQUFLRSxXQUFXLENBQUM7SUFDakMsSUFBSUQsY0FBYyxDQUFDLEdBQUc7UUFDbEIsT0FBTztZQUFDRSxTQUFTO1lBQUlDLFVBQVVKO1FBQUk7SUFDdkMsT0FBTztRQUNILE9BQU87WUFDSEcsU0FBU0gsS0FBS0ssU0FBUyxDQUFDLEdBQUdKO1lBQzNCRyxVQUFVSixLQUFLSyxTQUFTLENBQUNKLFlBQVk7UUFDekM7SUFDSjtBQUNKO0FBRUEsU0FBU3RCO0lBQ0wsSUFBSTJCLGdCQUFnQkMsTUFBTUMsU0FBUyxDQUFDQyxNQUFNLENBQUNDLElBQUksQ0FBQ0MsV0FBVyxTQUFTWCxJQUFJO1FBQ3BFLE9BQU9BO0lBQ1g7SUFFQSxJQUFJWSxnQkFBZ0IsRUFBRTtJQUV0Qk4sY0FBY08sT0FBTyxDQUFDLFNBQVNiLElBQUk7UUFDL0IsSUFBSSxNQUFNYyxJQUFJLENBQUNkLE9BQU87WUFDbEJZLGdCQUFnQjtnQkFBQ1o7YUFBSztRQUMxQixPQUFPO1lBQ0hZLGNBQWNHLElBQUksQ0FBQ2Y7UUFDdkI7SUFDSjtJQUVBLE9BQU9ZLGNBQWNJLElBQUksQ0FBQztBQUM5QiIsInNvdXJjZXMiOlsid2VicGFjazovL3Jlc3VtZWJ1aWxkZXItYWkvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvemlwZmlsZS5qcz8yZjA0Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBiYXNlNjRqcyA9IHJlcXVpcmUoXCJiYXNlNjQtanNcIik7XG52YXIgSlNaaXAgPSByZXF1aXJlKFwianN6aXBcIik7XG5cbmV4cG9ydHMub3BlbkFycmF5QnVmZmVyID0gb3BlbkFycmF5QnVmZmVyO1xuZXhwb3J0cy5zcGxpdFBhdGggPSBzcGxpdFBhdGg7XG5leHBvcnRzLmpvaW5QYXRoID0gam9pblBhdGg7XG5cbmZ1bmN0aW9uIG9wZW5BcnJheUJ1ZmZlcihhcnJheUJ1ZmZlcikge1xuICAgIHJldHVybiBKU1ppcC5sb2FkQXN5bmMoYXJyYXlCdWZmZXIpLnRoZW4oZnVuY3Rpb24oemlwRmlsZSkge1xuICAgICAgICBmdW5jdGlvbiBleGlzdHMobmFtZSkge1xuICAgICAgICAgICAgcmV0dXJuIHppcEZpbGUuZmlsZShuYW1lKSAhPT0gbnVsbDtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIHJlYWQobmFtZSwgZW5jb2RpbmcpIHtcbiAgICAgICAgICAgIHJldHVybiB6aXBGaWxlLmZpbGUobmFtZSkuYXN5bmMoXCJ1aW50OGFycmF5XCIpLnRoZW4oZnVuY3Rpb24oYXJyYXkpIHtcbiAgICAgICAgICAgICAgICBpZiAoZW5jb2RpbmcgPT09IFwiYmFzZTY0XCIpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGJhc2U2NGpzLmZyb21CeXRlQXJyYXkoYXJyYXkpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoZW5jb2RpbmcpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGRlY29kZXIgPSBuZXcgVGV4dERlY29kZXIoZW5jb2RpbmcpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZGVjb2Rlci5kZWNvZGUoYXJyYXkpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBhcnJheTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIHdyaXRlKG5hbWUsIGNvbnRlbnRzKSB7XG4gICAgICAgICAgICB6aXBGaWxlLmZpbGUobmFtZSwgY29udGVudHMpO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gdG9BcnJheUJ1ZmZlcigpIHtcbiAgICAgICAgICAgIHJldHVybiB6aXBGaWxlLmdlbmVyYXRlQXN5bmMoe3R5cGU6IFwiYXJyYXlidWZmZXJcIn0pO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGV4aXN0czogZXhpc3RzLFxuICAgICAgICAgICAgcmVhZDogcmVhZCxcbiAgICAgICAgICAgIHdyaXRlOiB3cml0ZSxcbiAgICAgICAgICAgIHRvQXJyYXlCdWZmZXI6IHRvQXJyYXlCdWZmZXJcbiAgICAgICAgfTtcbiAgICB9KTtcbn1cblxuZnVuY3Rpb24gc3BsaXRQYXRoKHBhdGgpIHtcbiAgICB2YXIgbGFzdEluZGV4ID0gcGF0aC5sYXN0SW5kZXhPZihcIi9cIik7XG4gICAgaWYgKGxhc3RJbmRleCA9PT0gLTEpIHtcbiAgICAgICAgcmV0dXJuIHtkaXJuYW1lOiBcIlwiLCBiYXNlbmFtZTogcGF0aH07XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGRpcm5hbWU6IHBhdGguc3Vic3RyaW5nKDAsIGxhc3RJbmRleCksXG4gICAgICAgICAgICBiYXNlbmFtZTogcGF0aC5zdWJzdHJpbmcobGFzdEluZGV4ICsgMSlcbiAgICAgICAgfTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGpvaW5QYXRoKCkge1xuICAgIHZhciBub25FbXB0eVBhdGhzID0gQXJyYXkucHJvdG90eXBlLmZpbHRlci5jYWxsKGFyZ3VtZW50cywgZnVuY3Rpb24ocGF0aCkge1xuICAgICAgICByZXR1cm4gcGF0aDtcbiAgICB9KTtcblxuICAgIHZhciByZWxldmFudFBhdGhzID0gW107XG5cbiAgICBub25FbXB0eVBhdGhzLmZvckVhY2goZnVuY3Rpb24ocGF0aCkge1xuICAgICAgICBpZiAoL15cXC8vLnRlc3QocGF0aCkpIHtcbiAgICAgICAgICAgIHJlbGV2YW50UGF0aHMgPSBbcGF0aF07XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZWxldmFudFBhdGhzLnB1c2gocGF0aCk7XG4gICAgICAgIH1cbiAgICB9KTtcblxuICAgIHJldHVybiByZWxldmFudFBhdGhzLmpvaW4oXCIvXCIpO1xufVxuIl0sIm5hbWVzIjpbImJhc2U2NGpzIiwicmVxdWlyZSIsIkpTWmlwIiwiZXhwb3J0cyIsIm9wZW5BcnJheUJ1ZmZlciIsInNwbGl0UGF0aCIsImpvaW5QYXRoIiwiYXJyYXlCdWZmZXIiLCJsb2FkQXN5bmMiLCJ0aGVuIiwiemlwRmlsZSIsImV4aXN0cyIsIm5hbWUiLCJmaWxlIiwicmVhZCIsImVuY29kaW5nIiwiYXN5bmMiLCJhcnJheSIsImZyb21CeXRlQXJyYXkiLCJkZWNvZGVyIiwiVGV4dERlY29kZXIiLCJkZWNvZGUiLCJ3cml0ZSIsImNvbnRlbnRzIiwidG9BcnJheUJ1ZmZlciIsImdlbmVyYXRlQXN5bmMiLCJ0eXBlIiwicGF0aCIsImxhc3RJbmRleCIsImxhc3RJbmRleE9mIiwiZGlybmFtZSIsImJhc2VuYW1lIiwic3Vic3RyaW5nIiwibm9uRW1wdHlQYXRocyIsIkFycmF5IiwicHJvdG90eXBlIiwiZmlsdGVyIiwiY2FsbCIsImFyZ3VtZW50cyIsInJlbGV2YW50UGF0aHMiLCJmb3JFYWNoIiwidGVzdCIsInB1c2giLCJqb2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mammoth/lib/zipfile.js\n");

/***/ })

};
;